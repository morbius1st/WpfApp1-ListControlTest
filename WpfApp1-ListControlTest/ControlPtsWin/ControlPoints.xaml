<Window Name="ctrlPts" Title="{Binding WinTitle}"
	x:Class="WpfApp1_ListControlTest.ControlPtsWin.ControlPoints"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controlPts="clr-namespace:WpfApp1_ListControlTest.ControlPtsWin"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WpfApp1_ListControlTest"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:validation="clr-namespace:WpfApp1_ListControlTest.ControlPtsWin"
	Width="1189.6"
	Height="730"
	d:DataContext="{d:DesignInstance Type=controlPts:ControlPoints,
																	 IsDesignTimeCreatable=True}"
	DataContext="{Binding ElementName=ctrlPts}"
	mc:Ignorable="d"
	Background="#FF2C2C2C"
	>

	<!--  d:DataContext="{Binding  -->
	<!--  Source={d:DesignInstance Type=controlPts:ControlPoints, IsDesignTimeCreatable=True}}"  -->

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="..\WpfResources\MasterColorList.xaml" />
				<ResourceDictionary Source="..\WpfResources\VisualStates.xaml" />
				<ResourceDictionary Source="ControlPointsResources.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<validation:ControlPointXYZConverter x:Key="xyzConverter" />
			<validation:ControlPointSlopeConverter x:Key="slopeConverter" />
			<validation:PointTemplateSelector x:Key="pointTemplateSelector" />

			<!--#region +Values-->
			<sys:Int32 x:Key="pointRow">
				0
			</sys:Int32>
			<sys:Int32 x:Key="valueRow">
				2
			</sys:Int32>

			<sys:Int32 x:Key="detailValueRow">
				0
			</sys:Int32>
			<sys:Int32 x:Key="detailInfoRow">
				1
			</sys:Int32>
			<sys:Int32 x:Key="editPanelRow">
				2
			</sys:Int32>

			<sys:Int32 x:Key="btnRow">
				0
			</sys:Int32>
			<sys:Int32 x:Key="msgRow">
				1
			</sys:Int32>

			<GridLength x:Key="hdrRowHeight">
				18
			</GridLength>
			<GridLength x:Key="dtlRowHeightTop">
				18
			</GridLength>
			<GridLength x:Key="dtlRowHeightBottom">
				18
			</GridLength>

			<GridLength x:Key="editPnlRowHeightTop">
				32
			</GridLength>
			<GridLength x:Key="editPnlRowHeightBottom">
				*
			</GridLength>

			<GridLength x:Key="col00">
				*
			</GridLength>
			<GridLength x:Key="col01">
				*
			</GridLength>
			<GridLength x:Key="col02">
				*
			</GridLength>
			<GridLength x:Key="col03">
				*
			</GridLength>
			<GridLength x:Key="col04">
				*
			</GridLength>
			<GridLength x:Key="col05">
				*
			</GridLength>
			<GridLength x:Key="col06">
				*
			</GridLength>
			<GridLength x:Key="col07">
				*
			</GridLength>
			<GridLength x:Key="col08">
				17
			</GridLength>
			<!--#endregion-->

			<!--#region +Styles-->

			<!--  general  -->

			<!--  main header  -->

			<Style x:Key="lblMainHeader"
				TargetType="{x:Type Label}"
				>
				<Setter Property="Foreground" Value="White" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Padding" Value="8,0,0,2" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="bdrMainHdrTop"
				TargetType="Border"
				>
				<Setter Property="BorderBrush" Value="{StaticResource bdrColor}" />
				<Setter Property="BorderThickness" Value="0,0,1,1" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style x:Key="bdrMainHdrBottom"
				TargetType="Border"
				>
				<Setter Property="BorderBrush" Value="{StaticResource bdrColor}" />
				<Setter Property="BorderThickness" Value="0,0,1,0" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style x:Key="pointRowMainHdrBdr"
				BasedOn="{StaticResource bdrMainHdrTop}"
				TargetType="Border"
				>
				<Setter Property="Grid.Row" Value="{StaticResource pointRow}" />
			</Style>

			<Style x:Key="valueRowMainHdrBdr"
				BasedOn="{StaticResource bdrMainHdrBottom}"
				TargetType="Border"
				>
				<Setter Property="Grid.Row" Value="{StaticResource valueRow}" />
			</Style>

			<!--  end point header  -->

			<Style x:Key="endHeaderLbl"
				TargetType="{x:Type Label}"
				>
				<Setter Property="Foreground" Value="White" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Padding" Value="8,0,0,2" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="endDetailLbl"
				BasedOn="{StaticResource endHeaderLbl}"
				TargetType="{x:Type Label}"
				>
				<Setter Property="Foreground" Value="Black" />

			</Style>

			<Style x:Key="pointTitle"
				BasedOn="{StaticResource bdrMainHdrTop}"
				TargetType="Border"
				>
				<Setter Property="Background" Value="{StaticResource endPointHdrBkg}" />
				<Setter Property="BorderBrush" Value="{StaticResource endPointBdr}" />
			</Style>

			<Style x:Key="endHdrTopBdr"
				BasedOn="{StaticResource bdrMainHdrTop}"
				TargetType="Border"
				>
				<Setter Property="Background" Value="{StaticResource endPointDtlBkg}" />
				<Setter Property="BorderBrush" Value="{StaticResource endPointBdr}" />
			</Style>

			<Style x:Key="endHdrBottomBdr"
				BasedOn="{StaticResource bdrMainHdrBottom}"
				TargetType="Border"
				>
				<Setter Property="Background" Value="{StaticResource endPointDtlBkg}" />
				<Setter Property="BorderBrush" Value="{StaticResource endPointBdr}" />


			</Style>

			<!--  edit panel  -->

			<Style x:Key="editPanel"
				TargetType="Grid"
				>
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Visibility" Value="Visible" />

				<Style.Triggers>
					<DataTrigger Binding="{Binding IsBeingEdited, Mode=OneWay}"
						Value="true"
						>
						<Setter Property="Visibility" Value="Visible" />
					</DataTrigger>
					<!-- <DataTrigger Binding="{Binding Slope}" Value="asdf"> -->
					<!-- 	<Setter Property="Background" Value="Red"/> -->
					<!--  <Setter Property="Visibility"  -->
					<!--  Value="Visible"/>  -->
					<!-- </DataTrigger> -->
				</Style.Triggers>
			</Style>

			<!--  detail  -->

			<Style x:Key="tbkDetail"
				TargetType="{x:Type TextBlock}"
				>
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Padding" Value="4,2,2,5" />
				<Setter Property="TextAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
			</Style>

			<!-- <Setter Property="IsHitTestVisible" Value="False"/> -->
			<!-- <Setter Property="IsHitTestVisible" Value="True"/> -->

			<Style x:Key="tbxValue"
				TargetType="{x:Type TextBox}"
				>
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="BorderBrush" Value="{StaticResource disabledBkg}" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<!-- <EventSetter Event="GotFocus" Handler="tbxXYZ_OnGotFocus"/> -->
				<!-- <EventSetter Event="LostFocus" Handler="tbxXYZ_OnLostFocus"/> -->
				<Setter Property="IsEnabled" Value="False" />
				<Setter Property="Foreground" Value="{StaticResource disabledText}" />
				<Setter Property="Background" Value="{StaticResource disabledBkg}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}}"
						Value="True"
						>
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Foreground" Value="{StaticResource enabledText}" />
						<Setter Property="Background" Value="{StaticResource enabledBkg}" />
						<Setter Property="BorderBrush" Value="{StaticResource enabledBkg}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="bdrDetailTop"
				TargetType="Border"
				>
				<Setter Property="BorderBrush" Value="{StaticResource bdrColor}" />
				<Setter Property="BorderThickness" Value="0,0,1,1" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style x:Key="bdrDetailBottom"
				TargetType="Border"
				>
				<Setter Property="BorderBrush" Value="{StaticResource bdrColor}" />
				<Setter Property="BorderThickness" Value="0,0,1,0" />
				<Setter Property="Margin" Value="0,0,0,0.25" />
			</Style>

			<Style x:Key="pointRowDetailBdr"
				BasedOn="{StaticResource bdrDetailTop}"
				TargetType="Border"
				>
				<Setter Property="Grid.Row" Value="{StaticResource pointRow}" />
			</Style>

			<Style x:Key="valueRowDetailBdr"
				BasedOn="{StaticResource bdrDetailBottom}"
				TargetType="Border"
				>
				<Setter Property="Grid.Row" Value="{StaticResource valueRow}" />
			</Style>

			<!--#endregion-->

			<!--#region +start point template-->
			<ControlTemplate x:Key="startPoint">
				<Grid
					d:DesignWidth="500"
				>
					<Grid.ColumnDefinitions>
						<!--  0  -->
						<ColumnDefinition Width="{StaticResource col00}" />
						<!--  1  -->
						<ColumnDefinition Width="{StaticResource col01}" />
						<!--  2  -->
						<ColumnDefinition Width="{StaticResource col02}" />
						<!--  3  -->
						<ColumnDefinition Width="{StaticResource col03}" />
						<!--  4  -->
						<ColumnDefinition Width="{StaticResource col04}" />
						<!--  5  -->
						<ColumnDefinition Width="{StaticResource col05}" />
						<!--  6  -->
						<ColumnDefinition Width="{StaticResource col06}" />
						<!--  7  -->
						<ColumnDefinition Width="{StaticResource col07}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="{StaticResource hdrRowHeight}" />
					</Grid.RowDefinitions>

					<Border Grid.Row="0"
						Grid.Column="0"
						Grid.ColumnSpan="2"
						Style="{StaticResource endHdrBottomBdr}"
						>
						<Label Content="{Binding StartX}"
							Style="{StaticResource endDetailLbl}"
							/>
					</Border>

					<Border Grid.Row="0"
						Grid.Column="2"
						Grid.ColumnSpan="2"
						Style="{StaticResource endHdrBottomBdr}"
						>
						<Label Content="{Binding StartY}"
							Style="{StaticResource endDetailLbl}"
							/>
					</Border>

					<Border Grid.Row="0"
						Grid.Column="4"
						Grid.ColumnSpan="2"
						Style="{StaticResource endHdrBottomBdr}"
						>
						<Label Content="{Binding StartZ}"
							Style="{StaticResource endDetailLbl}"
							/>
					</Border>

					<Border Grid.Row="0"
						Grid.Column="6"
						Grid.ColumnSpan="1"
						Style="{StaticResource pointTitle}"
						>
						<Label Content=""
							Style="{StaticResource endHeaderLbl}"
							/>
					</Border>

					<Border Grid.Row="0"
						Grid.Column="7"
						Grid.ColumnSpan="1"
						Style="{StaticResource pointTitle}"
						>
						<Label Content="Start Point"
							Style="{StaticResource endHeaderLbl}"
							/>
					</Border>

				</Grid>
			</ControlTemplate>
			<!--#endregion-->

			<!--#region +Header Control Template-->
			<ControlTemplate x:Key="headerControlTemplate">
				<!--  perimeter border  -->
				<Border Margin="0,0,0,0"
					BorderThickness="0"
					d:DesignWidth="600"
					>

					<!--#region +Header & Presenter-->
					<!--  whole panel  -->
					<DockPanel LastChildFill="True"
						Background="{StaticResource dockpnlBkg}"
						>

						<!--#region main header + end point-->
						<Grid Margin="0"
							VerticalAlignment="Top"
							DockPanel.Dock="Top"
							Background="{StaticResource dkBkgBdr}"
							>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="18.5" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="41" />
								<RowDefinition Height="40" />
							</Grid.RowDefinitions>

							<!--#region +Main header (description)-->
							<Border Grid.Row="0"
								Grid.Column="0"
								Margin="0,0,0,-1.5"
								BorderThickness="0,0,0,8"
								BorderBrush="{StaticResource shadow}"
								>
								<Grid Margin="0,0,0,-1"
									DockPanel.Dock="Top"
									Background="{StaticResource hdrUsedBkg}"
									>
									<Grid.ColumnDefinitions>
										<!--  0  -->
										<ColumnDefinition Width="{StaticResource col00}" />
										<!--  1  -->
										<ColumnDefinition Width="{StaticResource col01}" />
										<!--  2  -->
										<ColumnDefinition Width="{StaticResource col02}" />
										<!--  3  -->
										<ColumnDefinition Width="{StaticResource col03}" />
										<!--  4  -->
										<ColumnDefinition Width="{StaticResource col04}" />
										<!--  5  -->
										<ColumnDefinition Width="{StaticResource col05}" />
										<!--  6  -->
										<ColumnDefinition Width="{StaticResource col06}" />
										<!--  7  -->
										<ColumnDefinition Width="{StaticResource col07}" />

									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="{StaticResource hdrRowHeight}" />
										<RowDefinition Height="{StaticResource hdrRowHeight}" />

									</Grid.RowDefinitions>

									<!--  main header  -->
									<!--#region +Point Row titles-->

									<Border Grid.Column="0"
										Grid.ColumnSpan="2"
										Style="{StaticResource pointRowMainHdrBdr}"
										>
										<Label Content="X"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>
									<Border Grid.Column="2"
										Grid.ColumnSpan="2"
										Style="{StaticResource pointRowMainHdrBdr}"
										>
										<Label Content="Y"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>
									<Border Grid.Column="4"
										Grid.ColumnSpan="2"
										Style="{StaticResource pointRowMainHdrBdr}"
										>
										<Label Content="Z"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>

									<Border Grid.Column="6"
										Grid.ColumnSpan="2"
										Style="{StaticResource pointRowMainHdrBdr}"
										>
										<Label Content="Slope"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>

									<!--#endregion-->

									<!--#region +Value Row titles-->

									<Border Grid.Column="0"
										Background="{StaticResource hdrUnusedBkg}"
										Style="{StaticResource valueRowMainHdrBdr}"
										/>

									<Border Grid.Column="1"
										Grid.ColumnSpan="2"
										Style="{StaticResource valueRowMainHdrBdr}"
										>
										<Label Content="Delta XY"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>

									<Border Grid.Column="3"
										Grid.ColumnSpan="2"
										Style="{StaticResource valueRowMainHdrBdr}"
										>
										<Label Content="Delta XYZ"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>

									<Border Grid.Column="5"
										Grid.ColumnSpan="2"
										BorderThickness="0"
										Style="{StaticResource valueRowMainHdrBdr}"
										>
										<Label Content="Delta Z"
											Style="{StaticResource lblMainHeader}"
											/>
									</Border>

									<Border Grid.Column="7"
										Background="{StaticResource hdrUnusedBkg}"
										BorderThickness="0,0,0,1"
										Style="{StaticResource valueRowMainHdrBdr}"
										/>

									<!--#endregion-->

								</Grid>
							</Border>
						<!--#endregion-->

							<!--#region +end point values-->
							<Border Grid.Row="1"
								Margin="0,0,0,-2"
								VerticalAlignment="top"
								DockPanel.Dock="top"
								Background="{StaticResource endPointUnusedBkg}"
								BorderThickness="0,0,0,7"
								BorderBrush="{StaticResource shadow}"
								>
								<Grid>
									<Grid.ColumnDefinitions>
										<!--  0  -->
										<ColumnDefinition Width="{StaticResource col00}" />
										<!--  1  -->
										<ColumnDefinition Width="{StaticResource col01}" />
										<!--  2  -->
										<ColumnDefinition Width="{StaticResource col02}" />
										<!--  3  -->
										<ColumnDefinition Width="{StaticResource col03}" />
										<!--  4  -->
										<ColumnDefinition Width="{StaticResource col04}" />
										<!--  5  -->
										<ColumnDefinition Width="{StaticResource col05}" />
										<!--  6  -->
										<ColumnDefinition Width="{StaticResource col06}" />
										<!--  7  -->
										<ColumnDefinition Width="{StaticResource col07}" />

									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="{StaticResource hdrRowHeight}" />
										<RowDefinition Height="{StaticResource hdrRowHeight}" />
									</Grid.RowDefinitions>

									<!--  end point row  -->

									<Border Grid.Row="0"
										Grid.Column="0"
										Grid.ColumnSpan="2"
										Style="{StaticResource endHdrTopBdr}"
										>
										<Label Content="{Binding EndX}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>

									<Border Grid.Row="0"
										Grid.Column="2"
										Grid.ColumnSpan="2"
										Style="{StaticResource endHdrTopBdr}"
										>
										<Label Content="{Binding EndY}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>

									<Border Grid.Row="0"
										Grid.Column="4"
										Grid.ColumnSpan="2"
										Style="{StaticResource endHdrTopBdr}"
										>
										<Label Content="{Binding EndZ}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>

									<Border Grid.Row="0"
										Grid.Column="6"
										Grid.ColumnSpan="2"
										BorderThickness="0,0,1,1"
										Style="{StaticResource endHdrBottomBdr}"
										>
										<Label Content="{Binding EndSlope}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>


									<Border Grid.Row="1"
										Grid.Column="0"
										BorderThickness="0,0,1,1"
										Style="{StaticResource pointTitle}"
										>
										<Label Content=""
											Style="{StaticResource endHeaderLbl}"
											/>
									</Border>

									<Border Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2"
										Style="{StaticResource endHdrBottomBdr}"
										>
										<Label Content="{Binding EndDeltaXY}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>

									<Border Grid.Row="1"
										Grid.Column="3"
										Grid.ColumnSpan="2"
										Style="{StaticResource endHdrBottomBdr}"
										>
										<Label Content="{Binding EndDeltaXYZ}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>


									<Border Grid.Row="1"
										Grid.Column="5"
										Grid.ColumnSpan="2"
										BorderThickness="0,0,0,1"
										Style="{StaticResource endHdrBottomBdr}"
										>
										<Label Content="{Binding EndDeltaZ}"
											Style="{StaticResource endDetailLbl}"
											/>
									</Border>

									<Border Grid.Row="1"
										Grid.Column="7"
										Grid.ColumnSpan="1"
										BorderThickness="0,0,0,1"
										Style="{StaticResource pointTitle}"
										>
										<Label Content="End Point"
											Style="{StaticResource endHeaderLbl}"
											/>
									</Border>



								</Grid>
							</Border>
							<!--  end end point header  -->
							<!--#endregion-->

							<!--#region +scroll bar column-->
							<Border Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								BorderThickness="1,0,0,1"
								BorderBrush="{StaticResource bdrColor}"
								/>
							<!--#endregion-->

						</Grid>
						<!--  end main header  -->

						<!--#endregion-->

						<!--#region +Item Presentation-->
						<!--  present the list box values  -->
						<ScrollViewer VerticalScrollBarVisibility="Visible">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<ItemsPresenter Margin="-6,0,-5,0" />
								<ContentControl Grid.Row="1"
									Margin="0,2,0,0"
									VerticalAlignment="Top"
									Template="{StaticResource startPoint}"
									/>
							</Grid>
						</ScrollViewer>
						<!--  end  -->
						<!--#endregion-->

					</DockPanel>
					<!--  end of dock panel  -->
					<!--#endregion-->

				</Border>
				<!--  end perimeter border  -->

			</ControlTemplate>
			<!--#endregion-->

			<!--#region +point value row -->
			<ControlTemplate x:Key="pointValueRow">
				<Grid d:DesignWidth="400">
					<Grid.ColumnDefinitions>
						<!--  0  -->
						<ColumnDefinition Width="{StaticResource col00}" />
						<!--  1  -->
						<ColumnDefinition Width="{StaticResource col01}" />
						<!--  2  -->
						<ColumnDefinition Width="{StaticResource col02}" />
						<!--  3  -->
						<ColumnDefinition Width="{StaticResource col03}" />
						<!--  4  -->
						<ColumnDefinition Width="{StaticResource col04}" />
						<!--  5  -->
						<ColumnDefinition Width="{StaticResource col05}" />
						<!--  6  -->
						<ColumnDefinition Width="{StaticResource col06}" />
						<!--  7  -->
						<ColumnDefinition Width="{StaticResource col07}" />
					</Grid.ColumnDefinitions>

					<!--#region +X Tbx-->
					<Border Grid.Row="{StaticResource detailValueRow}"
						Grid.Column="0"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesTopEditable}">
							<TextBox x:Name="TbxXvalue"
								Tag="{Binding Path=cpConsts.Xtag, ElementName=ctrlPts}"
								Validation.Error="TbxXYZ_OnError"
								Style="{StaticResource tbxValue}"
								>
								<!--  SourceUpdated="TbxXYZ_OnSourceUpdated"  -->
								<TextBox.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="TwoWay"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True"
										NotifyOnValidationError="True"
										Path="X"
										>
										<Binding.ValidationRules>
											<validation:ControlPointXYZValidation ValidationStep="RawProposedValue" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
						</GroupBox>
					</Border>
					<!--#endregion-->

					<!--#region +Y Tbx-->
					<Border Grid.Row="{StaticResource detailValueRow}"
						Grid.Column="2"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesTopEditable}">
							<TextBox x:Name="TbxYvalue"
								Tag="{Binding Path=cpConsts.Ytag, ElementName=ctrlPts}"
								Validation.Error="TbxXYZ_OnError"
								Style="{StaticResource tbxValue}"
								>
								<!--  SourceUpdated="TbxXYZ_OnSourceUpdated"  -->
								<TextBox.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="TwoWay"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True"
										NotifyOnValidationError="True"
										Path="Y"
										>
										<Binding.ValidationRules>
											<validation:ControlPointXYZValidation ValidationStep="RawProposedValue" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>
						</GroupBox>
					</Border>
					<!--#endregion-->

					<!--#region +Z Tbx-->
					<Border Grid.Row="{StaticResource detailValueRow}"
						Grid.Column="4"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesTopEditable}">
							<TextBox x:Name="TbxZvalue"
								Tag="{Binding Path=cpConsts.Ztag, ElementName=ctrlPts}"
								Validation.Error="TbxXYZ_OnError"
								Style="{StaticResource tbxValue}"
								>
								<!--  SourceUpdated="TbxXYZ_OnSourceUpdated"  -->
								<TextBox.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="TwoWay"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True"
										NotifyOnValidationError="True"
										Path="Z"
										>
										<Binding.ValidationRules>
											<validation:ControlPointXYZValidation ValidationStep="RawProposedValue" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>

						</GroupBox>
					</Border>
					<!--#endregion-->

					<!--#region +Slope-->
					<Border Grid.Row="{StaticResource detailValueRow}"
						Grid.Column="6"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{DynamicResource grpBxColoredSidesTopEditable}">
							<TextBox x:Name="tbxSlope"
								Tag="{Binding Path=cpConsts.Stag, ElementName=ctrlPts}"
								Validation.Error="TbxSlope_OnError"
								Style="{StaticResource tbxValue}"
								>
								<!--  SourceUpdated="TbxSlope_OnSourceUpdated"  -->
								<TextBox.Text>
									<Binding Converter="{StaticResource slopeConverter}"
										Mode="TwoWay"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True"
										NotifyOnValidationError="True"
										Path="Slope"
										>
										<Binding.ValidationRules>
											<validation:ControlPointSlopeValidation ValidationStep="RawProposedValue" />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>

						</GroupBox>
					</Border>
					<!--#endregion-->

				</Grid>

			</ControlTemplate>
				<!--#endregion-->

			<!--#region +point info row -->
			<ControlTemplate x:Key="pointInfoRow">
				<Grid d:DesignWidth="400">
					<Grid.ColumnDefinitions>
						<!--  0  -->
						<ColumnDefinition Width="{StaticResource col00}" />
						<!--  1  -->
						<ColumnDefinition Width="{StaticResource col01}" />
						<!--  2  -->
						<ColumnDefinition Width="{StaticResource col02}" />
						<!--  3  -->
						<ColumnDefinition Width="{StaticResource col03}" />
						<!--  4  -->
						<ColumnDefinition Width="{StaticResource col04}" />
						<!--  5  -->
						<ColumnDefinition Width="{StaticResource col05}" />
						<!--  6  -->
						<ColumnDefinition Width="{StaticResource col06}" />
						<!--  7  -->
						<ColumnDefinition Width="{StaticResource col07}" />
					</Grid.ColumnDefinitions>

					<Border Grid.Row="{StaticResource detailInfoRow}"
						Grid.Column="0"
						Background="{StaticResource detailUnusedBkg}"
						Style="{StaticResource valueRowDetailBdr}"
						>
					</Border>
						<!--<TextBlock Text="{Binding IsBeingEdited}" />-->

					<!--#region +XyValue-->
					<Border Grid.Row="{StaticResource detailInfoRow}"
						Grid.Column="1"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesBottomFixed}">
							<TextBlock Style="{DynamicResource tbkDetail}">
								<TextBlock.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="OneWay"
										NotifyOnSourceUpdated="True"
										Path="XyValue"
										/>
								</TextBlock.Text>
							</TextBlock>
						</GroupBox>
					</Border>
					<!--#endregion-->

					<!--#region +XyzValue-->
					<Border Grid.Row="{StaticResource detailInfoRow}"
						Grid.Column="3"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesBottomFixed}">
							<TextBlock Style="{DynamicResource tbkDetail}">
								<TextBlock.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="OneWay"
										NotifyOnSourceUpdated="True"
										Path="XyzValue"
										/>
								</TextBlock.Text>
							</TextBlock>
						</GroupBox>
					</Border>
					<!--#endregion-->

					<!--#region +ZDelta-->
					<Border Grid.Row="{StaticResource detailInfoRow}"
						Grid.Column="5"
						Grid.ColumnSpan="2"
						>
						<GroupBox Style="{StaticResource grpBxColoredSidesBottomFixed}">
							<TextBlock Style="{DynamicResource tbkDetail}">
								<TextBlock.Text>
									<Binding Converter="{StaticResource xyzConverter}"
										Mode="OneWay"
										NotifyOnSourceUpdated="True"
										Path="ZDelta"
										/>
								</TextBlock.Text>
							</TextBlock>
							<!--  Text="{Binding ZDelta}"  -->
						</GroupBox>
					</Border>
					<!--#endregion-->

					<Border Grid.Row="{StaticResource detailInfoRow}"
						Grid.Column="7"
						Background="{StaticResource detailUnusedBkg}"
						Style="{StaticResource valueRowDetailBdr}"
						/>
				</Grid>

			</ControlTemplate>

			<!--#endregion-->

			<!--#region +ControlTemplate editPanelTemplate -->
			<ControlTemplate x:Key="editPanelTemplate">
				<Border BorderThickness="0,1,1,1"
					BorderBrush="{StaticResource bdrColor}"
					>
					<Grid HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Style="{StaticResource editPanel}"
						>
						<Grid.ColumnDefinitions>
							<!--  0  -->
							<ColumnDefinition Width="{StaticResource col00}" />
							<!--  1  -->
							<ColumnDefinition Width="{StaticResource col01}" />
							<!--  2  -->
							<ColumnDefinition Width="{StaticResource col02}" />
							<!--  3  -->
							<ColumnDefinition Width="{StaticResource col03}" />
							<!--  4  -->
							<ColumnDefinition Width="{StaticResource col04}" />
							<!--  5  -->
							<ColumnDefinition Width="{StaticResource col05}" />
							<!--  6  -->
							<ColumnDefinition Width="{StaticResource col06}" />
							<!--  7  -->
							<ColumnDefinition Width="{StaticResource col07}" />

						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="{StaticResource editPnlRowHeightTop}" />
							<RowDefinition Height="{StaticResource editPnlRowHeightBottom}" />
						</Grid.RowDefinitions>

						<TextBlock Grid.Row="{StaticResource msgRow}"
							Grid.Column="0"
							Margin="4,0,0,0"
							VerticalAlignment="Center"
							Text="Has Revisions (X)?"
							/>

						<TextBlock Grid.Row="{StaticResource msgRow}"
							Grid.Column="1"
							Grid.ColumnSpan="1"
							Margin="4,0,0,0"
							VerticalAlignment="Center"
							Text="{Binding Path=HasRevisionX, Mode=OneWay}"
							/>

						<TextBox Grid.Row="{StaticResource msgRow}"
							Grid.Column="3"
							Grid.ColumnSpan="3"
							Margin="4,0,0,2"
							HorizontalAlignment="Left"
							Text="{Binding Path=ErrorMsg, ElementName=ctrlPts, Mode=OneWay}"
							/>


						<Button Content="Save X"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="0"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionX, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Restore X"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="1"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionX, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Save Y"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="2"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionY, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Restore Y"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="3"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionY, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Save Z"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="4"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionZ, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Restore Z"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="5"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionZ, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Save Slope"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="6"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionS, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>

						<Button Content="Restore Slope"
							Grid.Row="{StaticResource btnRow}"
							Grid.Column="7"
							Margin="6"
							BorderThickness="1"
							IsEnabled="{Binding Path=HasRevisionS, Mode=OneWay}"
							Style="{StaticResource Button.Normal.Style}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>


					</Grid>
				</Border>
			</ControlTemplate>
			<!--#endregion-->

			<!--#region +DataTemplate: pointDataTemplate -->
			<DataTemplate x:Key="pointDataTemplate">
				<Border Margin="0,0,0,-4"
					BorderThickness="0,0,0,5"
					BorderBrush="{DynamicResource shadow}"
					d:DesignWidth="400"
					>
					<Grid Margin="2,0,0,0">
						<Grid.ColumnDefinitions>
							<!--  0  -->
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="{StaticResource dtlRowHeightTop}" />
							<RowDefinition Height="{StaticResource dtlRowHeightBottom}" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<!--#region +Detail Value Row-->
						<ContentControl Grid.Row="{StaticResource detailValueRow}"
							Grid.Column="0"
							Template="{StaticResource pointValueRow}"
							/>

						<!--#endregion-->

						<!--#region +Detail info row-->
						<ContentControl Grid.Row="{StaticResource detailInfoRow}"
							Grid.Column="0"
							Template="{StaticResource pointInfoRow}"
							/>

						<!--#endregion-->

					</Grid>
				</Border>
			</DataTemplate>
			<!--#endregion-->

			<!--#region +DataTemplate: pointDataTemplateEditing -->
			<DataTemplate x:Key="pointDataTemplateEditing">
				<Border Margin="0,0,0,-4"
					BorderThickness="0,0,0,5"
					BorderBrush="{DynamicResource shadow}"
					>
					<Grid Margin="2,0,0,0">
						<Grid.ColumnDefinitions>
							<!--  0  -->
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="{StaticResource dtlRowHeightTop}" />
							<RowDefinition Height="{StaticResource dtlRowHeightBottom}" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<!--  Detail Value Row  -->
						<ContentControl Grid.Row="{StaticResource detailValueRow}"
							Grid.Column="0"
							Template="{StaticResource pointValueRow}"
							/>

						<!--  Detail info row  -->
						<ContentControl Grid.Row="{StaticResource detailInfoRow}"
							Grid.Column="0"
							Template="{StaticResource pointInfoRow}"
							/>

						<!--  EditPanel  -->
						<ContentControl Grid.Row="{StaticResource editPanelRow}"
							Grid.Column="0"
							Template="{StaticResource editPanelTemplate}"
							/>

					</Grid>
				</Border>
			</DataTemplate>

			<!--#endregion-->

			<!--#region +Selector: pointItemTemplate -->
			<DataTemplate x:Key="pointItemTemplate">
				<ContentPresenter x:Name="contentPresenter" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
					/>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding IsBeingEdited, UpdateSourceTrigger=PropertyChanged}"
						Value="True"
						>
						<Setter TargetName="contentPresenter" Property="ContentTemplate" Value="{DynamicResource pointDataTemplateEditing}" />
					</DataTrigger>
					<DataTrigger Binding="{Binding IsBeingEdited, UpdateSourceTrigger=PropertyChanged}"
						Value="false"
						>
						<Setter TargetName="contentPresenter" Property="ContentTemplate" Value="{DynamicResource pointDataTemplate}" />
					</DataTrigger>
				</DataTemplate.Triggers>

			</DataTemplate>

			<!--#endregion-->

			<!--#region +Not being used -->

			<!--<ControlTemplate x:Key="ButtonBaseControlTemplate1"
				TargetType="{x:Type Button}"
				>
				<ControlTemplate.Resources>
					<SolidColorBrush x:Key="btnDefaultBackground"
						Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}"
						/>
					-->
			<!--  isDefault state  -->
			<!--
					<SolidColorBrush x:Key="btnIsDefaultBorderBrush"
						Color="#FF0078D7"
						/>
					-->
			<!--  isMouseOver state  -->
			<!--
					<SolidColorBrush x:Key="btnIsMouseOverBackground"
						Color="#FFBEE6FD"
						/>
					<SolidColorBrush x:Key="btnIsMouseOverBorder"
						Color="#FF3C7FB1"
						/>
					-->
			<!--  isPressed state  -->
			<!--
					<SolidColorBrush x:Key="btnIsPressedBackground"
						Color="#FFC4E5F6"
						/>
					<SolidColorBrush x:Key="btnIsPressedBorder"
						Color="#FF2C628B"
						/>
					-->
			<!--  isDisabled state (IsEnabled is false)  -->
			<!--
					<SolidColorBrush x:Key="btnIsDisabledBackground"
						Color="Silver"
						/>
					<SolidColorBrush x:Key="btnIsDisabledForeground"
						Color="#FF8B8A8A"
						/>
					<SolidColorBrush x:Key="btnIsDisabledBorder"
						Color="#FF797979"
						/>
				</ControlTemplate.Resources>
				<Border x:Name="border"
					SnapsToDevicePixels="True"
					Background="{DynamicResource btnDefaultBackground}"
					BorderThickness="{TemplateBinding BorderThickness}"
					BorderBrush="{TemplateBinding BorderBrush}"
					>
					<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						ContentStringFormat="{TemplateBinding ContentStringFormat}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						Focusable="False"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="Button.IsDefaulted" Value="True">
						<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource btnIsDefaultBorderBrush}" />
					</Trigger>

					<Trigger Property="IsMouseOver" Value="true">
						<Setter TargetName="border" Property="Background" Value="{DynamicResource btnIsMouseOverBackground}" />
						<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource btnIsMouseOverBorder}" />
					</Trigger>

					<Trigger Property="IsPressed" Value="True">
						<Setter TargetName="border" Property="Background" Value="{DynamicResource btnIsPressedBackground}" />
						<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource btnIsPressedBorder}" />
					</Trigger>

					<Trigger Property="ToggleButton.IsChecked" Value="True">
						<Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
						<Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
					</Trigger>

					<Trigger Property="IsEnabled" Value="False">
						<Setter TargetName="border" Property="Background" Value="{DynamicResource btnIsDisabledBackground}" />
						<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource btnIsDisabledForeground}" />
						<Setter Property="Foreground" Value="{DynamicResource btnIsDisabledBorder}" />
					</Trigger>

				</ControlTemplate.Triggers>
			</ControlTemplate>-->


			<!--<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2"
								SnapsToDevicePixels="true"
								Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
								StrokeDashArray="1 2"
								StrokeThickness="1"
								/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
			
			<!--dont modify this -->
			<!--<Style x:Key="ListBoxItemContainerStyle1"
				TargetType="{x:Type ListBoxItem}"
				>
				<Style.Resources>
					<ResourceDictionary>
						<ResourceDictionary.MergedDictionaries />
						<SolidColorBrush x:Key="Item.MouseOver.Background"
							Color="#1F26A0DA"
							/>
						--><!--<SolidColorBrush x:Key="Item.MouseOver.Background"
							Color="#1F26A0DA"
							/>--><!--
						<SolidColorBrush x:Key="Item.MouseOver.Border"
							Color="#a826A0Da"
							/>
						<SolidColorBrush x:Key="Item.SelectedInactive.Background"
							Color="#3DDADADA"
							/>
						<SolidColorBrush x:Key="Item.SelectedInactive.Border"
							Color="#FFDADADA"
							/>
						<SolidColorBrush x:Key="Item.SelectedActive.Background"
							Color="Transparent"
							/>
						<SolidColorBrush x:Key="Item.SelectedActive.Border"
							Color="#FF26A0DA"
							/>
					</ResourceDictionary>
				</Style.Resources>
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Padding" Value="4,1" />
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border x:Name="Bd"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="true"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->

			<!--#endregion-->


		</ResourceDictionary>
	</Window.Resources>

	<Grid Margin="0,0,0,7">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="700" />
			<ColumnDefinition Width="168" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>

			<RowDefinition Height="463.2" />
			<RowDefinition />

		</Grid.RowDefinitions>

		<ListBox x:Name="listBox2"
			Height="443"
			Margin="10,10,0.8,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Top"
			HorizontalContentAlignment="Stretch"
			ItemContainerStyle="{StaticResource ListBox.Normal.ItemContainerStyle}"
			ItemTemplate="{StaticResource pointItemTemplate}"
			ItemsSource="{Binding Sx}"
			SelectionChanged="ListBox2_SelectionChanged"
			SelectionMode="Single"
			Background="LightGray"
			Template="{StaticResource headerControlTemplate}"
			Style="{StaticResource ListBox.Normal.Style}"
			/>
		<!--    -->
		<Button x:Name="btnDone" Content="Done"
			Grid.Row="1"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,9.6,9.8"
			HorizontalAlignment="right"
			VerticalAlignment="Bottom"
			HorizontalContentAlignment="Center"
			VerticalContentAlignment="Center"
			IsCancel="True"
			IsDefault="True"
			Click="BtnDone_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnTest" Content="Test"
			Grid.Row="1"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,9.6,56.8"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnTest_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<ScrollViewer Grid.Row="1"
			Grid.Column="0"
			Margin="10,4.8,0.8,9.8"
			HorizontalScrollBarVisibility="Visible"
			>
			<TextBox x:Name="messageBlock"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Text="{Binding MessageText}"
				TextWrapping="Wrap"
				Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
				/>
		</ScrollViewer>

		<Button x:Name="btnDebug" Content="Debug"
			Grid.Row="1"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,9.6,103.8"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnDebug_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnDebug_Copy" Content="{Binding StartX}"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,10.4,411.2"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnDebugSl_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnDebug_Copy1" Content="test x"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,10.4,317.2"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnDebugX_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnDebug_Copy2" Content="undo all"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,10.4,10.2"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Tag="{Binding cpConsts.Atag}"
			Click="BtnDebugUndo_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnDebug_Copy3" Content="undo slope"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,10.4,364.2"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Tag="{Binding cpConsts.Stag}"
			Click="BtnDebugUndo_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>
		<Button x:Name="btnDebug_Copy5" Content="undo x"
			Grid.Column="1"
			Width="141"
			Height="42"
			Margin="0,0,10.4,270.2"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Tag="{Binding cpConsts.Xtag}"
			Click="BtnDebugUndo_Click"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>

		<TextBlock x:Name="textBlock"
			Grid.Column="1"
			Width="83.067"
			Height="17.133"
			Margin="0,4.4,-96.6,0"
			Padding="0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			Text="item container"
			TextWrapping="Wrap"
			Foreground="WhiteSmoke"
			/>
		<TextBlock x:Name="textBlock_Copy"
			Grid.Column="1"
			Width="83.067"
			Height="17.133"
			Margin="0,5.4,-256.334,0"
			Padding="0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			Text="button"
			TextWrapping="Wrap"
			Foreground="WhiteSmoke"
			/>

		<Button Content="Normal / Static"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,28,-129.8,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			Background="{StaticResource Normal.Background}"
			Foreground="{StaticResource Normal.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.BorderBrush}"
			/>

		<Button Content="Mouse over"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,79.03,-129.8,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			Background="{StaticResource Normal.MouseOver.Background}"
			Foreground="{StaticResource Normal.MouseOver.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.MouseOver.Border}"
			/>

		<Button Content="SelectedActive"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,134.4,-129.8,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			d:LayoutOverrides="HorizontalAlignment"
			Background="{StaticResource Normal.SelectedActive.Background}"
			Foreground="{StaticResource Normal.SelectedActive.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.SelectedActive.Border}"
			/>
		<!--
			Background="Transparent"
			BorderBrush="#FF26A0DA"
		-->

		<Button Content="SelectedInactive"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,186.067,-129.8,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			d:LayoutOverrides="HorizontalAlignment"
			Background="{StaticResource Normal.SelectedInActive.Background}"
			Foreground="{StaticResource Normal.SelectedInActive.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.SelectedInActive.Border}"
			/>

		<Button Content="Disabled"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,0,-129.8,182.132"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			d:LayoutOverrides="HorizontalAlignment"
			Background="{StaticResource Normal.Disabled.Background}"
			Foreground="{StaticResource Normal.Disabled.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.Disabled.Border}"
			/>

		<Button Content="Disabled"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,0,-129.8,125.6"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			d:LayoutOverrides="HorizontalAlignment"
			IsDefault="True"
			IsEnabled="False"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			/>

		<Button Name="btn01"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,28,-293.267,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			IsDefault="True"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			>
			<TextBlock Text="Normal / Static / Default"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>

		<Button Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,79.03,-293.267,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			IsEnabled="False"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			>
			<TextBlock Text="Normal / Static / Disabled"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>

		<Button Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,134.4,-293.267,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			IsDefault="True"
			IsEnabled="False"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			>
			<TextBlock Text="Normal / Static / Default / Disabled"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>

		<Button Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,186.067,-293.267,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			d:LayoutOverrides="HorizontalAlignment"
			Background="{StaticResource Normal.Pressed.Background}"
			Foreground="{StaticResource Normal.Pressed.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.Pressed.Border}"
			>
			<TextBlock Text="Normal / Static / Pressed"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>


		<Button Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,0,-293.267,182.132"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			d:LayoutOverrides="HorizontalAlignment"
			Background="{StaticResource Normal.Pressed.Background}"
			Foreground="{StaticResource Normal.Pressed.Foreground}"
			BorderThickness="{StaticResource Normal.BorderThickness}"
			BorderBrush="{StaticResource Normal.Pressed.Border}"
			IsDefault="True"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			>
			<TextBlock Text="Normal / Static / Default / Pressed"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>

		<Button Name="testx"
			Grid.Column="1"
			Width="120"
			Height="40"
			Margin="0,0,-293.267,58"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			HorizontalContentAlignment="Center"
			IsDefault="True"
			Style="{StaticResource Button.Normal.Style}"
			Template="{StaticResource Button.Normal.ControlTemplate}"
			>
			<TextBlock Text="this is a test"
				TextAlignment="Center"
				TextWrapping="Wrap"
				/>
		</Button>






	</Grid>

</Window>
