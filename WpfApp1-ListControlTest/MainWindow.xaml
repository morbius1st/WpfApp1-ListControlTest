<Window
	x:Class="WpfApp1_ListControlTest.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WpfApp1_ListControlTest"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sampleData="clr-namespace:WpfApp1_ListControlTest.SampleData"
	x:Name="mainWindow"
	Title="MainWindow"
	Width="1447.2"
	Height="949.6"
	Background="#FF2C2C2C"
	Loaded="MainWindow_Loaded"
	mc:Ignorable="d">

	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="WpfResources/VisualStates.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<System:String x:Key="three">3</System:String>
			<System:Int32 x:Key="Three">3</System:Int32>



			<SolidColorBrush x:Key="GridBorderGrey" Color="#FF909090" />

			<SolidColorBrush x:Key="BkGrndUnUsedHdr" Color="#FF282828" />

			<SolidColorBrush x:Key="BkGrndUnUsedDetail" Color="#FF888888" />

			<LinearGradientBrush x:Key="ShadowDetail" x:Name="ShadowDetail" StartPoint="0.5,0" EndPoint="0.5,1">
				<GradientStop Offset="0.87" Color="Black" />
				<GradientStop Offset="1" Color="#FFFDFDFF" />
			</LinearGradientBrush>

			<Style x:Key="CellTxBox" TargetType="{x:Type TextBox}">
				<Setter Property="BorderThickness" Value="0,0,0,0" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Padding" Value="3" />
				<Setter Property="VerticalAlignment" Value="bottom" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="CellTxBlk" TargetType="{x:Type TextBlock}">
				<Setter Property="Background" Value="#bbbbbb" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Padding" Value="3" />
				<Setter Property="TextAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Top" />
			</Style>

			<Style x:Key="controlPointLbl" TargetType="Label">
				<Setter Property="Background" Value="#444444" />
				<Setter Property="DataContext" Value="{Binding ElementName=mainWindow}" />
				<Setter Property="FontSize" Value="16" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Height" Value="22" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="Width" Value="70" />
			</Style>

			<Style x:Key="lbHeader" TargetType="{x:Type Label}">
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="8,0,0,2" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>


			<Style x:Key="lblHeaderBdrTop" TargetType="{x:Type Border}">
				<Setter Property="BorderBrush" Value="{StaticResource GridBorderGrey}" />
				<Setter Property="BorderThickness" Value="0,0,1,0" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style x:Key="lblHeaderBdrBottom" TargetType="{x:Type Border}">
				<Setter Property="BorderBrush" Value="{StaticResource GridBorderGrey}" />
				<Setter Property="BorderThickness" Value="0,0,1,0" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
								Margin="5"
								SnapsToDevicePixels="true"
								Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
								StrokeDashArray="1 2"
								StrokeThickness="1" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
				<Style.Resources>
					<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
					<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
					<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
					<SolidColorBrush x:Key="Button.MouseOver.Border" Color="Red" />
					<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
					<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
					<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
					<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
					<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
				</Style.Resources>
				<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border
								x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="true">
								<ContentPresenter
									x:Name="contentPresenter"
									Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Focusable="False"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
									<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="PointsTestHeader" TargetType="{x:Type Border}">
				<Setter Property="BorderBrush" Value="Black" />
				<Setter Property="BorderThickness" Value="0,0,1,1" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="4,0,0,0" />
			</Style>

			<Style x:Key="PointsTestHeaderLabel" TargetType="{x:Type Label}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>


			<Style x:Key="ListBoxItemContainerStyle2" TargetType="{x:Type ListBoxItem}">

				<Style.Resources>
					<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#77FF4B" />
					<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#86E980" />
					<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#676767" />
					<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#555555" />
					<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#E2D7F8" />
					<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#C8E7F5" />
				</Style.Resources>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="4,1" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border
								x:Name="Bd"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="true">
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			</Style>


			<ItemsPanelTemplate x:Key="ItemPanels1">
				<VirtualizingStackPanel IsItemsHost="True" />
			</ItemsPanelTemplate>

			<ItemsPanelTemplate x:Key="ListBoxItemsPanelTemplate1">
				<VirtualizingStackPanel IsItemsHost="True" />
			</ItemsPanelTemplate>

			<ControlTemplate x:Key="ct1">
				<Border BorderBrush="{DynamicResource ShadowDetail}" BorderThickness="0,0,0,5">
					<Grid Margin="0,-4,0,0">

						<Grid.ColumnDefinitions>
							<!--  0  -->
							<ColumnDefinition Width="100" />
							<!--  1  -->
							<ColumnDefinition Width="100" />
							<!--  2  -->
							<ColumnDefinition Width="100" />
							<!--  3  -->
							<ColumnDefinition Width="100" />
							<!--  4  -->
							<ColumnDefinition Width="100" />
							<!--  5  -->
							<ColumnDefinition Width="100" />
							<!--  6  -->
							<ColumnDefinition Width="100" />
							<!--  7  -->
							<ColumnDefinition Width="100" />
							<!--  8  -->
							<ColumnDefinition Width="1*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="25" />
							<RowDefinition Height="24" />
						</Grid.RowDefinitions>

						<Border
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox
								Grid.Column="0"
								Style="{DynamicResource CellTxBox}"
								Text="{Binding SheetData}" />
						</Border>
						<Border
							Grid.Row="0"
							Grid.Column="2"
							Grid.ColumnSpan="2"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox
								Grid.Column="1"
								Style="{DynamicResource CellTxBox}"
								Text="{Binding SheetName}" />
						</Border>
						<Border
							Grid.Row="0"
							Grid.Column="4"
							Grid.ColumnSpan="5"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox Style="{DynamicResource CellTxBox}" Text="{Binding SheetNumber}" />
						</Border>

						<Rectangle
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="1"
							Fill="{StaticResource BkGrndUnUsedDetail}" />

						<Border
							Grid.Row="1"
							Grid.Column="0"
							BorderThickness="0,0,0,0"
							Style="{StaticResource lblHeaderBdrBottom}" />
						<Border
							Grid.Row="1"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							BorderThickness="1,0,0,0"
							Style="{StaticResource lblHeaderBdrBottom}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding SheetInfo}" />
						</Border>
						<Border
							Grid.Row="1"
							Grid.Column="3"
							Grid.ColumnSpan="2"
							BorderThickness="1,0,1,0"
							Style="{StaticResource lblHeaderBdrBottom}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding SheetInfo2}" />
						</Border>

						<Rectangle
							Grid.Row="1"
							Grid.Column="5"
							Grid.ColumnSpan="4"
							Fill="{StaticResource BkGrndUnUsedDetail}" />

					</Grid>
				</Border>
			</ControlTemplate>

			<DataTemplate x:Key="SampleDataClassTemplate2">
				<ContentControl Template="{StaticResource ct1}" />
			</DataTemplate>




			<ControlTemplate x:Key="tp1">
				<Border
					x:Name="BDx"
					BorderBrush="{DynamicResource ShadowDetail}"
					BorderThickness="0,0,0,7">
					<Grid Margin="0,0,0,0">

						<Grid.ColumnDefinitions>
							<!--  0  -->
							<ColumnDefinition Width="46" />
							<!--  1  -->
							<ColumnDefinition Width="1*" />
							<!--  2  -->
							<ColumnDefinition Width="1*" />
							<!--  3  -->
							<ColumnDefinition Width="1*" />
							<!--  4  -->
							<ColumnDefinition Width="1*" />
							<!--  5  -->
							<ColumnDefinition Width="1*" />
							<!--  6  -->
							<ColumnDefinition Width="1*" />
							<!--  7  -->
							<ColumnDefinition Width="1*" />
							<!--  8  -->
							<ColumnDefinition Width="1*" />

						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="40" />
						</Grid.RowDefinitions>

						<Border
							Grid.Row="0"
							Grid.Column="0"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox
								x:Name="TBx"
								Grid.Column="0"
								Margin="0,0,0,0"
								Style="{DynamicResource CellTxBox}"
								Text="{Binding Index}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox
								Grid.Column="0"
								Style="{DynamicResource CellTxBox}"
								Text="{Binding X}" />
						</Border>
						<Border
							Grid.Row="0"
							Grid.Column="2"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox
								Grid.Column="1"
								Style="{DynamicResource CellTxBox}"
								Text="{Binding Y}" />
						</Border>
						<Border
							Grid.Row="0"
							Grid.Column="3"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBox Style="{DynamicResource CellTxBox}" Text="{Binding Z}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="4"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding XΔ}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="5"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding YΔ}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="6"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding ZΔ}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="7"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrBottom}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding XYΔ, StringFormat=F6}" />
						</Border>

						<Border
							Grid.Row="0"
							Grid.Column="8"
							Grid.ColumnSpan="1"
							Style="{StaticResource lblHeaderBdrTop}">
							<TextBlock Style="{DynamicResource CellTxBlk}" Text="{Binding Slope, StringFormat=F6}" />
						</Border>

					</Grid>
				</Border>
			</ControlTemplate>


			<DataTemplate x:Key="topopoints">
				<ContentControl Template="{StaticResource tp1}" />
			</DataTemplate>


			<Style x:Key="FocusVisual2">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
								Margin="2"
								SnapsToDevicePixels="true"
								Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
								StrokeDashArray="1 2"
								StrokeThickness="1" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
			<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
			<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
			<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
			<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
			<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />


			<Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding ControlPoint}" Value="True">
						<Setter Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</Style.Triggers>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="4,1" />
				<Setter Property="SnapsToDevicePixels" Value="True" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Border
								x:Name="Bd"
								Margin="0,0,0,-4"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="true">
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			</Style>
			<Style x:Key="TestButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="Height" Value="27" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="Width" Value="80" />
			</Style>




		</ResourceDictionary>
	</Window.Resources>
	<Grid Margin="0,0,-0.4,7">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="759.2" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<!--  <Button  -->
		<!--  x:Name="button_Copy2"  -->
		<!--  Content="Surface Points"  -->
		<!--  HorizontalAlignment="Left"  -->
		<!--  Height="48"  -->
		<!--  Margin="467,1019,0,0"  -->
		<!--  VerticalAlignment="Top"  -->
		<!--  Width="111"  -->
		<!--  d:DataContext="{d:DesignData /SampleData/SampleCollectionSampleData.xaml}"  -->

		<ListView
			x:Name="listView"
			Width="732"
			Height="144"
			Margin="9,483,0,0"
			Padding="-3,-1,0,0"
			HorizontalAlignment="left"
			VerticalAlignment="Top"
			HorizontalContentAlignment="Stretch"
			d:DataContext="{d:DesignData /SampleData/SampleCollectionSampleData.xaml}"
			Background="LightGray"
			BorderBrush="black"
			BorderThickness="1"
			DataContext="{Binding Source={x:Static sampleData:SampleCollection.sx}}"
			ItemsPanel="{DynamicResource ItemPanels1}"
			ItemsSource="{Binding}">
			<ListView.Resources>
				<Style TargetType="{x:Type Label}">
					<Setter Property="BorderBrush" Value="Black" />

					<Setter Property="BorderThickness" Value="1,0,0,1" />
				</Style>

				<Style x:Key="header0" TargetType="{x:Type GridViewColumnHeader}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
								<Label Content="this 0" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

				<Style x:Key="header1" TargetType="{x:Type GridViewColumnHeader}">
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
								<Label Content="this 1" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

				<Style x:Key="header2" TargetType="{x:Type GridViewColumnHeader}">
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
								<Label Content="this 2" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

			</ListView.Resources>

			<ListView.View>
				<GridView AllowsColumnReorder="False">
					<GridViewColumn Width="250">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding SheetNumber}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
						<GridViewColumnHeader Style="{DynamicResource ResourceKey=header0}" />
					</GridViewColumn>

					<GridViewColumn Width="100">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding SheetName}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
						<GridViewColumnHeader Style="{DynamicResource header1}" />
					</GridViewColumn>

					<GridViewColumn Width="300">

						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding SheetData}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>

						<GridViewColumnHeader Style="{DynamicResource header2}" />
					</GridViewColumn>
				</GridView>
			</ListView.View>

		</ListView>


		<ListBox
			x:Name="listBox2"
			Width="732"
			Height="227"
			Margin="9,676,0,0"
			HorizontalAlignment="left"
			VerticalAlignment="Top"
			HorizontalContentAlignment="Stretch"
			d:DataContext="{d:DesignData /SampleData/SampleCollectionSampleData.xaml}"
			Background="LightGray"
			DataContext="{Binding Source={x:Static sampleData:SampleCollection.sx}}"
			ItemContainerStyle="{DynamicResource ListBoxItemContainerStyle2}"
			ItemTemplate="{StaticResource SampleDataClassTemplate2}"
			ItemsSource="{Binding}">

			<ListBox.Template>
				<ControlTemplate>
					<Border
						Margin="0,0,0,0"
						BorderBrush="Black"
						BorderThickness="0">

						<DockPanel Background="LightGray" LastChildFill="True">


							<Border
								Height="49"
								VerticalAlignment="Top"
								BorderThickness="0,0,0,8"
								DockPanel.Dock="Top">
								<Border.BorderBrush>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<GradientStop Offset="0.847" Color="Black" />
										<GradientStop Offset="1" Color="White" />
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Grid Background="#444444" DockPanel.Dock="Top">
									<Grid.ColumnDefinitions>
										<!--  0  -->
										<ColumnDefinition Width="100" />
										<!--  1  -->
										<ColumnDefinition Width="100" />
										<!--  2  -->
										<ColumnDefinition Width="100" />
										<!--  3  -->
										<ColumnDefinition Width="100" />
										<!--  4  -->
										<ColumnDefinition Width="100" />
										<!--  5  -->
										<ColumnDefinition Width="100" />
										<!--  6  -->
										<ColumnDefinition Width="100" />
										<!--  7  -->
										<ColumnDefinition Width="100" />
										<!--  8  -->
										<ColumnDefinition Width="1*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="21" />
										<RowDefinition Height="20" />
									</Grid.RowDefinitions>
									<Border
										Grid.Row="0"
										Grid.Column="0"
										Grid.ColumnSpan="2"
										Style="{StaticResource lblHeaderBdrTop}">
										<Label Content="First" Style="{StaticResource lbHeader}" />
									</Border>
									<Border
										Grid.Row="0"
										Grid.Column="2"
										Grid.ColumnSpan="2"
										Style="{StaticResource lblHeaderBdrTop}">
										<Label Content="Second" Style="{StaticResource lbHeader}" />
									</Border>
									<Border
										Grid.Row="0"
										Grid.Column="4"
										Grid.ColumnSpan="5"
										Style="{StaticResource lblHeaderBdrTop}">
										<Label Content="Third" Style="{StaticResource lbHeader}" />
									</Border>


									<Border
										Grid.Row="1"
										Grid.Column="0"
										BorderThickness="0,0,0,0">
										<Rectangle Fill="#282828" />
									</Border>
									<Border
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2"
										BorderThickness="1,0,0,0"
										Style="{StaticResource lblHeaderBdrBottom}">
										<Label Content="Fourth" Style="{StaticResource lbHeader}" />
									</Border>
									<Border
										Grid.Row="1"
										Grid.Column="3"
										Grid.ColumnSpan="2"
										BorderThickness="1,0,0,0"
										Style="{StaticResource lblHeaderBdrBottom}">
										<Label Content="Fifth" Style="{StaticResource lbHeader}" />
									</Border>
									<Border
										Grid.Row="1"
										Grid.Column="5"
										Grid.ColumnSpan="4"
										BorderThickness="1,0,0,0"
										Style="{StaticResource lblHeaderBdrBottom}">
										<Rectangle Fill="#282828" />

									</Border>
								</Grid>

							</Border>
							<ScrollViewer VerticalScrollBarVisibility="Auto">

								<ItemsPresenter Margin="-6,-1,-5,0" />
							</ScrollViewer>
						</DockPanel>

					</Border>
				</ControlTemplate>
			</ListBox.Template>
		</ListBox>


		<Button
			x:Name="btnDone"
			Grid.Column="1"
			Width="97"
			Height="48"
			Margin="0,0,10,10"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnDone_Click"
			Content="Done"
			IsCancel="True"
			IsDefault="True" />
		<Button
			x:Name="button_Copy"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,120,10"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy_Click"
			Content="MultiLineWindow" />
		<Button
			x:Name="button_Copy1"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,250,10"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy1_Click"
			Content="Header andFooter" />
		<!--  Click="Button_Copy2_Click" />  -->
		<Button
			x:Name="button_Copy3"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,380,10"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy3_Click"
			Content="Control Points" />
		<Label
			x:Name="label2"
			Width="336"
			Height="34"
			Margin="10,444,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Content="ListView"
			FontSize="16"
			Foreground="White" />
		<Grid Grid.ColumnSpan="2">

			<Grid.Resources>
				<Style x:Key="TestButtonStyle" TargetType="Button">
					<Setter Property="Height" Value="27" />
					<Setter Property="HorizontalAlignment" Value="Left" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Top" />
					<Setter Property="Width" Value="80" />
				</Style>
			</Grid.Resources>
			<ListBox
				x:Name="listBox"
				Width="650"
				Height="227"
				Margin="87,128,0,0"
				HorizontalAlignment="left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Background="LightGray"
				DataContext="{Binding ElementName=mainWindow}"
				ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
				ItemTemplate="{StaticResource topopoints}"
				ItemsSource="{Binding tps}">
				<!--    -->
				<!--  ItemsPanel="{DynamicResource ListBoxItemsPanelTemplate1}"  -->
				<!--  d:DataContext="{d:DesignData /SampleData/SampleCollectionSampleData.xaml}"  -->
				<ListBox.Template>
					<ControlTemplate>
						<Border
							Margin="0,0,0,0"
							BorderBrush="Black"
							BorderThickness="1">
							<ScrollViewer VerticalScrollBarVisibility="Auto">
								<DockPanel Background="LightGray" LastChildFill="True">

									<Grid Background="Aqua" DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="44" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Border Grid.Column="0" Style="{StaticResource PointsTestHeader}">
											<Label Content="Index" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="1" Style="{StaticResource PointsTestHeader}">
											<Label Content="X" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="2" Style="{StaticResource PointsTestHeader}">
											<Label Content="Y" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="3" Style="{StaticResource PointsTestHeader}">
											<Label Content="Z" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="4" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔX" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="5" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔY" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="6" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔZ" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="7" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔXY" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="8" Style="{StaticResource PointsTestHeader}">
											<Label Content="Slope" Style="{StaticResource PointsTestHeaderLabel}" />

										</Border>
									</Grid>

									<ItemsPresenter Margin="-6,-1,-5,0" />
								</DockPanel>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</ListBox.Template>
			</ListBox>

			<Label
				x:Name="label1"
				Width="77"
				Height="22"
				Margin="5,7,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Content="* ListBox *"
				FontSize="16"
				Foreground="White" />

			<Label
				x:Name="label1_Copy2"
				Height="22"
				Margin="0,101,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				Content="start point:"
				FontSize="16"
				Foreground="White" />
			<Label
				Margin="134,101,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.StartPointX}"
				DataContext="{Binding ElementName=mainWindow}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="207,101,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.StartPointY}"
				DataContext="{Binding ElementName=mainWindow}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="280,101,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.StartPointZ}"
				DataContext="{Binding ElementName=mainWindow}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				x:Name="label1_Copy"
				Height="22"
				Margin="5,360,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				Content="end point:"
				FontSize="16"
				Foreground="White" />
			<Label
				Margin="134,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointX}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="207,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointY}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="280,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointZ}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="353,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointXΔ}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="427,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointYΔ}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="502,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointZΔ}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="575,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointXYΔ}"
				ContentStringFormat="F4"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Margin="649,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointSlope}"
				ContentStringFormat="F4"
				Style="{StaticResource controlPointLbl}" />

			<Label
				Width="39"
				Margin="90,360,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.EndPointIndex}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				Width="39"
				Margin="90,101,0,0"
				d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
				                                 Type={x:Type local:MainWindow}}"
				Content="{Binding tps.StartPointIndex}"
				DataContext="{Binding ElementName=mainWindow}"
				Style="{StaticResource controlPointLbl}" />
			<Label
				x:Name="label1_Copy1"
				Height="22"
				Margin="756,101,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Left"
				Content="message:"
				FontSize="16"
				Foreground="White" />
			<TextBox
				x:Name="tbxLbxMsg"
				Height="687"
				Margin="756,128,0,-0.2"
				Padding="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				Background="#444444"
				DataContext="{Binding ElementName=mainWindow}"
				FontSize="16"
				Foreground="White"
				Text="{Binding tps.message}"
				VerticalScrollBarVisibility="Visible" />
			<!--#region > >ListBox TopoPoints Tests-->
			<Button
				x:Name="test_all"
				Margin="87,4,0,0"
				Click="BtnTestAll_Click"
				Content="Test All"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_add1"
				Margin="172,4,0,0"
				Click="BtnAdd1_Click"
				Content="Add 1"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_insert1"
				Margin="257,4,0,0"
				Click="BtnInsert1_Click"
				Content="Insert 1"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_changeend"
				Margin="342,4,0,0"
				Click="BtnChangeE_Click"
				Content="Change End"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_changestart"
				Margin="427,4,0,0"
				Click="BtnChangeS_Click"
				Content="Change Start"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_change4x"
				Margin="512,4,0,0"
				Click="BtnChange4X_Click"
				Content="Chg [4] X"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_change4y"
				Margin="597,4,0,0"
				Click="BtnChange4Y_Click"
				Content="Chg [4] Y"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_change4z"
				Margin="682,4,0,0"
				Click="BtnChange4Z_Click"
				Content="Chg [4] Z"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_changestartx"
				Height="26"
				Margin="87,37,0,0"
				Click="BtnChangeStartX_Click"
				Content="Chg Start X"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_changeendx"
				Margin="172,36,0,0"
				Click="BtnChangeEndX_Click"
				Content="Chg End X"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_contains"
				Margin="87,68,0,0"
				Click="BtnContains_Click"
				Content="Contains?"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_indexof"
				Margin="172,68,0,0"
				Click="BtnIndexOf_Click"
				Content="Index Of?"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_removeat"
				Margin="257,68,0,0"
				Click="BtnRemoveAt_Click"
				Content="Remove At (2)"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_remove"
				Margin="342,68,0,0"
				Click="BtnRemove_Click"
				Content="Remove (2)"
				Style="{StaticResource TestButtonStyle}" />

			<Button
				x:Name="test_copyto"
				Margin="427,68,0,0"
				Click="BtnCopyTo_Click"
				Content="CopyTo"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_clear"
				Margin="512,68,0,0"
				Click="BtnClear_Click"
				Content="Clear"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_batch_v1"
				Margin="597,68,0,0"
				Click="BtnBatch_Click"
				Style="{StaticResource TestButtonStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<TextBlock
							Background="Transparent"
							FontSize="9"
							IsHitTestVisible="False"
							Text="Batch X + 12&#x0D; to items 3 to 5"
							TextAlignment="Center"
							TextWrapping="Wrap" />
					</DataTemplate>
				</Button.ContentTemplate>

			</Button>
			<Button
				x:Name="test_change4XYZ"
				Margin="257,37,0,0"
				Click="BtnChange4XYZ_Click"
				Content="Chg [4] XYZ"
				Style="{StaticResource TestButtonStyle}" />
			<Button
				x:Name="test_batch_v2"
				Margin="682,68,0,0"
				Click="BtnBatchv2_Click"
				Style="{StaticResource TestButtonStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<TextBlock
							Background="Transparent"
							IsHitTestVisible="False"
							Text="Batch v2"
							TextWrapping="Wrap" />
					</DataTemplate>
				</Button.ContentTemplate>

			</Button>


		</Grid>
		<!--#endregion-->
	</Grid>
</Window>

