<Window x:Name="mainWindow" Title="MainWindow"
		x:Class="WpfApp1_ListControlTest.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:converter="clr-namespace:WpfApp1_ListControlTest.MainWinSupport"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:enumTag="clr-namespace:WpfApp1_ListControlTest.TopoPtsData3.Support"
		xmlns:local="clr-namespace:WpfApp1_ListControlTest"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:sampleData="clr-namespace:WpfApp1_ListControlTest.SampleData"
		Width="1680"
		Height="1600"
		Loaded="MainWindow_Loaded"
		mc:Ignorable="d"
		Background="#FF2C2C2C"
		>
	<!--  xmlns:res="clr-namespace:WpfApp1_ListControlTest.WpfResources"  -->

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>

				<ResourceDictionary
						Source="MainWinSupport/MainWinResourceSupport.xaml"
						/>
				<ResourceDictionary
						Source="MainWinSupport/MainWinResource2.xaml"
						/>
			</ResourceDictionary.MergedDictionaries>

			<!-- <sys:Object x:Key="null"></sys:Object> -->

			<converter:ConvertIntToNullableBool x:Key="IntToNullableBool"
					/>

			<!--  overall field row  -->
			<GridLength x:Key="SelectedColWidth">42</GridLength>

			<GridLength x:Key="FieldIndexColWidth">42</GridLength>

			<GridLength x:Key="XyzColWidth">230</GridLength>

			<GridLength x:Key="XdeltaColWidth">*</GridLength>

			<GridLength x:Key="YdeltaColWidth">*</GridLength>

			<GridLength x:Key="ZdeltaColWidth">*</GridLength>

			<GridLength x:Key="XYdeltaColWidth">*</GridLength>

			<GridLength x:Key="XYZdeltaColWidth">*</GridLength>

			<GridLength x:Key="SlopeColWidth">*</GridLength>

			<GridLength x:Key="UndoRedoColWidth">30</GridLength>

			<GridLength x:Key="TagColWidth">16</GridLength>

			<GridLength x:Key="IsRevisedColWidth">*</GridLength>

			<GridLength x:Key="ValueColWidth">56</GridLength>

			<GridLength x:Key="HasRedoColWidth">*</GridLength>

			<!--  start end rows  -->

			<GridLength x:Key="ValueRowHeight">26</GridLength>



			<Style x:Key="TestButtonStyle"
					TargetType="{x:Type Button}"
					>
				<Setter Property="Height" Value="27" />
				<Setter Property="Margin" Value="1,0,1,0" />
				<Setter Property="Width" Value="80" />
			</Style>

			<Style x:Key="lblSubValueHdr"
					TargetType="{x:Type Label}"
					>
				<Setter Property="Background" Value="{StaticResource Normal.SelectedInActive.Background}" />
				<Setter Property="FontSize" Value="7" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>
			<Style x:Key="FocusVisual"
					>
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
									Margin="2"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<SolidColorBrush x:Key="OptionMark.Static.Background"
					Color="#FFFFFFFF"
					/>
			<SolidColorBrush x:Key="OptionMark.Static.Border"
					Color="#FF707070"
					/>
			<Style x:Key="OptionMarkFocusVisual"
					>
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
									Margin="14,0,0,0"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Background"
					Color="#FFF3F9FF"
					/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Border"
					Color="#FF5593FF"
					/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
					Color="#FF6CA0FF"
					/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Background"
					Color="#FFE6E6E6"
					/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Border"
					Color="#FFBCBCBC"
					/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
					Color="#FF707070"
					/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Background"
					Color="#FFD9ECFF"
					/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Border"
					Color="#FF3C77DD"
					/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
					Color="DodgerBlue"
					/>
			<SolidColorBrush x:Key="OptionMark.Static.Glyph"
					Color="DodgerBlue"
					/>
			<!--  Color="#FF212121"  -->



			<Style x:Key="CheckBoxStyle"
					TargetType="{x:Type CheckBox}"
					>
				<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Margin" Value="-4,-7,-4,-7" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate x:Name="chkboxtemplate"
								TargetType="{x:Type CheckBox}"
								>
							<Grid x:Name="templateRoot"
									Width="{TemplateBinding Width}"
									Height="{TemplateBinding Height}"
									SnapsToDevicePixels="True"
									Background="Transparent"
									>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Border x:Name="checkBoxBorder"
										Grid.Row="0"
										Grid.Column="0"
										Margin="5"
										SnapsToDevicePixels="False"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										/>
								<!--  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  -->
								<!--  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  -->

								<Canvas x:Name="Canvas1"
										Grid.Row="0"
										Grid.Column="0"
										>
									<Glyphs x:Name="GlyphChecked"
											Margin="6.5,-5.5,0,0"
											FontRenderingEmSize="22"
											FontUri="C:\WINDOWS\Fonts\ARIALUNI.TTF"
											Fill="{StaticResource OptionMark.Static.Glyph}"
											Opacity="0"
											UnicodeString="✓"
											/>

									<Glyphs x:Name="GlyphIndeterminant"
											Margin="6.5,-1.5,0,0"
											FontRenderingEmSize="20"
											FontUri="C:\WINDOWS\Fonts\ARIALUNI.TTF"
											Fill="{StaticResource OptionMark.Static.Glyph}"
											Opacity="0"
											UnicodeString="■"
											/>

								</Canvas>


								<!--  <Grid x:Name="Gridx"  -->
								<!--  Grid.Row="0"  -->
								<!--  Grid.Column="0"  -->
								<!--  Width="{TemplateBinding Width}"  -->
								<!--  Height="{TemplateBinding Height}"  -->
								<!--  >  -->
								<!--    -->
								<!--    -->
								<!-- </Grid> -->

								<ContentPresenter x:Name="contentPresenter"
										Grid.Column="1"
										Margin="{TemplateBinding Padding}"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Focusable="False"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
									<Setter Property="Padding" Value="4,-1,0,0" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="GlyphChecked" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
									<Setter TargetName="GlyphIndeterminant" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
									<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
									<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="GlyphChecked" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
									<Setter TargetName="GlyphIndeterminant" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
									<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
									<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="GlyphChecked" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
									<Setter TargetName="GlyphIndeterminant" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
									<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
									<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="GlyphChecked" Property="Opacity" Value="1" />
									<Setter TargetName="GlyphIndeterminant" Property="Opacity" Value="0" />
								</Trigger>

								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter TargetName="GlyphChecked" Property="Opacity" Value="0" />
									<Setter TargetName="GlyphIndeterminant" Property="Opacity" Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="CheckBoxStyleMaster"
					TargetType="CheckBox"
					BasedOn="{StaticResource CheckBoxStyle}"
					>
				<Style.Triggers>
					<DataTrigger
							Value="True"
							>
						<DataTrigger.Binding>
							<MultiBinding
									Converter="{StaticResource IntToNullableBool}"
									>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="SelectedItems.Count"
										/>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="Items.Count"
										/>
							</MultiBinding>
						</DataTrigger.Binding>
						<Setter Property="IsChecked" Value="True" />
					</DataTrigger>
					<DataTrigger
							Value="False"
							>
						<DataTrigger.Binding>
							<MultiBinding
									Converter="{StaticResource IntToNullableBool}"
									>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="SelectedItems.Count"
										/>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="Items.Count"
										/>
							</MultiBinding>
						</DataTrigger.Binding>
						<Setter Property="IsChecked" Value="False" />
					</DataTrigger>
					<DataTrigger
							Value="{x:Null}"
							>
						<DataTrigger.Binding>
							<MultiBinding
									Converter="{StaticResource IntToNullableBool}"
									>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="SelectedItems.Count"
										/>
								<Binding
										ElementName="ListBox3"
										Mode="OneWay"
										Path="Items.Count"
										/>
							</MultiBinding>
						</DataTrigger.Binding>
						<Setter Property="IsChecked" Value="{x:Null}" />
					</DataTrigger>

				</Style.Triggers>
			</Style>

		</ResourceDictionary>
	</Window.Resources>

	<Grid
			Margin="0,0,-0.4,7"
			>

		<Grid.Resources>
			<ResourceDictionary>
				<ResourceDictionary.MergedDictionaries>
					<ResourceDictionary
							Source="MainWinSupport/MainWinResource1.xaml"
							/>

				</ResourceDictionary.MergedDictionaries>

			</ResourceDictionary>

		</Grid.Resources>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="840" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="500" />
			<RowDefinition Height="*" />
			<RowDefinition Height="200" />
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>

		<!--#region > List box / view 1-->

		<ContentControl Content="{StaticResource ListBox1}"
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				/>

		<ContentControl Content="{StaticResource ListView1}"
				Grid.Row="2"
				Grid.Column="1"
				/>

		<!--#endregion-->

		<!--#region > > control buttons-->

		<Button Content="Done"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,10,5"
				Width="97"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				IsCancel="True"
				IsDefault="True"
				Click="BtnDone_Click"
				/>
		<Button Content="MultiLineWindow"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,119.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy_Click"
				/>
		<Button Content="Header andFooter"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,249.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy1_Click"
				/>
		<Button Content="Control Points"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,379.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy3_Click"
				/>
		<Button Content="Topo Points"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,507.6,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy4_Click"
				/>

		<!--#endregion-->

		<!--#region > listbox2-->
		<Grid
				Grid.Row="0"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Margin="0,0,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				>
			<Grid.RowDefinitions>
				<RowDefinition Height="110" />
				<RowDefinition Height="80" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="852*" />
				<ColumnDefinition Width="797*" />
			</Grid.ColumnDefinitions>

			<Label Content="* ListBox *"
					Grid.Row="0"
					Grid.Column="1"
					Margin="0.2,53,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
					Grid.Row="0"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="0.2,5,796.6,5.4"
					HorizontalAlignment="Stretch"
					Orientation="Vertical"
					>
				<Border
						Padding="1"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						BorderThickness="2"
						BorderBrush="White"
						>

					<StackPanel
							Margin="0"
							HorizontalAlignment="Left"
							Orientation="Horizontal"
							>
						<Button x:Name="test_all" Content="Test All"
								Click="BtnTestAll_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_add1" Content="Add 1"
								Click="BtnAdd1_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_insert1" Content="Insert 1"
								Click="BtnInsert1_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changeend" Content="Change End"
								Click="BtnChangeE_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changestart" Content="Change Start"
								Click="BtnChangeS_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4x" Content="Chg [4] X"
								Click="BtnChange4X_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4y" Content="Chg [4] Y"
								Click="BtnChange4Y_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4z" Content="Chg [4] Z"
								Click="BtnChange4Z_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
					</StackPanel>
				</Border>

				<StackPanel
						Margin="3"
						HorizontalAlignment="Stretch"
						Orientation="Vertical"
						>
					<StackPanel
							Margin="0,0,0,1"
							Orientation="Horizontal"
							>
						<Button x:Name="test_changestartx" Content="Chg Start X"
								Click="BtnChangeStartX_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changeendx" Content="Chg End X"
								Click="BtnChangeEndX_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_contains" Content="Contains?"
								Click="BtnContains_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_indexof" Content="Index Of?"
								Click="BtnIndexOf_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
					</StackPanel>
					<StackPanel
							Orientation="Horizontal"
							>
						<Button x:Name="test_removeat" Content="Remove At (2)"
								Click="BtnRemoveAt_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_remove" Content="Remove (2)"
								Click="BtnRemove_Click"
								Style="{StaticResource TestButtonStyle}"
								/>

						<Button x:Name="test_copyto" Content="CopyTo"
								Click="BtnCopyTo_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_clear" Content="Clear"
								Click="BtnClear_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_batch_v1"
								Click="BtnBatch_Click"
								Style="{StaticResource TestButtonStyle}"
								>
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
											FontSize="9"
											Text="Batch X + 12&#xA; to items 3 to 5"
											TextAlignment="Center"
											TextWrapping="Wrap"
											Background="Transparent"
											IsHitTestVisible="False"
											/>
								</DataTemplate>
							</Button.ContentTemplate>
						</Button>
						<Button x:Name="test_change4XYZ" Content="Chg [4] XYZ"
								Click="BtnChange4XYZ_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_batch_v2"
								Click="BtnBatchv2_Click"
								Style="{StaticResource TestButtonStyle}"
								>
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
											Text="Batch v2"
											TextWrapping="Wrap"
											Background="Transparent"
											IsHitTestVisible="False"
											/>
								</DataTemplate>
							</Button.ContentTemplate>

						</Button>
					</StackPanel>
				</StackPanel>
			</StackPanel>

			<ContentControl Content="{StaticResource listBox2}"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					/>

			<Label Content="start point:"
					Grid.Row="1"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,54.6,0,0"
					Width="76"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>


			</Label>

			<ContentControl Content="{StaticResource StartPoint2}"
					Grid.Row="1"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Bottom"
					/>

			<Label Content="end point:"
					Grid.Row="3"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,52.6,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90.236" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<ContentControl Content="{StaticResource EndPoint2}"
					Grid.Row="3"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					/>

			<Label x:Name="label1_Copy1" Content="messages:"
					Grid.Row="0"
					Grid.Column="2"
					Margin="0.2,75,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Left"
					FontSize="16"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox x:Name="tbxLbxMsg"
					Grid.Row="0"
					Grid.Column="2"
					Margin="30.2,0,10,0"
					Padding="0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					FontSize="16"
					DataContext="{Binding ElementName=mainWindow}"
					Text="{Binding tps.message}"
					VerticalScrollBarVisibility="Visible"
					Background="#444444"
					Foreground="White"
					/>

		</Grid>
		<!--#endregion-->

		<!--#region > listbox3-->

		<Grid x:Name="ListBox3Grid"
				Grid.Row="1"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				>

			<Grid.Resources>

				<converter:TopoPoint2XYZConverter x:Key="Converter.Xyz"
						/>
				<converter:TopoPoint2SlopeConverter x:Key="Converter.Slope"
						/>
				<converter:NegateBooleanConverter x:Key="boolInvert"
						/>


				<Style x:Key="CellTxBlk"
						TargetType="{x:Type TextBlock}"
						>
					<Setter Property="Background" Value="#c1c1c1" />
					<Setter Property="Foreground" Value="#717171" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="Margin" Value="0,0,0,0" />
					<Setter Property="Padding" Value="3" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Top" />
				</Style>

				<Style x:Key="TerminusTxBlk"
						TargetType="{x:Type TextBlock}"
						>
					<Setter Property="Background" Value="{StaticResource Normal.Inactive.Background}" />
					<Setter Property="DataContext" Value="{Binding ElementName=mainWindow, Mode=OneWay}" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Stretch" />
				</Style>

				<Style x:Key="TerminusTxBlkTag"
						TargetType="{x:Type TextBlock}"
						BasedOn="{StaticResource TerminusTxBlk}"
						>
					<Setter Property="FontSize" Value="6" />
					<Setter Property="TextWrapping" Value="Wrap" />
				</Style>

				<Style x:Key="controlPointLbl"
						TargetType="{x:Type Label}"
						>
					<Setter Property="Background" Value="#444444" />
					<Setter Property="DataContext" Value="{Binding ElementName=mainWindow, Mode=OneWay}" />
					<Setter Property="FontSize" Value="16" />
					<Setter Property="Foreground" Value="White" />
					<Setter Property="Height" Value="22" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="Margin" Value="2" />
					<Setter Property="Padding" Value="0" />
				</Style>

				<Style x:Key="controlPointLabel"
						TargetType="{x:Type Label}"
						BasedOn="{StaticResource controlPointLbl}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
						</Trigger>
					</Style.Triggers>
				</Style>


				<Style x:Key="controlPointLblDelta"
						TargetType="{x:Type Label}"
						BasedOn="{StaticResource controlPointLbl}"
						>
					<Setter Property="FontSize" Value="12" />
					<Setter Property="VerticalContentAlignment" Value="Center" />

				</Style>

				<Style x:Key="controlPointBtn"
						TargetType="{x:Type Button}"
						BasedOn="{StaticResource Control.Normal.Style}"
						>
					<Setter Property="Background" Value="White" />
					<Setter Property="BorderBrush" Value="#555555" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="FontSize" Value="8" />
					<Setter Property="IsDefault" Value="False" />
					<Setter Property="Margin" Value="2,1,2,1" />
					<Setter Property="Padding" Value="0,1,0,0" />
					<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
				</Style>

				<Style x:Key="undoBtn"
						TargetType="{x:Type Button}"
						BasedOn="{StaticResource controlPointBtn}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</Trigger>
						<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</Trigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="redoBtn"
						TargetType="{x:Type Button}"
						BasedOn="{StaticResource controlPointBtn}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</Trigger>
						<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</Trigger>
					</Style.Triggers>
				</Style>

			</Grid.Resources>

			<Grid.RowDefinitions>
				<RowDefinition Height="60" />
				<RowDefinition Height="60" />
				<RowDefinition Height="40" />
				<RowDefinition Height="65" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="1215.2" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<Label Content="** ListBox3 **"
					Grid.Row="1"
					Grid.Column="1"
					Margin="0.2,12,0,0"
					Width="94"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="top"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
					Grid.Row="0"
					Grid.RowSpan="2"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="3.2,3,2.6,3"
					HorizontalAlignment="Stretch"
					Orientation="Vertical"
					>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnInitialize" Content="Initialize"
							Click="BtnInitialize_Click"
							Style="{StaticResource TestButtonStyle}"
							/>

				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnChangeXof1" Content="Chg X of [1]"
							Click="BtnChangeXof1_Click"
							Style="{StaticResource TestButtonStyle}"
							/>

					<Button x:Name="BtnBatchAdjustZByAmount"
							Click="BtnBatchAdjustZByAmount_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Batch Add amt to&#xA;[3] Z to [end]"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnBatchAdjustZBySlope" Content="Adj Z by Slope"
							Click="BtnBatchAdjustZBySlope_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
					<Button x:Name="BtnBatchAdd10ToYfrom3" Content="Add 10 to [3+]Y"
							Click="BtnBatchAdd10ToYfrom3_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
					<Button x:Name="BtnBatchAddAmtToYfrom3On"
							Click="BtnBatchAddAmtToYfrom3On_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 7+i to&#xA;[3+].Y"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnBatchAdd5ToAll"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Batch Add 5&#xA;to [1] to [end]"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToXofStart"
							Click="BtnAdd10ToXofStart_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[start] X"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToXofEnd"
							Click="BtnAdd10ToXofEnd_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[end] X"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToZofStart"
							Click="BtnAdd10ToZofStart_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[start] Z"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToZofEnd"
							Click="BtnAdd10ToZofEnd_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[end] Z"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="DebugMarker" Content="Debug Marker"
							Click="BtnDebugMarker_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
					<Button x:Name="SelectAndListMultiSelect"
							Click="BtnSelectAndListMultiSelect_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Select And&#xA;List Selected"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="ListMultiSelect_Copy" Content="List Selected"
							Click="BtnListMultiSelect_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
				</StackPanel>
			</StackPanel>

			<Label Content="start point:"
					Grid.Row="3"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,36,0,6.8"
					Width="76"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>

				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Border
					Grid.Row="2"
					Grid.Column="1"
					Margin="0.2,0,0,0"
					Width="86"
					Height="16"
					HorizontalAlignment="left"
					VerticalAlignment="top"
					BorderThickness="0,0,2,0"
					BorderBrush="{StaticResource GridBorderGrey}"
					>
				<Label x:Name="label" Content="Selected index "
						Width="85"
						Padding="0"
						HorizontalAlignment="Left"
						HorizontalContentAlignment="Right"
						Background="{StaticResource Normal.Background}"
						/>
			</Border>

			<Label Content="{Binding SelectedIndex, ElementName=ListBox3}"
					Grid.Row="2"
					Grid.Column="1"
					Margin="90.2,0,0,0"
					Width="30"
					Height="16"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="top"
					HorizontalContentAlignment="Center"
					Background="{StaticResource Normal.Background}"
					/>

			<Grid x:Name="StartPointRow"
					Grid.Row="3"
					Grid.Column="1"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																					 Type={x:Type local:MainWindow}}"
					>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
					<ColumnDefinition Width="{StaticResource FieldIndexColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource XYZdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource SlopeColWidth}" />

				</Grid.ColumnDefinitions>


				<Grid
						Grid.Column="0"
						Grid.ColumnSpan="2"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
						<ColumnDefinition Width="*" />

					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="{StaticResource ValueRowHeight}" />
						<RowDefinition Height="*" />

					</Grid.RowDefinitions>


					<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.ControlPoint, Mode=OneWay}"
							Grid.Column="0"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							Style="{StaticResource controlPointLbl}"
							/>

					<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Index, Mode=OneWay}"
							Grid.Column="1"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							Style="{StaticResource controlPointLbl}"
							/>

					<CheckBox x:Name="CheckBox1"
							Grid.Row="1"
							Grid.Column="0"
							Width="26"
							Height="26"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							BorderThickness="2"
							BorderBrush="Red"
							Click="CheckBox1_Click"
							Style="{StaticResource CheckBoxStyleMaster}"
							/>
					<!--  IsChecked="{x:Null}"  -->


				</Grid>


				<Grid x:Name="Xstartpoint"
						Grid.Column="2"
						Margin="0,0,0.4,0"
						d:DataContext="{d:DesignData Source={TemplateBinding}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="{StaticResource ValueRowHeight}" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  X  -->
					<Label x:Name="X_StartValue" Content="{Binding Tpts3Mgr.Tpts3.StartPoint.X, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border x:Name="ButtonZoneX"
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  button  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.XStartTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>
					<!--  d:DataContext="{d:DesignInstance Type=local:MainWindow,  -->
					<!--  IsDesignTimeCreatable=True}"  -->

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has undo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasUndoX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>
				</Grid>

				<Grid x:Name="Ystartpoint"
						Grid.Column="3"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  Y  -->
					<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Y, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.YStartTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

				</Grid>

				<Grid x:Name="Zstartpoint"
						Grid.Column="4"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  Z  -->
					<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Z, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
							Style="{StaticResource controlPointLabel}"
							/>


					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>
					<!--  Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}"  -->
					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>


					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.ZStartTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

				</Grid>

			</Grid>



			<ListBox x:Name="ListBox3"
					Grid.Row="4"
					Grid.RowSpan="2"
					Grid.Column="1"
					Margin="0.2,0.2,3.6,79.8"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					HorizontalContentAlignment="Stretch"
					d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																					 Type={x:Type local:MainWindow}}"
					DataContext="{Binding ElementName=mainWindow}"
					Loaded="ListBox3_Loaded"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					SelectionChanged="ListBox3_SelectionChanged"
					SelectionMode="Extended"
					Background="LightGray"
					IsSynchronizedWithCurrentItem="True"
					ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
					ItemTemplate="{DynamicResource topopoints}"
					ItemsSource="{Binding Tpts3Mgr.Tpts3, Mode=TwoWay}"
					>

				<ListBox.Resources>

					<Style x:Key="Lb3ApplyUndoBtn"
							TargetType="{x:Type Button}"
							>
						<Style.Resources>
							<Thickness x:Key="Normal.Default.BorderThickness.Inner"
									>
								6,0,0,0
							</Thickness>
						</Style.Resources>
						<Setter Property="Background" Value="White" />
						<Setter Property="Margin" Value="3,2,2,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
					</Style>

					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyUndoForRowBtn"  -->
					<!--  BasedOn="{StaticResource Lb3ApplyUndoBtn}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Setter Property="FontSize" Value="10" /> -->

					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyUndoForCellBtnX"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.IsRevisedX}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->
					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyRedoForCellBtnX"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.HasRedoX}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->
					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyUndoForCellBtnY"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.IsRevisedY}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->
					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyRedoForCellBtnY"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.HasRedoY}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->
					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyUndoForCellBtnZ"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.IsRevisedZ}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->
					<!--    -->
					<!--  <Style  -->
					<!--  x:Key="Lb3ApplyRedoForCellBtnZ"  -->
					<!--  BasedOn="{StaticResource UndoRedoBtnBase}"  -->
					<!--  TargetType="Button">  -->
					<!-- 	<Style.Triggers> -->
					<!-- 		<DataTrigger Binding="{Binding XYZ.HasRedoZ}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="True" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<MultiDataTrigger> -->
					<!-- 			<MultiDataTrigger.Conditions> -->
					<!-- 				<Condition Binding="{Binding IsBeingEdited}" Value="False" /> -->
					<!-- 				<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" /> -->
					<!-- 			</MultiDataTrigger.Conditions> -->
					<!-- 			<MultiDataTrigger.Setters> -->
					<!-- 				<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 			</MultiDataTrigger.Setters> -->
					<!-- 		</MultiDataTrigger> -->
					<!-- 		<DataTrigger Binding="{Binding IsBeingEdited}" Value="False"> -->
					<!-- 			<Setter Property="IsEnabled" Value="False" /> -->
					<!-- 		</DataTrigger> -->
					<!-- 	</Style.Triggers> -->
					<!-- </Style> -->

					<Style x:Key="UndoRedoBtnBase"
							TargetType="{x:Type Button}"
							BasedOn="{StaticResource Lb3ApplyUndoBtn}"
							>
						<Setter Property="FontSize" Value="8" />
						<Setter Property="Margin" Value="1,1,1,1" />
					</Style>

					<Style x:Key="UndoForCellBtn"
							TargetType="{x:Type Button}"
							BasedOn="{StaticResource UndoRedoBtnBase}"
							>
						<Style.Triggers>
							<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="local:CustomProperties.GenericBooleanTwo" Value="True" />
									<Condition Property="local:CustomProperties.GenericBooleanOne" Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="IsEnabled" Value="True" />
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="local:CustomProperties.GenericBooleanTwo" Value="False" />
									<Condition Property="local:CustomProperties.GenericBooleanOne" Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="IsEnabled" Value="False" />
							</MultiTrigger>
							<Trigger Property="local:CustomProperties.GenericBooleanTwo" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</Trigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="RedoForCellBtn"
							TargetType="{x:Type Button}"
							BasedOn="{StaticResource UndoRedoBtnBase}"
							>
						<Style.Triggers>
							<Trigger Property="local:CustomProperties.GenericBooleanOne" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="local:CustomProperties.GenericBooleanTwo" Value="True" />
									<Condition Property="local:CustomProperties.GenericBooleanOne" Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="IsEnabled" Value="True" />
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="local:CustomProperties.GenericBooleanTwo" Value="False" />
									<Condition Property="local:CustomProperties.GenericBooleanOne" Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="IsEnabled" Value="False" />
							</MultiTrigger>
							<Trigger Property="local:CustomProperties.GenericBooleanTwo" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</Trigger>
						</Style.Triggers>
					</Style>

					<!-- </Style> -->

					<Style x:Key="CellTxBoxBase"
							TargetType="{x:Type TextBox}"
							>
						<Setter Property="BorderThickness" Value="0,0,0,0" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="Margin" Value="0,0,0,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="VerticalAlignment" Value="Stretch" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="Foreground" Value="#555555" />
								<Setter Property="IsEnabled" Value="False" />
								<Setter Property="IsReadOnly" Value="True" />
							</DataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="True"
									>
								<Setter Property="Background" Value="#cceeff" />
								<Setter Property="IsEnabled" Value="True" />
								<Setter Property="IsReadOnly" Value="False" />
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#FFC1EAFF" />
							</Trigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBoxX"
							TargetType="{x:Type TextBox}"
							BasedOn="{StaticResource CellTxBoxBase}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedX}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>


					<Style x:Key="CellTxBoxY"
							TargetType="{x:Type TextBox}"
							BasedOn="{StaticResource CellTxBoxBase}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedY}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBoxZ"
							TargetType="{x:Type TextBox}"
							BasedOn="{StaticResource CellTxBoxBase}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedZ}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="lblHeaderBdrTop"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>

					<Style x:Key="lblHeaderBdrBottom"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>

					<Style x:Key="FocusVisual"
							>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle
											Margin="5"
											SnapsToDevicePixels="true"
											Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
											StrokeDashArray="1 2"
											StrokeThickness="1"
											/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<Style x:Key="PointsTestHeader"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="Black" />
						<Setter Property="BorderThickness" Value="0,0,1,1" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="1,0,0,0" />
					</Style>

					<Style x:Key="PointsTestHeaderLabel"
							TargetType="{x:Type Label}"
							>
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="ListBoxItemStyle"
							TargetType="{x:Type ListBoxItem}"
							>
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="BorderBrush" Value="Transparent" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
						<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Setter Property="Padding" Value="4,1" />
						<Setter Property="SnapsToDevicePixels" Value="True" />

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate
										TargetType="{x:Type ListBoxItem}"
										>
									<Border x:Name="Bd"
											Margin="0,0,0,-4"
											Padding="{TemplateBinding Padding}"
											SnapsToDevicePixels="true"
											Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											>
										<ContentPresenter
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Border>
									<ControlTemplate.Triggers>

										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="False" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="True" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
										</MultiTrigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding ControlPoint}"
									Value="True"
									>
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<ControlTemplate x:Key="FieldPoints"
							>
						<Border x:Name="BDx"
								BorderThickness="0,0,1,7"
								BorderBrush="{DynamicResource ShadowDetail}"
								>

							<Grid x:Name="FieldPointsGrid"
									Margin="1,0,0,0"
									IsHitTestVisible="True"
									>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
									<ColumnDefinition Width="{StaticResource FieldIndexColWidth}" />
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
									<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
									<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
									<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
									<ColumnDefinition Width="{StaticResource XYZdeltaColWidth}" />
									<ColumnDefinition Width="{StaticResource SlopeColWidth}" />

								</Grid.ColumnDefinitions>

								<!--
									have two preface rows reserved
									for future use
								-->

								<Grid.RowDefinitions>
									<RowDefinition Height="0" />
									<RowDefinition Height="0" />
									<RowDefinition Height="22" />
									<RowDefinition Height="30" />

								</Grid.RowDefinitions>

								<CheckBox x:Name="RowSelector"
										Grid.Row="2"
										Grid.Column="0"
										Margin="0"
										Width="26"
										Height="26"
										BorderThickness="2"
										BorderBrush="Red"
										IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
										Click="RowSelector_Click"
										Style="{StaticResource CheckBoxStyle}"
										/>

								<!--  IsChecked="{Binding IsSelected}"  -->



								<!--#region > point values-->

								<!--#endregion-->

								<!--#endregion-->

								<!--#endregion-->

								<!--#endregion-->

								<!--#region > Z settings-->

								<!--#endregion-->

								<!--  index  -->
								<Border x:Name="RowIndex"
										Grid.Row="2"
										Grid.Column="1"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Text="{Binding Index}"
											Foreground="Black"
											IsReadOnly="True"
											Style="{StaticResource CellTxBoxBase}"
											/>
								</Border>

								<!--  x  -->
								<Border x:Name="Xvalue"
										Grid.Row="2"
										Grid.Column="2"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Text="{Binding X, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxX}"
											/>
								</Border>

								<Border x:Name="Yvalue"
										Grid.Row="2"
										Grid.Column="3"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Text="{Binding Y, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxY}"
											/>
								</Border>
								<Border x:Name="Zvalue"
										Grid.Row="2"
										Grid.Column="4"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Text="{Binding Z, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxZ}"
											/>
								</Border>
								<Border x:Name="XΔ"
										Grid.Row="2"
										Grid.Column="5"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding XΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border x:Name="YΔ"
										Grid.Row="2"
										Grid.Column="6"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding YΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border x:Name="ZΔ"
										Grid.Row="2"
										Grid.Column="7"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding ZΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border x:Name="XYΔ"
										Grid.Row="2"
										Grid.Column="8"
										Style="{StaticResource lblHeaderBdrBottom}"
										>
									<TextBlock
											Text="{Binding XYΔ, StringFormat=F4}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border x:Name="XYZΔ"
										Grid.Row="2"
										Grid.Column="9"
										Style="{StaticResource lblHeaderBdrBottom}"
										>
									<TextBlock
											Text="{Binding XYZΔ, StringFormat=F4}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border x:Name="Slope"
										Grid.Row="2"
										Grid.Column="10"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding Slope, Converter={StaticResource Converter.Slope}}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<!--#region > index settings-->
								<Grid x:Name="IndexSettings"
										Grid.Row="3"
										Grid.Column="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="0" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<Border
											Grid.Row="0"
											Grid.Column="0"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="being edited"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="0"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												FontSize="10"
												Text="{Binding IsBeingEdited}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--#region > X settings-->

								<Grid x:Name="Xsettings"
										Grid.Row="3"
										Grid.Column="2"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource TagColWidth}" />
										<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
										<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="UndoBtnX" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.IsRevisedX}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource UndoForCellBtn}"
											/>

									<Button x:Name="RedoBtnX" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.HasRedoX}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource RedoForCellBtn}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.XTag}}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedX"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedX}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value X"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueX, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>


									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoX"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoX}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value X"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueX, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--#region > Y settings-->

								<Grid x:Name="Ysettings"
										Grid.Row="3"
										Grid.Column="3"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource TagColWidth}" />
										<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
										<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="lb3BtnUndoY" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.IsRevisedY}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource UndoForCellBtn}"
											/>

									<Button x:Name="lb3BtnRedoY" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.HasRedoY}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource RedoForCellBtn}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.YTag}}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedY"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedY}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value Y"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueY, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoY"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoY}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value Y"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueY, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>


								</Grid>
								<!--  z  -->
								<Grid x:Name="Zsettings"
										Grid.Row="3"
										Grid.Column="4"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource TagColWidth}" />
										<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
										<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource ValueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="lb3BtnUndoZ" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.IsRevisedZ}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource UndoForCellBtn}"
											/>

									<Button x:Name="lb3BtnRedoZ" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																											 Type={x:Type local:MainWindow}}"
											local:CustomProperties.GenericBooleanOne="{Binding XYZ.HasRedoZ}"
											local:CustomProperties.GenericBooleanTwo="{Binding IsBeingEdited}"
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource RedoForCellBtn}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.ZTag}}"
												Background="{StaticResource Normal.Inactive.Background}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedZ"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedZ}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value Z"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueZ, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoZ"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoZ}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value Z"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueZ, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--
									don't assign a border thickness
									is will not work then
								-->
								<Border x:Name="SelectedBorder"
										Grid.Row="2"
										Grid.RowSpan="2"
										Grid.Column="0"
										Grid.ColumnSpan="11"
										Margin="1,0,0,0"
										BorderBrush="Red"
										IsEnabled="True"
										>
									<Border.Style>
										<Style
												TargetType="{x:Type Border}"
												>
											<Style.Triggers>
												<DataTrigger
														Binding="{Binding IsChecked, ElementName=RowSelector}"
														Value="True"
														>
													<Setter Property="BorderThickness" Value="2" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Border.Style>
								</Border>

							</Grid>

						</Border>
					</ControlTemplate>

					<DataTemplate x:Key="topopoints"
							>

						<ContentControl
								Template="{StaticResource FieldPoints}"
								/>

					</DataTemplate>

				</ListBox.Resources>

				<!--  header  -->
				<ListBox.Template>
					<ControlTemplate>
						<Border
								Margin="0,0,0,0"
								BorderThickness="1"
								BorderBrush="Black"
								>
							<ScrollViewer
									VerticalScrollBarVisibility="Auto"
									>
								<DockPanel
										LastChildFill="True"
										Background="LightGray"
										>

									<Grid
											Margin="-1,0,0,0"
											DockPanel.Dock="Top"
											Background="Aqua"
											>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
											<ColumnDefinition Width="{StaticResource FieldIndexColWidth}" />
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
											<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
											<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
											<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
											<ColumnDefinition Width="{StaticResource XYZdeltaColWidth}" />
											<ColumnDefinition Width="{StaticResource SlopeColWidth}" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Border
												Grid.Column="0"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Edit Control"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="1"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Index"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="2"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="X"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="3"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Y"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="4"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Z"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="5"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔX"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="6"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔY"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="7"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔZ"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="8"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔXY"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="9"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔXYZ"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="10"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Slope"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
									</Grid>

									<ItemsPresenter
											Margin="-6,-1,-5,0"
											/>
								</DockPanel>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</ListBox.Template>

			</ListBox>

			<Label Content="end point:"
					Grid.Row="5"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,52.2,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Grid x:Name="EndPointRow"
					Grid.Row="5"
					Grid.Column="1"
					Height="62"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																					 Type={x:Type local:MainWindow}}"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
					<ColumnDefinition Width="{StaticResource FieldIndexColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource XYZdeltaColWidth}" />
					<ColumnDefinition Width="{StaticResource SlopeColWidth}" />

				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="62.4" />
				</Grid.RowDefinitions>

				<Grid
						Grid.Column="0"
						Grid.ColumnSpan="2"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{StaticResource SelectedColWidth}" />
						<ColumnDefinition Width="*" />

					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="{StaticResource ValueRowHeight}" />
						<RowDefinition Height="*" />

					</Grid.RowDefinitions>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.ControlPoint}"
							Grid.Column="0"
							VerticalAlignment="Top"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							Style="{StaticResource controlPointLbl}"
							/>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Index}"
							Grid.Column="1"
							VerticalAlignment="Top"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							Style="{StaticResource controlPointLbl}"
							/>
				</Grid>

				<!--#region > X endpoint-->
				<Grid x:Name="Xendpoint"
						Grid.Column="2"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.X, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.XEndTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has undo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasUndoX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignData Source={TemplateBinding}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

				</Grid>
				<!--#endregion-->

				<!--#region > Y Endpoint-->
				<Grid x:Name="Yendpoint"
						Grid.Column="3"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Y, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																							 Type={x:Type local:MainWindow}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.YEndTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>


				</Grid>
				<!--#endregion-->

				<!--#region > Z endpoint-->
				<Grid x:Name="Zendpoint"
						Grid.Column="4"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource TagColWidth}" />
						<ColumnDefinition Width="{StaticResource IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
						<ColumnDefinition Width="{StaticResource HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource ValueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  Z value  -->
					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Z, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																							 Type={x:Type local:MainWindow}}"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>
					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBooleanOne="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Name, Source={x:Static enumTag:TopoPtsTags.ZEndTag}}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																								 Type={x:Type local:MainWindow}}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>
				</Grid>

				<!--#endregion-->

				<Label x:Name="Label" Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XΔ}"
						Grid.Column="5"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.YΔ}"
						Grid.Column="6"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.ZΔ}"
						Grid.Column="7"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYΔ}"
						Grid.Column="8"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="F4"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZΔ}"
						Grid.Column="9"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="F4"
						Style="{StaticResource controlPointLblDelta}"
						/>

				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Slope}"
						Grid.Column="10"
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type local:MainWindow}}"
						ContentStringFormat="P3"
						Style="{StaticResource controlPointLblDelta}"
						/>

			</Grid>

			<Label Content="messages:"
					Grid.Row="1"
					Grid.Column="2"
					Margin="0,15,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Left"
					FontSize="16"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox x:Name="TopoPoints2Message"
					Grid.Row="0"
					Grid.RowSpan="6"
					Grid.Column="2"
					Margin="30,0,7.6,-0.2"
					Padding="0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					FontSize="16"
					DataContext="{Binding ElementName=mainWindow}"
					Text="{Binding Message}"
					VerticalScrollBarVisibility="Visible"
					Background="#444444"
					Foreground="White"
					/>

		</Grid>

		<!--#endregion-->


	</Grid>
</Window>

