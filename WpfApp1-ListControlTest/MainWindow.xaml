<Window
	x:Class="WpfApp1_ListControlTest.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converter="clr-namespace:WpfApp1_ListControlTest.MainWinSupport"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WpfApp1_ListControlTest"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:topoPtsData="clr-namespace:WpfApp1_ListControlTest.TopoPtsData"
	x:Name="mainWindow"
	Title="MainWindow"
	Width="1680"
	Height="1400"
	Background="#FF2C2C2C"
	Loaded="MainWindow_Loaded"
	mc:Ignorable="d">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>

				<ResourceDictionary Source="WpfResources/VisualStates.xaml" />
				<ResourceDictionary Source="MainWinSupport/MainWinResourceSupport.xaml" />
				<ResourceDictionary Source="MainWinSupport/MainWinResource2.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<sys:String x:Key="Parent">
				mainWindow
			</sys:String>

			<!--  overall field row  -->
			<GridLength x:Key="Lb3EditCtrlColWidth">
				36
			</GridLength>

			<GridLength x:Key="Lb3IndexColWidth">
				48
			</GridLength>

			<GridLength x:Key="XyzColWidth">
				230
			</GridLength>

			<GridLength x:Key="XdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="YdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="ZdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="XYdeltaColWidth">
				50
			</GridLength>




			<!--  xyz fields  -->

			<GridLength x:Key="Lb3UndoRedoColWidth">
				30
			</GridLength>

			<GridLength x:Key="Lb3TagColWidth">
				16
			</GridLength>

			<GridLength x:Key="Lb3IsRevisedColWidth">
				*
			</GridLength>

			<GridLength x:Key="Lb3valueColWidth">
				56
			</GridLength>

			<GridLength x:Key="Lb3HasRedoColWidth">
				*
			</GridLength>



			<!--  start end rows  -->
			<GridLength x:Key="Lb3StartEndEditCtrlColWidth">
				1
			</GridLength>

			<GridLength x:Key="Lb3StartEndIndexColWidth">
				80
			</GridLength>



			<Style x:Key="TestButtonStyle" TargetType="Button">
				<Setter Property="Height" Value="27" />
				<Setter Property="Margin" Value="1,0,1,0" />
				<Setter Property="Width" Value="80" />
			</Style>


			<Style x:Key="lblSubValueHdr" TargetType="{x:Type Label}">
				<Setter Property="Background" Value="{StaticResource Normal.SelectedInActive.Background}" />
				<Setter Property="FontSize" Value="7" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>

		</ResourceDictionary>
	</Window.Resources>

	<Grid Margin="0,0,-0.4,7">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="840" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="500" />
			<RowDefinition Height="*" />
			<RowDefinition Height="150" />
			<RowDefinition Height="60" />
		</Grid.RowDefinitions>

		<Grid.Resources>
			<ResourceDictionary>
				<ResourceDictionary.MergedDictionaries>
					<ResourceDictionary Source="MainWinSupport/MainWinResource1.xaml" />

				</ResourceDictionary.MergedDictionaries>

			</ResourceDictionary>

		</Grid.Resources>

		<!-- <ResourceDictionary Source="MainWinSupport/MainWinResource3.xaml" /> -->

		<!--#region > listbox2-->
		<Grid
			Grid.Row="0"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			Margin="0,0,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch">
			<Grid.RowDefinitions>
				<RowDefinition Height="110" />
				<RowDefinition Height="80" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="852*" />
				<ColumnDefinition Width="797*" />
			</Grid.ColumnDefinitions>

			<Label
				x:Name="label1"
				Grid.Row="0"
				Grid.Column="1"
				Width="72"
				Height="22"
				Margin="0.2,53,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Content="* ListBox *"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
				Grid.Row="0"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				Margin="0.2,5,796.6,5.4"
				HorizontalAlignment="Stretch"
				Orientation="Vertical">
				<Border
					Padding="1"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					BorderBrush="White"
					BorderThickness="2">

					<StackPanel
						Margin="0"
						HorizontalAlignment="Left"
						Orientation="Horizontal">
						<Button
							x:Name="test_all"
							Click="BtnTestAll_Click"
							Content="Test All"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_add1"
							Click="BtnAdd1_Click"
							Content="Add 1"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_insert1"
							Click="BtnInsert1_Click"
							Content="Insert 1"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_changeend"
							Click="BtnChangeE_Click"
							Content="Change End"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_changestart"
							Click="BtnChangeS_Click"
							Content="Change Start"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_change4x"
							Click="BtnChange4X_Click"
							Content="Chg [4] X"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_change4y"
							Click="BtnChange4Y_Click"
							Content="Chg [4] Y"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_change4z"
							Click="BtnChange4Z_Click"
							Content="Chg [4] Z"
							Style="{StaticResource TestButtonStyle}" />
					</StackPanel>
				</Border>

				<StackPanel
					Margin="3"
					HorizontalAlignment="Stretch"
					Orientation="Vertical">
					<StackPanel Margin="0,0,0,1" Orientation="Horizontal">
						<Button
							x:Name="test_changestartx"
							Click="BtnChangeStartX_Click"
							Content="Chg Start X"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_changeendx"
							Click="BtnChangeEndX_Click"
							Content="Chg End X"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_contains"
							Click="BtnContains_Click"
							Content="Contains?"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_indexof"
							Click="BtnIndexOf_Click"
							Content="Index Of?"
							Style="{StaticResource TestButtonStyle}" />
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<Button
							x:Name="test_removeat"
							Click="BtnRemoveAt_Click"
							Content="Remove At (2)"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_remove"
							Click="BtnRemove_Click"
							Content="Remove (2)"
							Style="{StaticResource TestButtonStyle}" />

						<Button
							x:Name="test_copyto"
							Click="BtnCopyTo_Click"
							Content="CopyTo"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_clear"
							Click="BtnClear_Click"
							Content="Clear"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_batch_v1"
							Click="BtnBatch_Click"
							Style="{StaticResource TestButtonStyle}">
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
										Background="Transparent"
										FontSize="9"
										IsHitTestVisible="False"
										Text="Batch X + 12&#x0D; to items 3 to 5"
										TextAlignment="Center"
										TextWrapping="Wrap" />
								</DataTemplate>
							</Button.ContentTemplate>
						</Button>
						<Button
							x:Name="test_change4XYZ"
							Click="BtnChange4XYZ_Click"
							Content="Chg [4] XYZ"
							Style="{StaticResource TestButtonStyle}" />
						<Button
							x:Name="test_batch_v2"
							Click="BtnBatchv2_Click"
							Style="{StaticResource TestButtonStyle}">
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
										Background="Transparent"
										IsHitTestVisible="False"
										Text="Batch v2"
										TextWrapping="Wrap" />
								</DataTemplate>
							</Button.ContentTemplate>

						</Button>
					</StackPanel>
				</StackPanel>
			</StackPanel>

			<ContentControl
				Grid.Row="2"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Content="{StaticResource listBox2}" />

			<Label
				Grid.Row="1"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Width="76"
				Height="22"
				Margin="24,54.6,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				Content="start point:"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>


			</Label>

			<ContentControl
				Grid.Row="1"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Bottom"
				Content="{StaticResource StartPoint2}" />

			<Label
				Grid.Row="3"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Width="72"
				Height="22"
				Margin="24,52.6,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				Content="end point:"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90.236" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<ContentControl
				Grid.Row="3"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				Content="{StaticResource EndPoint2}" />

			<Label
				x:Name="label1_Copy1"
				Grid.Row="0"
				Grid.Column="2"
				Width="72"
				Height="22"
				Margin="0.2,75,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Left"
				Content="messages:"
				FontSize="16"
				Foreground="White">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox
				x:Name="tbxLbxMsg"
				Grid.Row="0"
				Grid.Column="2"
				Margin="30.2,0,10,0"
				Padding="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Background="#444444"
				DataContext="{Binding ElementName=mainWindow}"
				FontSize="16"
				Foreground="White"
				Text="{Binding tps.message}"
				VerticalScrollBarVisibility="Visible" />

		</Grid>
		<!--#endregion-->

		<!--#region > listbox3-->

		<Grid
			Name="ListBox3Grid"
			Grid.Row="1"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			Margin="0,20,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
				<RowDefinition Height="350" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="238" />
				<ColumnDefinition Width="862" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid.Resources>

				<converter:TopoPoint2XYZConverter x:Key="Converter.Xyz" />
				<converter:TopoPoint2SlopeConverter x:Key="Converter.Slope" />
				<converter:NegateBooleanConverter x:Key="boolInvert" />

				<Style x:Key="CellTxBlk" TargetType="{x:Type TextBlock}">
					<Setter Property="Background" Value="#c1c1c1" />
					<Setter Property="Foreground" Value="#717171" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="Margin" Value="0,0,0,0" />
					<Setter Property="Padding" Value="3" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Top" />
				</Style>

				<Style x:Key="TerminusTxBlk" TargetType="TextBlock">
					<Setter Property="Background" Value="{StaticResource Normal.Inactive.Background}" />
					<Setter Property="DataContext" Value="{Binding ElementName=mainWindow, Mode=OneWay}" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Stretch" />

				</Style>

				<Style
					x:Key="controlPointLblX"
					BasedOn="{StaticResource controlPointLbl}"
					TargetType="Label">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedX}" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style
					x:Key="controlPointLblY"
					BasedOn="{StaticResource controlPointLbl}"
					TargetType="Label">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedY}" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style
					x:Key="controlPointLblZ"
					BasedOn="{StaticResource controlPointLbl}"
					TargetType="Label">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedZ}" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="controlPointBtn" TargetType="Button">
					<Setter Property="Background" Value="White" />
					<Setter Property="BorderBrush" Value="#555555" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="FontSize" Value="8" />
					<Setter Property="Margin" Value="2,1,2,1" />
					<Setter Property="Padding" Value="0,1,0,0" />
					<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
					<Setter Property="VerticalContentAlignment" Value="Center" />

				</Style>

				<Style
					x:Key="controlPointBtnX"
					BasedOn="{StaticResource controlPointBtn}"
					TargetType="Button">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedX, ElementName=mainWindow}" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</DataTrigger>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedX, ElementName=mainWindow}" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style
					x:Key="controlPointBtnY"
					BasedOn="{StaticResource controlPointBtn}"
					TargetType="Button">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedY, ElementName=mainWindow}" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</DataTrigger>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedY, ElementName=mainWindow}" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style
					x:Key="controlPointBtnZ"
					BasedOn="{StaticResource controlPointBtn}"
					TargetType="Button">
					<Style.Triggers>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedZ, ElementName=mainWindow}" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</DataTrigger>
						<DataTrigger Binding="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedZ, ElementName=mainWindow}" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>


			</Grid.Resources>

			<Label
				Grid.Row="0"
				Grid.RowSpan="2"
				Grid.Column="1"
				Width="94"
				Height="22"
				Margin="0.2,72,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="top"
				Content="** ListBox3 **"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
				Grid.Row="0"
				Grid.RowSpan="2"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				Margin="3.2,3,2.8,3.4"
				HorizontalAlignment="Stretch"
				Orientation="Vertical">
				<StackPanel Margin="0,0,0,0" Orientation="Horizontal">
					<Button
						x:Name="BtnInitialize"
						Click="BtnInitialize_Click"
						Content="Initialize"
						Style="{StaticResource TestButtonStyle}" />

				</StackPanel>
				<StackPanel Margin="0,0,0,0" Orientation="Horizontal">
					<Button
						x:Name="BtnChangeXof1"
						Click="BtnChangeXof1_Click"
						Content="Chg X of [1]"
						Style="{StaticResource TestButtonStyle}" />

					<Button
						x:Name="BtnBatchAdjustZByAmount"
						Click="BtnBatchAdjustZByAmount_Click"
						Style="{StaticResource TestButtonStyle}">
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
									Background="Transparent"
									FontSize="9"
									IsHitTestVisible="False"
									Text="Batch Add amt to&#x0D;[3] Z to [end]"
									TextAlignment="Center"
									TextWrapping="Wrap" />
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button
						x:Name="BtnBatchAdjustZBySlope"
						Click="BtnBatchAdjustZBySlope_Click"
						Content="Adj Z by Slope"
						Style="{StaticResource TestButtonStyle}" />
					<Button
						x:Name="BtnBatchAdd10ToYfrom3"
						Click="BtnBatchAdd10ToYfrom3_Click"
						Content="Add 10 to [3+]Y"
						Style="{StaticResource TestButtonStyle}" />
					<Button
						x:Name="BtnAdd10ToZofStart"
						Click="BtnAdd10ToZofStart_Click"
						Style="{StaticResource TestButtonStyle}">
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
									Background="Transparent"
									FontSize="9"
									IsHitTestVisible="False"
									Text="Add 10 to&#x0D;[start] Z"
									TextAlignment="Center"
									TextWrapping="Wrap" />
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel Margin="0,0,0,0" Orientation="Horizontal">
					<Button x:Name="BtnBatchAdd5ToAll" Style="{StaticResource TestButtonStyle}">
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
									Background="Transparent"
									FontSize="9"
									IsHitTestVisible="False"
									Text="Batch Add 5&#x0D;to [1] to [end]"
									TextAlignment="Center"
									TextWrapping="Wrap" />
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel Margin="0,0,0,0" Orientation="Horizontal">
					<Button
						x:Name="DebugMarker"
						Click="BtnDebugMarker_Click"
						Content="Debug Marker"
						Style="{StaticResource TestButtonStyle}" />
				</StackPanel>
			</StackPanel>

			<Label
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Width="76"
				Height="22"
				Margin="24,56.6,0,1.4"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				HorizontalContentAlignment="Right"
				Content="start point:"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">

				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Grid
				Name="StartPointGrid"
				Grid.Row="2"
				Grid.Column="1"
				Grid.ColumnSpan="3"
				Margin="0.2,0,-0.4,0.4">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="84" />
					<ColumnDefinition Width="90" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>


				<Border
					Grid.Row="1"
					Grid.Column="0"
					VerticalAlignment="top"
					BorderBrush="{StaticResource GridBorderGrey}"
					BorderThickness="0,0,1,0">
					<Label
						x:Name="label"
						HorizontalAlignment="Stretch"
						HorizontalContentAlignment="Right"
						Background="{StaticResource Normal.Background}"
						Content="Selected index " />
				</Border>

				<Label
					Grid.Row="1"
					Grid.Column="1"
					HorizontalAlignment="Stretch"
					VerticalAlignment="top"
					HorizontalContentAlignment="Left"
					Background="{StaticResource Normal.Background}"
					Content="{Binding SelectedIndex, ElementName=ListBox3}" />

				<Grid
					Name="StartPointRow"
					Grid.Row="2"
					Grid.Column="0"
					Grid.ColumnSpan="9"
					Margin="0,0,28,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Bottom"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{StaticResource Lb3StartEndEditCtrlColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3StartEndIndexColWidth}" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />

					</Grid.ColumnDefinitions>

					<DockPanel Grid.Column="1" HorizontalAlignment="Stretch">

						<Label
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Content="{Binding TopoMgr.TopoPts.StartPointCp, Mode=OneWay}"
							Style="{StaticResource controlPointLbl}" />

						<Label
							Width="38"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Content="{Binding TopoMgr.TopoPts.StartPointIndex, Mode=OneWay}"
							Style="{StaticResource controlPointLbl}" />

					</DockPanel>

					<Label
						Grid.Column="2"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.StartPointX, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLbl}" />
					<Label
						Grid.Column="3"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.StartPointY, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLbl}" />

					<Label
						Grid.Column="4"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.StartPointZ, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLbl}" />
				</Grid>


			</Grid>

			<ListBox
				Name="ListBox3"
				Grid.Row="3"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				Margin="0.2,0,3.8,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{d:DesignInstance Type=local:MainWindow,
				                                 IsDesignTimeCreatable=True}"
				Background="LightGray"
				DataContext="{Binding ElementName=mainWindow}"
				IsSynchronizedWithCurrentItem="True"
				ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
				ItemTemplate="{DynamicResource topopoints}"
				ItemsSource="{Binding TopoMgr.TopoPts, Mode=TwoWay}"
				Loaded="ListBox3_Loaded"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				SelectionChanged="ListBox3_SelectionChanged">
				<ListBox.Resources>



					<!--  <ControlTemplate  -->
					<!--  x:Key="BtnApplyUndo"  -->
					<!--  TargetType="{x:Type ButtonBase}"  -->
					<!--  >  -->
					<!--  <Border  -->
					<!--  x:Name="border"  -->
					<!--  SnapsToDevicePixels="True"  -->
					<!--  Background="{TemplateBinding Background}"  -->
					<!--  BorderThickness="{TemplateBinding BorderThickness}"  -->
					<!--  BorderBrush="{TemplateBinding BorderBrush}"  -->
					<!--  >  -->
					<!--  <ContentPresenter  -->
					<!--  x:Name="contentPresenter"  -->
					<!--  Content="{TemplateBinding Content}"  -->
					<!--  Margin="{TemplateBinding Padding}"  -->
					<!--  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  -->
					<!--  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  -->
					<!--  ContentStringFormat="{TemplateBinding ContentStringFormat}"  -->
					<!--  ContentTemplate="{TemplateBinding ContentTemplate}"  -->
					<!--  Focusable="False"  -->
					<!--  RecognizesAccessKey="True"  -->
					<!--  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  -->
					<!--  />  -->
					<!-- 	</Border> -->
					<!--    -->
					<!-- 	<ControlTemplate.Triggers> -->
					<!-- 		<Trigger Property="Button.IsDefaulted" Value="True"> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
					<!-- 		</Trigger> -->
					<!-- 		<Trigger Property="IsMouseOver" Value="True"> -->
					<!-- 			<Setter TargetName="border" Property="Background" Value="#FFBEE6FD" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" /> -->
					<!-- 		</Trigger> -->
					<!-- 		<Trigger Property="IsPressed" Value="True"> -->
					<!-- 			<Setter TargetName="border" Property="Background" Value="#FFC4E5F6" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" /> -->
					<!-- 		</Trigger> -->
					<!-- 		<Trigger Property="ToggleButton.IsChecked" Value="True"> -->
					<!-- 			<Setter TargetName="border" Property="Background" Value="#FFBCDDEE" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" /> -->
					<!-- 		</Trigger> -->
					<!-- 		<Trigger Property="IsEnabled" Value="False"> -->
					<!-- 			<Setter Property="Foreground" Value="#FF838383" /> -->
					<!-- 			<Setter TargetName="border" Property="Background" Value="#FFdddddd" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" /> -->
					<!-- 		</Trigger> -->
					<!-- 		<Trigger Property="IsEnabled" Value="True"> -->
					<!-- 			<Setter Property="Foreground" Value="#FF000000" /> -->
					<!-- 			<Setter TargetName="border" Property="Background" Value="#CCFFFF" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource bb}" /> -->
					<!-- 			<Setter TargetName="border" Property="BorderThickness" Value="2" /> -->
					<!-- 		</Trigger> -->
					<!-- 	</ControlTemplate.Triggers> -->
					<!-- </ControlTemplate> -->
					<!--    -->
					<!--    -->
					<!--    -->
					<!-- <Style x:Key="lb3ApplyUndoBtn" TargetType="Button"> -->
					<!-- 	<Setter Property="Padding" Value="0"/> -->
					<!-- 	<Setter Property="Margin" Value="1"/> -->
					<!-- 	<Setter Property="FontSize" Value="8"/> -->
					<!-- 	<Setter Property="Template" Value="{DynamicResource BtnApplyUndo}"/> -->
					<!-- </Style> -->
					<!--    -->
					<!-- <Style x:Key="lb3ApplyBtn" TargetType="Button" BasedOn="{StaticResource lb3ApplyUndoBtn}"> -->
					<!-- 	<Style.Resources> -->
					<!--  <SolidColorBrush x:Key="bb"  -->
					<!--  Color="#00ff00" />  -->
					<!-- 	</Style.Resources> -->
					<!-- </Style> -->
					<!--    -->
					<!-- <Style x:Key="lb3UndoBtn" TargetType="Button" BasedOn="{StaticResource lb3ApplyUndoBtn}"> -->
					<!-- 	<Style.Resources> -->
					<!--  <SolidColorBrush x:Key="bb"  -->
					<!--  Color="#0000ff" />  -->
					<!-- 	</Style.Resources> -->
					<!-- </Style> -->

					<Style x:Key="Lb3ApplyUndoBtn" TargetType="Button">
						<Setter Property="Background" Value="White" />
						<Setter Property="Margin" Value="3,2,2,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
						<Style.Resources>
							<Thickness x:Key="Normal.Default.BorderThickness.Inner">
								6,0,0,0
							</Thickness>
						</Style.Resources>
					</Style>

					<Style
						x:Key="Lb3ApplyUndoForRowBtn"
						BasedOn="{StaticResource Lb3ApplyUndoBtn}"
						TargetType="Button">
						<Setter Property="FontSize" Value="10" />
					</Style>

					<Style
						x:Key="Lb3ApplyUndoForCellBtn"
						BasedOn="{StaticResource Lb3ApplyUndoBtn}"
						TargetType="Button">
						<Setter Property="FontSize" Value="8" />
						<Setter Property="Margin" Value="1,1,1,1" />
					</Style>

					<Style
						x:Key="Lb3ApplyUndoForCellBtnX"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedX}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style
						x:Key="Lb3ApplyRedoForCellBtnX"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.HasRedoX}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style
						x:Key="Lb3ApplyUndoForCellBtnY"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedY}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style
						x:Key="Lb3ApplyRedoForCellBtnY"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.HasRedoY}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style
						x:Key="Lb3ApplyUndoForCellBtnZ"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedZ}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style
						x:Key="Lb3ApplyRedoForCellBtnZ"
						BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
						TargetType="Button">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.HasRedoZ}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBox" TargetType="{x:Type TextBox}">
						<Setter Property="BorderThickness" Value="0,0,0,0" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="Margin" Value="0,0,0,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="VerticalAlignment" Value="Stretch" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="False">
								<Setter Property="Foreground" Value="#555555" />
								<Setter Property="IsEnabled" Value="False" />
								<Setter Property="IsReadOnly" Value="True" />
							</DataTrigger>
							<DataTrigger Binding="{Binding IsBeingEdited}" Value="True">
								<Setter Property="Background" Value="#cceeff" />
								<Setter Property="IsEnabled" Value="True" />
								<Setter Property="IsReadOnly" Value="False" />
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#FFC1EAFF" />
							</Trigger>
						</Style.Triggers>
					</Style>
					<!-- <Setter Property="IsReadOnly" Value="{Binding IsBeingEdited, Converter={StaticResource boolInvert}}" /> -->




					<Style
						x:Key="CellTxBoxX"
						BasedOn="{StaticResource CellTxBox}"
						TargetType="TextBox">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedX}" Value="True">
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>


					<Style
						x:Key="CellTxBoxY"
						BasedOn="{StaticResource CellTxBox}"
						TargetType="TextBox">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedY}" Value="True">
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>


					<Style
						x:Key="CellTxBoxZ"
						BasedOn="{StaticResource CellTxBox}"
						TargetType="TextBox">
						<Style.Triggers>
							<DataTrigger Binding="{Binding XYZ.IsRevisedZ}" Value="True">
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>




					<Style x:Key="lblHeaderBdrTop" TargetType="{x:Type Border}">
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>

					<Style x:Key="lblHeaderBdrBottom" TargetType="{x:Type Border}">
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>


					<Style x:Key="FocusVisual">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle
										Margin="5"
										SnapsToDevicePixels="true"
										Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
										StrokeDashArray="1 2"
										StrokeThickness="1" />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<Style x:Key="PointsTestHeader" TargetType="{x:Type Border}">
						<Setter Property="BorderBrush" Value="Black" />
						<Setter Property="BorderThickness" Value="0,0,1,1" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="4,0,0,0" />
					</Style>

					<Style x:Key="PointsTestHeaderLabel" TargetType="{x:Type Label}">
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ControlPoint}" Value="True">
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="BorderBrush" Value="Transparent" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
						<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Setter Property="Padding" Value="4,1" />
						<Setter Property="SnapsToDevicePixels" Value="True" />

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<Border
										x:Name="Bd"
										Margin="0,0,0,-4"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="true">
										<ContentPresenter
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Border>
									<ControlTemplate.Triggers>

										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="False" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="True" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
										</MultiTrigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					</Style>

					<ControlTemplate x:Key="FieldPoints">
						<Border
							x:Name="BDx"
							BorderBrush="{DynamicResource ShadowDetail}"
							BorderThickness="0,0,0,7">
							<Grid
								Name="FieldPointsGrid"
								Margin="2,0,0,0"
								IsHitTestVisible="True">

								<Grid.ColumnDefinitions>
									<!--  0  -->
									<ColumnDefinition Width="{StaticResource Lb3EditCtrlColWidth}" />
									<!--  0  -->
									<ColumnDefinition Width="{StaticResource Lb3IndexColWidth}" />
									<!--  1  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  2  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  3  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  4  -->
									<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
									<!--  5  -->
									<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
									<!--  6  -->
									<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
									<!--  7  -->
									<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
									<!--  8  -->
									<ColumnDefinition Width="1*" />
									<!--  9  -->
									<ColumnDefinition Width="1*" />

								</Grid.ColumnDefinitions>

								<!--
									have two preface rows reserved
									for future use
								-->

								<Grid.RowDefinitions>
									<RowDefinition Height="0" />
									<RowDefinition Height="0" />
									<RowDefinition Height="20" />
									<RowDefinition Height="32" />

								</Grid.RowDefinitions>


								<!--
									this area may contain controls
									that apply to the whole row
									I remove this as I changed my mind
									and I don't want to provide
									apply / undo for the row
								-->

								<!--  <Grid  -->
								<!--  Grid.Row="0"  -->
								<!--  Grid.Column="0"  -->
								<!--  HorizontalAlignment="Stretch"  -->
								<!--  VerticalAlignment="Stretch"  -->
								<!--  RowSpan="2"  -->
								<!--  >  -->
								<!--								 	<Grid.RowDefinitions> -->
								<!--  <RowDefinition  -->
								<!--  Height="*"  -->
								<!--  />  -->
								<!--  <RowDefinition  -->
								<!--  Height="*"  -->
								<!--  />  -->
								<!--  <RowDefinition  -->
								<!--  Height="*"  -->
								<!--  />  -->
								<!--								 	</Grid.RowDefinitions> -->
								<!--  <Button  -->
								<!--  x:Name="lb3BtnApply"  -->
								<!--  Content="Apply/Update"  -->
								<!--  Grid.Row="0"  -->
								<!--  Grid.Column="0"  -->
								<!--  d:DataContext="{d:DesignInstance Type=local:MainWindow,  -->
								<!--  IsDesignTimeCreatable=True}"  -->
								<!--  IsDefault="True"  -->
								<!--  IsEnabled="{Binding HasRevision}"  -->
								<!--  Click="Lb3BtnApply_Click"  -->
								<!--  Style="{StaticResource Lb3ApplyUndoForRowBtn}"  -->
								<!--  />  -->
								<!--    -->
								<!--  <Button  -->
								<!--  x:Name="lb3BtnUndo"  -->
								<!--  Content="Undo/Cancel"  -->
								<!--  Grid.Row="1"  -->
								<!--  Grid.Column="0"  -->
								<!--  d:DataContext="{d:DesignInstance Type=local:MainWindow,  -->
								<!--  IsDesignTimeCreatable=True}"  -->
								<!--  IsEnabled="{Binding HasRevision}"  -->
								<!--  Click="Lb3BtnUndo_Click"  -->
								<!--  Style="{StaticResource Lb3ApplyUndoForRowBtn}"  -->
								<!--  />  -->
								<!--								 </Grid> -->


								<!--#region > point values-->

								<!--  index  -->
								<Border
									Name="Index"
									Grid.Row="2"
									Grid.Column="1"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBox
										Foreground="Black"
										IsReadOnly="True"
										Style="{StaticResource CellTxBox}"
										Text="{Binding Index}" />
								</Border>

								<!--  x  -->
								<Border
									Name="Xvalue"
									Grid.Row="2"
									Grid.Column="2"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBox
										DataContext="{Binding}"
										Style="{StaticResource CellTxBoxX}"
										Tag="{Binding TopoMgr.TpConsts.Xtag, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
										Text="{Binding X, Converter={StaticResource Converter.Xyz}}" />
								</Border>


								<Border
									Grid.Row="2"
									Grid.Column="3"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBox
										Name="tbx"
										Style="{StaticResource CellTxBoxY}"
										Tag="{Binding TopoMgr.TpConsts.Ytag, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
										Text="{Binding Y, Converter={StaticResource Converter.Xyz}}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="4"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBox
										Style="{StaticResource CellTxBoxZ}"
										Tag="{Binding TopoMgr.TpConsts.Ztag, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
										Text="{Binding Z, Converter={StaticResource Converter.Xyz}}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="5"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding XΔ, StringFormat=F2}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="6"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding YΔ, StringFormat=F2}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="7"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding ZΔ, StringFormat=F2}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="8"
									Style="{StaticResource lblHeaderBdrBottom}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding XYΔ, StringFormat=F4}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="9"
									Style="{StaticResource lblHeaderBdrBottom}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding XYZΔ, StringFormat=F4}" />
								</Border>
								<Border
									Grid.Row="2"
									Grid.Column="10"
									Style="{StaticResource lblHeaderBdrTop}">
									<TextBlock Style="{StaticResource CellTxBlk}" Text="{Binding Slope, Converter={StaticResource Converter.Slope}}" />
								</Border>
								<!--#endregion-->

								<!--#region > index settings-->
								<Grid
									Name="IndexSettings"
									Grid.Row="3"
									Grid.Column="1"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="0" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<Border
										Grid.Row="0"
										Grid.Column="0"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label
											Content="being edited"
											FontSize="7"
											Style="{StaticResource lblSubValueHdr}" />
									</Border>
									<!--    -->
									<!--  <Border  -->
									<!--  Grid.Row="0"  -->
									<!--  Grid.Column="1"  -->
									<!--  BorderThickness="0,0,1,0"  -->
									<!--  BorderBrush="DimGray"  -->
									<!--  >  -->
									<!--  <Label  -->
									<!--  Content="has revision"  -->
									<!--  FontSize="7"  -->
									<!--  Style="{StaticResource lblSubValueHdr}"  -->
									<!--  />  -->
									<!-- </Border> -->


									<Border
										Grid.Row="1"
										Grid.Column="0"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											Background="{StaticResource Normal.Inactive.Background}"
											FontSize="10"
											Text="{Binding IsBeingEdited}"
											TextAlignment="Center" />
									</Border>
									<!--    -->
									<!--  <Border  -->
									<!--  Grid.Row="1"  -->
									<!--  Grid.Column="1"  -->
									<!--  BorderThickness="0,0,1,0"  -->
									<!--  BorderBrush="DimGray"  -->
									<!--  >  -->
									<!--  <TextBlock  -->
									<!--  HorizontalAlignment="Stretch"  -->
									<!--  VerticalAlignment="Stretch"  -->
									<!--  FontSize="10"  -->
									<!--  Text="{Binding HasRevision}"  -->
									<!--  TextAlignment="Center"  -->
									<!--  Background="{StaticResource Normal.Inactive.Background}"  -->
									<!--  />  -->
									<!-- </Border> -->

								</Grid>
								<!--#endregion-->

								<!--#region > x settings-->
								<Grid
									Name="Xsettings"
									Grid.Row="3"
									Grid.Column="2"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button
										x:Name="lb3BtnUndoX"
										Grid.Row="0"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnUndo_Click"
										Content="Undo"
										Style="{StaticResource Lb3ApplyUndoForCellBtnX}"
										Tag="{Binding TopoMgr.TpConsts.Xtag, ElementName=mainWindow}" />

									<Button
										x:Name="lb3BtnRedoX"
										Grid.Row="1"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnRedo_Click"
										Content="Redo"
										Style="{StaticResource Lb3ApplyRedoForCellBtnX}"
										Tag="{Binding TopoMgr.TpConsts.Xtag, ElementName=mainWindow}" />

									<!--  tag  -->
									<Border
										Grid.Row="0"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<TextBlock
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
											                                 IsDesignTimeCreatable=True}"
											Background="{StaticResource Normal.Inactive.Background}"
											DataContext="{Binding ElementName=mainWindow}"
											Text="{Binding TopoMgr.TpConsts.Xtag}"
											TextAlignment="Center" />
									</Border>

									<!--  is revised  -->
									<Border
										Grid.Row="0"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="IsRevisedX" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.IsRevisedX}"
											TextAlignment="Center" />
									</Border>

									<!--  undo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Undo Value X" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.UndoValueX, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>


									<!--  has redo  -->
									<Border
										Grid.Row="0"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="HasRedoX" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.HasRedoX}"
											TextAlignment="Center" />
									</Border>

									<!--  redo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Redo Value X" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.RedoValueX, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>

								</Grid>
								<!--#endregion-->

								<!--#region > y settings-->
								<Grid
									Name="Ysettings"
									Grid.Row="3"
									Grid.Column="3"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button
										x:Name="lb3BtnUndoY"
										Grid.Row="0"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnUndo_Click"
										Content="Undo"
										Style="{StaticResource Lb3ApplyUndoForCellBtnY}"
										Tag="{Binding TopoMgr.TpConsts.Ytag, ElementName=mainWindow}" />

									<Button
										x:Name="lb3BtnRedoY"
										Grid.Row="1"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnRedo_Click"
										Content="Redo"
										Style="{StaticResource Lb3ApplyRedoForCellBtnY}"
										Tag="{Binding TopoMgr.TpConsts.Ytag, ElementName=mainWindow}" />

									<!--  tag  -->
									<Border
										Grid.Row="0"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<TextBlock
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
											                                 IsDesignTimeCreatable=True}"
											Background="{StaticResource Normal.Inactive.Background}"
											DataContext="{Binding ElementName=mainWindow}"
											Text="{Binding TopoMgr.TpConsts.Ytag}"
											TextAlignment="Center" />
									</Border>

									<!--  is revised  -->
									<Border
										Grid.Row="0"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="IsRevisedY" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.IsRevisedY}"
											TextAlignment="Center" />
									</Border>

									<!--  undo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Undo Value Y" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.UndoValueY, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>

									<!--  has redo  -->
									<Border
										Grid.Row="0"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="HasRedoY" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.HasRedoY}"
											TextAlignment="Center" />
									</Border>

									<!--  redo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Redo Value Y" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.RedoValueY, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>


								</Grid>
								<!--#endregion-->

								<!--#region > Z settings-->

								<!--  z  -->
								<Grid
									Name="Zsettings"
									Grid.Row="3"
									Grid.Column="4"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button
										x:Name="lb3BtnUndoZ"
										Grid.Row="0"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnUndo_Click"
										Content="Undo"
										Style="{StaticResource Lb3ApplyUndoForCellBtnZ}"
										Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}" />

									<Button
										x:Name="lb3BtnRedoZ"
										Grid.Row="1"
										Grid.Column="1"
										d:DataContext="{d:DesignInstance Type=local:MainWindow,
										                                 IsDesignTimeCreatable=True}"
										Click="Lb3BtnRedo_Click"
										Content="Redo"
										Style="{StaticResource Lb3ApplyRedoForCellBtnZ}"
										Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}" />

									<!--  tag  -->
									<Border
										Grid.Row="0"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="2"
										BorderBrush="DimGray"
										BorderThickness="1,0,1,0">
										<TextBlock
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
											                                 IsDesignTimeCreatable=True}"
											Background="{StaticResource Normal.Inactive.Background}"
											DataContext="{Binding ElementName=mainWindow}"
											Text="{Binding TopoMgr.TpConsts.Ztag}"
											TextAlignment="Center" />
									</Border>

									<!--  is revised  -->
									<Border
										Grid.Row="0"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="IsRevisedZ" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="3"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.IsRevisedZ}"
											TextAlignment="Center" />
									</Border>

									<!--  undo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Undo Value Z" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="4"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.UndoValueZ, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>

									<!--  has redo  -->
									<Border
										Grid.Row="0"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="HasRedoZ" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="5"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.HasRedoZ}"
											TextAlignment="Center" />
									</Border>

									<!--  redo value  -->
									<Border
										Grid.Row="0"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<Label Content="Redo Value Z" Style="{StaticResource lblSubValueHdr}" />
									</Border>

									<Border
										Grid.Row="1"
										Grid.Column="6"
										BorderBrush="DimGray"
										BorderThickness="0,0,1,0">
										<TextBlock
											Background="{StaticResource Normal.Inactive.Background}"
											Text="{Binding XYZ.RedoValueZ, StringFormat=F2}"
											TextAlignment="Center" />
									</Border>

								</Grid>
								<!--#endregion-->

							</Grid>
						</Border>
					</ControlTemplate>

					<DataTemplate x:Key="topopoints">
						<ContentControl Template="{StaticResource FieldPoints}" />
					</DataTemplate>

				</ListBox.Resources>

				<!--  header  -->
				<ListBox.Template>
					<ControlTemplate>
						<Border
							Margin="0,0,0,0"
							BorderBrush="Black"
							BorderThickness="1">
							<ScrollViewer VerticalScrollBarVisibility="Auto">
								<DockPanel Background="LightGray" LastChildFill="True">

									<Grid Background="Aqua" DockPanel.Dock="Top">
										<Grid.ColumnDefinitions>
											<!--  0  -->
											<ColumnDefinition Width="{StaticResource Lb3EditCtrlColWidth}" />
											<!--  1  -->
											<ColumnDefinition Width="{StaticResource Lb3IndexColWidth}" />
											<!--  2  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  3  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  4  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  5  -->
											<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
											<!--  6  -->
											<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
											<!--  7  -->
											<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
											<!--  8  -->
											<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Border Grid.Column="0" Style="{StaticResource PointsTestHeader}">
											<Label Content="Edit Control" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="1" Style="{StaticResource PointsTestHeader}">
											<Label Content="Index" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="2" Style="{StaticResource PointsTestHeader}">
											<Label Content="X" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="3" Style="{StaticResource PointsTestHeader}">
											<Label Content="Y" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="4" Style="{StaticResource PointsTestHeader}">
											<Label Content="Z" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="5" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔX" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="6" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔY" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="7" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔZ" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="8" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔXY" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="9" Style="{StaticResource PointsTestHeader}">
											<Label Content="ΔXYZ" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
										<Border Grid.Column="10" Style="{StaticResource PointsTestHeader}">
											<Label Content="Slope" Style="{StaticResource PointsTestHeaderLabel}" />
										</Border>
									</Grid>

									<ItemsPresenter Margin="-6,-1,-5,0" />
								</DockPanel>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</ListBox.Template>

			</ListBox>

			<Label
				Grid.Row="4"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Width="72"
				Height="22"
				Margin="24,52.2,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				Content="end point:"
				FontSize="16"
				Foreground="White"
				RenderTransformOrigin="0,1">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Grid
				Name="EndPointRow"
				Grid.Row="4"
				Grid.Column="1"
				Grid.ColumnSpan="2"
				Height="62"
				Margin="0.2,0.2,21.8,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource Lb3StartEndEditCtrlColWidth}" />
					<ColumnDefinition Width="{StaticResource Lb3StartEndIndexColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />

				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<DockPanel Grid.Column="1">
					<Label
						VerticalAlignment="Top"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.EndPointCp}"
						Style="{StaticResource controlPointLbl}" />

					<Label
						Width="38"
						VerticalAlignment="Top"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.EndPointIndex}"
						Style="{StaticResource controlPointLbl}" />


				</DockPanel>

				<Grid
					Name="Xendpoint"
					Grid.Column="2"
					Background="#3a3a3a">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label
						Grid.Row="0"
						Grid.Column="0"
						Grid.ColumnSpan="7"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.EndPointX, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblX}" />

					<Border
						Grid.Row="1"
						Grid.RowSpan="2"
						Grid.Column="1"
						Background="{StaticResource Normal.Inactive.Background}"
						BorderBrush="DimGray"
						BorderThickness="0,0,0,0" />

					<!--  buttong  -->
					<Button
						Grid.Row="1"
						Grid.Column="1"
						Click="Lb3BtnUndoEndPt_Click"
						Content="Undo"
						Style="{StaticResource controlPointBtnX}"
						Tag="{Binding TopoMgr.TpConsts.Xtag, ElementName=mainWindow}" />

					<Button
						Grid.Row="2"
						Grid.Column="1"
						Click="Lb3BtnRedoEndPt_Click"
						Content="Redo"
						Style="{StaticResource controlPointBtnX}"
						Tag="{Binding TopoMgr.TpConsts.Xtag, ElementName=mainWindow}" />

					<!--  tag  -->
					<Border
						Grid.Row="1"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TpConsts.Xtag, Mode=OneWay}" />
					</Border>

					<!--  is revised  -->
					<Border
						Grid.Row="1"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="IsRevisedX" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedX}" />
					</Border>

					<!--  undo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Undo Value X" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.UndoValueX, StringFormat=F2}" />
					</Border>

					<!--  has undo  -->
					<Border
						Grid.Row="1"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="HasUndoX" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.HasRedoX}" />
					</Border>

					<!--  redo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Redo Value X" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.RedoValueX, StringFormat=F2}" />
					</Border>



				</Grid>

				<!--#region > Y Endpoint-->
				<Grid Name="Yendpoint" Grid.Column="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label
						Grid.Row="0"
						Grid.Column="0"
						Grid.ColumnSpan="7"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.EndPointY, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblY}" />

					<Border
						Grid.Row="1"
						Grid.RowSpan="2"
						Grid.Column="1"
						Background="{StaticResource Normal.Inactive.Background}"
						BorderBrush="DimGray"
						BorderThickness="0,0,0,0" />

					<!--  buttons  -->
					<Button
						Grid.Row="1"
						Grid.Column="1"
						Click="Lb3BtnUndoEndPt_Click"
						Content="Undo"
						Style="{StaticResource controlPointBtnY}"
						Tag="{Binding TopoMgr.TpConsts.Ytag, ElementName=mainWindow}" />

					<Button
						Grid.Row="2"
						Grid.Column="1"
						Click="Lb3BtnRedoEndPt_Click"
						Content="Redo"
						Style="{StaticResource controlPointBtnY}"
						Tag="{Binding TopoMgr.TpConsts.Ytag, ElementName=mainWindow}" />

					<!--  tag  -->
					<Border
						Grid.Row="1"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TpConsts.Ytag, Mode=OneWay}" />
					</Border>

					<!--  is revised  -->
					<Border
						Grid.Row="1"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="IsRevisedY" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedY}" />
					</Border>

					<!--  undo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Undo Value Y" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.UndoValueY, StringFormat=F2}" />
					</Border>

					<!--  redo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Undo Value Y" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.RedoValueY, StringFormat=F2}" />
					</Border>

					<!--  has redo  -->
					<Border
						Grid.Row="1"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="HasRedoY" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.HasRedoY}" />
					</Border>


				</Grid>
				<!--#endregion-->

				<!--#region > Z endpoint-->
				<Grid Name="Zendpoint" Grid.Column="4">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  Z value  -->
					<Label
						Grid.Row="0"
						Grid.Column="0"
						Grid.ColumnSpan="7"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
						                                 IsDesignTimeCreatable=True}"
						Content="{Binding TopoMgr.TopoPts.EndPointZ, Converter={StaticResource Converter.Xyz}}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblZ}" />

					<Border
						Grid.Row="1"
						Grid.RowSpan="2"
						Grid.Column="1"
						Background="{StaticResource Normal.Inactive.Background}"
						BorderBrush="DimGray"
						BorderThickness="0,0,0,0" />

					<!--  buttons  -->
					<Button
						Grid.Row="1"
						Grid.Column="1"
						Click="Lb3BtnUndoEndPt_Click"
						Content="Undo"
						Style="{StaticResource controlPointBtnZ}"
						Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}" />
					<Button
						Grid.Row="2"
						Grid.Column="1"
						Click="Lb3BtnRedoEndPt_Click"
						Content="Redo"
						Style="{StaticResource controlPointBtnZ}"
						Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}" />


					<!--  tag  -->
					<Border
						Grid.Row="1"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<Label Content="tag" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="2"
						BorderBrush="DimGray"
						BorderThickness="1,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TpConsts.Ztag, Mode=OneWay}" />
					</Border>

					<!--  is revised  -->
					<Border
						Grid.Row="1"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="IsRevisedZ" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="3"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.IsRevisedZ}" />
					</Border>

					<!--  undo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Undo Value Z" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="4"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.UndoValueX, StringFormat=F2}" />
					</Border>

					<!--  has redo  -->
					<Border
						Grid.Row="1"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="HasRedoZ" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="5"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.HasRedoZ}" />
					</Border>

					<!--  redo value  -->
					<Border
						Grid.Row="1"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<Label Content="Redo Value Z" Style="{StaticResource lblSubValueHdr}" />
					</Border>

					<Border
						Grid.Row="2"
						Grid.Column="6"
						BorderBrush="DimGray"
						BorderThickness="0,0,1,0">
						<TextBlock
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
							                                 IsDesignTimeCreatable=True}"
							Style="{StaticResource TerminusTxBlk}"
							Text="{Binding TopoMgr.TopoPts.EndPointXYZ.RedoValueX, StringFormat=F2}" />
					</Border>


				</Grid>
				<!--#endregion-->

				<Label
					Grid.Column="5"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointXΔ}"
					ContentStringFormat="F2"
					Style="{StaticResource controlPointLblDelta}" />
				<Label
					Grid.Column="6"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointYΔ}"
					ContentStringFormat="F2"
					Style="{StaticResource controlPointLblDelta}" />
				<Label
					Grid.Column="7"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointZΔ}"
					ContentStringFormat="F2"
					Style="{StaticResource controlPointLblDelta}" />
				<Label
					Grid.Column="8"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointXYΔ}"
					ContentStringFormat="F4"
					Style="{StaticResource controlPointLblDelta}" />
				<Label
					Grid.Column="9"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointXYΔ}"
					ContentStringFormat="F4"
					Style="{StaticResource controlPointLblDelta}" />

				<Label
					Grid.Column="10"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
					                                 IsDesignTimeCreatable=True}"
					Content="{Binding TopoMgr.TopoPts.EndPointSlope}"
					ContentStringFormat="P3"
					Style="{StaticResource controlPointLblDelta}" />

			</Grid>


			<Label
				Grid.Row="0"
				Grid.RowSpan="2"
				Grid.Column="3"
				Width="72"
				Height="22"
				Margin="0.2,75,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Left"
				Content="messages:"
				FontSize="16"
				Foreground="White">
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox
				Name="TopoPoints2Message"
				Grid.Row="0"
				Grid.RowSpan="5"
				Grid.Column="3"
				Margin="30.2,0,8.6,-0.2"
				Padding="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Background="#444444"
				DataContext="{Binding ElementName=mainWindow}"
				FontSize="16"
				Foreground="White"
				Text="{Binding TopoMgr.TopoPts.Message}"
				VerticalScrollBarVisibility="Visible" />

		</Grid>

		<!--#endregion-->


		<ContentControl
			Grid.Row="2"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			Content="{StaticResource ListBox1}" />

		<ContentControl
			Grid.Row="2"
			Grid.Column="1"
			Content="{StaticResource ListView1}" />

		<!--#region > > control buttons-->

		<Button
			x:Name="btnDone"
			Grid.Row="3"
			Grid.Column="1"
			Width="97"
			Height="48"
			Margin="0,0,10,5"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="BtnDone_Click"
			Content="Done"
			IsCancel="True"
			IsDefault="True" />
		<Button
			x:Name="button_Copy"
			Grid.Row="3"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,119.8,5"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy_Click"
			Content="MultiLineWindow" />
		<Button
			x:Name="button_Copy1"
			Grid.Row="3"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,249.8,5"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy1_Click"
			Content="Header andFooter" />
		<Button
			x:Name="button_Copy3"
			Grid.Row="3"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,379.8,5"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy3_Click"
			Content="Control Points" />
		<Button
			x:Name="button_Copy2"
			Grid.Row="3"
			Grid.Column="1"
			Width="111"
			Height="48"
			Margin="0,0,507.6,5"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Click="Button_Copy4_Click"
			Content="Topo Points" />

		<!--#endregion-->

	</Grid>
</Window>

