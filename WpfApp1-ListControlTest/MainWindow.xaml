<Window x:Name="mainWindow" Title="MainWindow"
		x:Class="WpfApp1_ListControlTest.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:converter="clr-namespace:WpfApp1_ListControlTest.MainWinSupport"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:enumTag="clr-namespace:WpfApp1_ListControlTest.TopoPtsData3.Support"
		xmlns:local="clr-namespace:WpfApp1_ListControlTest"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:topoPtsData="clr-namespace:WpfApp1_ListControlTest.TopoPtsData"
		Width="1680"
		Height="1400"
		Loaded="MainWindow_Loaded"
		mc:Ignorable="d"
		Background="#FF2C2C2C"
		>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>

				<ResourceDictionary
						Source="WpfResources/VisualStates.xaml"
						/>
				<ResourceDictionary
						Source="MainWinSupport/MainWinResourceSupport.xaml"
						/>
				<ResourceDictionary
						Source="MainWinSupport/MainWinResource2.xaml"
						/>
			</ResourceDictionary.MergedDictionaries>

			<sys:String x:Key="Parent"
					>
				mainWindow
			</sys:String>



			<!--  overall field row  -->
			<GridLength x:Key="Lb3EditCtrlColWidth">
				36
			</GridLength>

			<GridLength x:Key="Lb3IndexColWidth">
				48
			</GridLength>

			<GridLength x:Key="XyzColWidth">
				230
			</GridLength>

			<GridLength x:Key="XdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="YdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="ZdeltaColWidth">
				50
			</GridLength>

			<GridLength x:Key="XYdeltaColWidth">
				50
			</GridLength>




			<!--  xyz fields  -->

			<GridLength x:Key="Lb3UndoRedoColWidth">
				30
			</GridLength>

			<GridLength x:Key="Lb3TagColWidth">
				16
			</GridLength>

			<GridLength x:Key="Lb3IsRevisedColWidth">
				*
			</GridLength>

			<GridLength x:Key="Lb3valueColWidth">
				56
			</GridLength>

			<GridLength x:Key="Lb3HasRedoColWidth">
				*
			</GridLength>



			<!--  start end rows  -->
			<GridLength x:Key="Lb3StartEndEditCtrlColWidth">
				1
			</GridLength>

			<GridLength x:Key="Lb3StartEndIndexColWidth">
				83.5
			</GridLength>



			<Style x:Key="TestButtonStyle"
					TargetType="Button"
					>
				<Setter Property="Height" Value="27" />
				<Setter Property="Margin" Value="1,0,1,0" />
				<Setter Property="Width" Value="80" />
			</Style>


			<Style x:Key="lblSubValueHdr"
					TargetType="{x:Type Label}"
					>
				<Setter Property="Background" Value="{StaticResource Normal.SelectedInActive.Background}" />
				<Setter Property="FontSize" Value="7" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>

		</ResourceDictionary>
	</Window.Resources>

	<Grid
			Margin="0,0,-0.4,7"
			>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="840" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="500" />
			<RowDefinition Height="*" />
			<RowDefinition Height="150" />
			<RowDefinition Height="60" />
		</Grid.RowDefinitions>

		<Grid.Resources>
			<ResourceDictionary>
				<ResourceDictionary.MergedDictionaries>
					<ResourceDictionary
							Source="MainWinSupport/MainWinResource1.xaml"
							/>

				</ResourceDictionary.MergedDictionaries>

			</ResourceDictionary>

		</Grid.Resources>

		<!--#region > List box / view 1  -->

		<ContentControl Content="{StaticResource ListBox1}"
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="2" />

		<ContentControl Content="{StaticResource ListView1}"
				Grid.Row="2"
				Grid.Column="1" />

		<!--#endregion -->

		<!--#region > > control buttons-->

		<Button x:Name="btnDone"
				Content="Done"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,10,5"
				Width="97"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				IsCancel="True"
				IsDefault="True"
				Click="BtnDone_Click" />
		<Button x:Name="button_Copy"
				Content="MultiLineWindow"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,119.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy_Click" />
		<Button x:Name="button_Copy1"
				Content="Header andFooter"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,249.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy1_Click" />
		<Button x:Name="button_Copy3"
				Content="Control Points"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,379.8,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy3_Click" />
		<Button x:Name="button_Copy2"
				Content="Topo Points"
				Grid.Row="3"
				Grid.Column="1"
				Margin="0,0,507.6,5"
				Width="111"
				Height="48"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Click="Button_Copy4_Click" />

		<!--#endregion -->

		<!--#region > listbox2-->
		<Grid
				Grid.Row="0"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Margin="0,0,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				>
			<Grid.RowDefinitions>
				<RowDefinition Height="110" />
				<RowDefinition Height="80" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="852*" />
				<ColumnDefinition Width="797*" />
			</Grid.ColumnDefinitions>

			<Label x:Name="label1" Content="* ListBox *"
					Grid.Row="0"
					Grid.Column="1"
					Margin="0.2,53,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
					Grid.Row="0"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="0.2,5,796.6,5.4"
					HorizontalAlignment="Stretch"
					Orientation="Vertical"
					>
				<Border
						Padding="1"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						BorderThickness="2"
						BorderBrush="White"
						>

					<StackPanel
							Margin="0"
							HorizontalAlignment="Left"
							Orientation="Horizontal"
							>
						<Button x:Name="test_all" Content="Test All"
								Click="BtnTestAll_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_add1" Content="Add 1"
								Click="BtnAdd1_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_insert1" Content="Insert 1"
								Click="BtnInsert1_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changeend" Content="Change End"
								Click="BtnChangeE_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changestart" Content="Change Start"
								Click="BtnChangeS_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4x" Content="Chg [4] X"
								Click="BtnChange4X_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4y" Content="Chg [4] Y"
								Click="BtnChange4Y_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_change4z" Content="Chg [4] Z"
								Click="BtnChange4Z_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
					</StackPanel>
				</Border>

				<StackPanel
						Margin="3"
						HorizontalAlignment="Stretch"
						Orientation="Vertical"
						>
					<StackPanel
							Margin="0,0,0,1"
							Orientation="Horizontal"
							>
						<Button x:Name="test_changestartx" Content="Chg Start X"
								Click="BtnChangeStartX_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_changeendx" Content="Chg End X"
								Click="BtnChangeEndX_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_contains" Content="Contains?"
								Click="BtnContains_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_indexof" Content="Index Of?"
								Click="BtnIndexOf_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
					</StackPanel>
					<StackPanel
							Orientation="Horizontal"
							>
						<Button x:Name="test_removeat" Content="Remove At (2)"
								Click="BtnRemoveAt_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_remove" Content="Remove (2)"
								Click="BtnRemove_Click"
								Style="{StaticResource TestButtonStyle}"
								/>

						<Button x:Name="test_copyto" Content="CopyTo"
								Click="BtnCopyTo_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_clear" Content="Clear"
								Click="BtnClear_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_batch_v1"
								Click="BtnBatch_Click"
								Style="{StaticResource TestButtonStyle}"
								>
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
											FontSize="9"
											Text="Batch X + 12&#x0D; to items 3 to 5"
											TextAlignment="Center"
											TextWrapping="Wrap"
											Background="Transparent"
											IsHitTestVisible="False"
											/>
								</DataTemplate>
							</Button.ContentTemplate>
						</Button>
						<Button x:Name="test_change4XYZ" Content="Chg [4] XYZ"
								Click="BtnChange4XYZ_Click"
								Style="{StaticResource TestButtonStyle}"
								/>
						<Button x:Name="test_batch_v2"
								Click="BtnBatchv2_Click"
								Style="{StaticResource TestButtonStyle}"
								>
							<Button.ContentTemplate>
								<DataTemplate>
									<TextBlock
											Text="Batch v2"
											TextWrapping="Wrap"
											Background="Transparent"
											IsHitTestVisible="False"
											/>
								</DataTemplate>
							</Button.ContentTemplate>

						</Button>
					</StackPanel>
				</StackPanel>
			</StackPanel>

			<ContentControl Content="{StaticResource listBox2}"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					/>

			<Label Content="start point:"
					Grid.Row="1"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,54.6,0,0"
					Width="76"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>


			</Label>

			<ContentControl Content="{StaticResource StartPoint2}"
					Grid.Row="1"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Bottom"
					/>

			<Label Content="end point:"
					Grid.Row="3"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,52.6,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90.236" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<ContentControl Content="{StaticResource EndPoint2}"
					Grid.Row="3"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					/>

			<Label x:Name="label1_Copy1" Content="messages:"
					Grid.Row="0"
					Grid.Column="2"
					Margin="0.2,75,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Left"
					FontSize="16"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox x:Name="tbxLbxMsg"
					Grid.Row="0"
					Grid.Column="2"
					Margin="30.2,0,10,0"
					Padding="0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					FontSize="16"
					DataContext="{Binding ElementName=mainWindow}"
					Text="{Binding tps.message}"
					VerticalScrollBarVisibility="Visible"
					Background="#444444"
					Foreground="White"
					/>

		</Grid>
		<!--#endregion-->

		<!--#region > listbox3-->

		<Grid Name="ListBox3Grid"
				Grid.Row="1"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				>
			<Grid.RowDefinitions>
				<RowDefinition Height="60" />
				<RowDefinition Height="60" />
				<RowDefinition Height="100" />
				<RowDefinition Height="*" />
				<RowDefinition Height="80" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="24.8" />
				<ColumnDefinition Width="238" />
				<ColumnDefinition Width="862" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid.Resources>

				<converter:TopoPoint2XYZConverter x:Key="Converter.Xyz"
						/>
				<converter:TopoPoint2SlopeConverter x:Key="Converter.Slope"
						/>
				<converter:NegateBooleanConverter x:Key="boolInvert"
						/>

				<Style x:Key="CellTxBlk"
						TargetType="{x:Type TextBlock}"
						>
					<Setter Property="Background" Value="#c1c1c1" />
					<Setter Property="Foreground" Value="#717171" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="Margin" Value="0,0,0,0" />
					<Setter Property="Padding" Value="3" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Top" />
				</Style>

				<Style x:Key="TerminusTxBlk"
						TargetType="TextBlock"
						>
					<Setter Property="Background" Value="{StaticResource Normal.Inactive.Background}" />
					<Setter Property="DataContext" Value="{Binding ElementName=mainWindow, Mode=OneWay}" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="TextAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Stretch" />
				</Style>

				<Style x:Key="TerminusTxBlkTag"
						TargetType="TextBlock"
						BasedOn="{StaticResource TerminusTxBlk}"
						>
					<Setter Property="FontSize" Value="6" />
					<Setter Property="TextWrapping" Value="Wrap" />
				</Style>

				<Style x:Key="controlPointLbl"
						TargetType="Label"
						>
					<Setter Property="Background" Value="#444444" />
					<Setter Property="DataContext" Value="{Binding ElementName=mainWindow, Mode=OneWay}" />
					<Setter Property="FontSize" Value="16" />
					<Setter Property="Foreground" Value="White" />
					<Setter Property="Height" Value="22" />
					<Setter Property="HorizontalAlignment" Value="Stretch" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="Margin" Value="2" />
					<Setter Property="Padding" Value="0" />
				</Style>

				<Style x:Key="controlPointLabel"
						TargetType="Label"
						BasedOn="{StaticResource controlPointLbl}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBoolean" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
						</Trigger>
					</Style.Triggers>
				</Style>


				<Style x:Key="controlPointLblDelta"
						TargetType="Label"
						BasedOn="{StaticResource controlPointLbl}"
						>
					<Setter Property="FontSize" Value="12" />
					<Setter Property="VerticalContentAlignment" Value="Center" />

				</Style>

				<!-- <Style x:Key="controlPointLblX" -->
				<!-- 		TargetType="Label" -->
				<!-- 		BasedOn="{StaticResource controlPointLbl}" -->
				<!-- 		> -->
				<!-- 	<Style.Triggers> -->
				<!-- 		<DataTrigger -->
				<!-- 				Binding="{Binding TopoMgr.TopoPts.EndPoint.XYZ.IsRevisedX}" -->
				<!-- 				Value="True" -->
				<!-- 				> -->
				<!-- 			<Setter Property="FontWeight" Value="Bold" /> -->
				<!-- 			<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" /> -->
				<!-- 		</DataTrigger> -->
				<!-- 	</Style.Triggers> -->
				<!-- </Style> -->
				<!-- -->
				<!-- <Style x:Key="controlPointLblY" -->
				<!-- 		TargetType="Label" -->
				<!-- 		BasedOn="{StaticResource controlPointLbl}" -->
				<!-- 		> -->
				<!-- 	<Style.Triggers> -->
				<!-- 		<DataTrigger -->
				<!-- 				Binding="{Binding TopoMgr.TopoPts.EndPoint.XYZ.IsRevisedY}" -->
				<!-- 				Value="True" -->
				<!-- 				> -->
				<!-- 			<Setter Property="FontWeight" Value="Bold" /> -->
				<!-- 			<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" /> -->
				<!-- 		</DataTrigger> -->
				<!-- 	</Style.Triggers> -->
				<!-- </Style> -->
				<!-- -->
				<!-- <Style x:Key="controlPointLblZ" -->
				<!-- 		TargetType="Label" -->
				<!-- 		BasedOn="{StaticResource controlPointLbl}" -->
				<!-- 		> -->
				<!-- 	<Style.Triggers> -->
				<!-- 		<DataTrigger -->
				<!-- 				Binding="{Binding TopoMgr.TopoPts.EndPoint.XYZ.IsRevisedZ}" -->
				<!-- 				Value="True" -->
				<!-- 				> -->
				<!-- 			<Setter Property="FontWeight" Value="Bold" /> -->
				<!-- 			<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" /> -->
				<!-- 		</DataTrigger> -->
				<!-- 	</Style.Triggers> -->
				<!-- </Style> -->

				<Style x:Key="controlPointBtn"
						TargetType="Button"
						>
					<Setter Property="Background" Value="White" />
					<Setter Property="BorderBrush" Value="#555555" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="FontSize" Value="8" />
					<Setter Property="Margin" Value="2,1,2,1" />
					<Setter Property="Padding" Value="0,1,0,0" />
					<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
					<Setter Property="VerticalContentAlignment" Value="Center" />

				</Style>

				<Style x:Key="undoBtn"
						TargetType="Button"
						BasedOn="{StaticResource controlPointBtn}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBoolean" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</Trigger>
						<Trigger Property="local:CustomProperties.GenericBoolean" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</Trigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="redoBtn"
						TargetType="Button"
						BasedOn="{StaticResource controlPointBtn}"
						>
					<Style.Triggers>
						<Trigger Property="local:CustomProperties.GenericBoolean" Value="True">
							<Setter Property="IsEnabled" Value="True" />
						</Trigger>
						<Trigger Property="local:CustomProperties.GenericBoolean" Value="False">
							<Setter Property="IsEnabled" Value="False" />
						</Trigger>
					</Style.Triggers>
				</Style>

			</Grid.Resources>

			<Label Content="** ListBox3 **"
					Grid.Row="0"
					Grid.RowSpan="2"
					Grid.Column="1"
					Margin="0.2,72,0,0"
					Width="94"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="top"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<StackPanel
					Grid.Row="0"
					Grid.RowSpan="2"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="3.2,3,2.8,3.4"
					HorizontalAlignment="Stretch"
					Orientation="Vertical"
					>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnInitialize" Content="Initialize"
							Click="BtnInitialize_Click"
							Style="{StaticResource TestButtonStyle}"
							/>

				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnChangeXof1" Content="Chg X of [1]"
							Click="BtnChangeXof1_Click"
							Style="{StaticResource TestButtonStyle}"
							/>

					<Button x:Name="BtnBatchAdjustZByAmount"
							Click="BtnBatchAdjustZByAmount_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Batch Add amt to&#x0D;[3] Z to [end]"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnBatchAdjustZBySlope" Content="Adj Z by Slope"
							Click="BtnBatchAdjustZBySlope_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
					<Button x:Name="BtnBatchAdd10ToYfrom3" Content="Add 10 to [3+]Y"
							Click="BtnBatchAdd10ToYfrom3_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
					<Button x:Name="BtnBatchAddAmtToYfrom3On"
							Click="BtnBatchAddAmtToYfrom3On_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 7+i to&#xA;[3+].Y"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="BtnBatchAdd5ToAll"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Batch Add 5&#x0D;to [1] to [end]"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToXofStart"
							Click="BtnAdd10ToXofStart_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[start] X"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToXofEnd"
							Click="BtnAdd10ToXofEnd_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[end] X"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToZofStart"
							Click="BtnAdd10ToZofStart_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[start] Z"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
					<Button x:Name="BtnAdd10ToZofEnd"
							Click="BtnAdd10ToZofEnd_Click"
							Style="{StaticResource TestButtonStyle}"
							>
						<Button.ContentTemplate>
							<DataTemplate>
								<TextBlock
										FontSize="9"
										Text="Add 10 to&#xA;[end] Z"
										TextAlignment="Center"
										TextWrapping="Wrap"
										Background="Transparent"
										IsHitTestVisible="False"
										/>
							</DataTemplate>
						</Button.ContentTemplate>
					</Button>
				</StackPanel>
				<StackPanel
						Margin="0,0,0,0"
						Orientation="Horizontal"
						>
					<Button x:Name="DebugMarker" Content="Debug Marker"
							Click="BtnDebugMarker_Click"
							Style="{StaticResource TestButtonStyle}"
							/>
				</StackPanel>
			</StackPanel>

			<Label Content="start point:"
					Grid.Row="2"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,56.6,0,1.4"
					Width="76"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>

				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Grid Name="StartPointGrid"
					Grid.Row="2"
					Grid.Column="1"
					Grid.ColumnSpan="3"
					Margin="0.2,0,-0.4,0.4"
					>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="84" />
					<ColumnDefinition Width="90" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="62" />
				</Grid.RowDefinitions>


				<Border
						Grid.Row="0"
						Grid.Column="0"
						VerticalAlignment="top"
						BorderThickness="0,0,1,0"
						BorderBrush="{StaticResource GridBorderGrey}"
						>
					<Label x:Name="label" Content="Selected index "
							Padding="0"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Right"
							Background="{StaticResource Normal.Background}"
							/>
				</Border>

				<Label Content="{Binding SelectedIndex, ElementName=ListBox3}"
						Grid.Row="0"
						Grid.Column="1"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="top"
						HorizontalContentAlignment="Left"
						Background="{StaticResource Normal.Background}"
						/>


				<Grid Name="StartPointRow"
						Grid.Row="2"
						Grid.Column="0"
						Grid.ColumnSpan="3"
						Margin="0,0,27.8,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{StaticResource Lb3StartEndEditCtrlColWidth}" />
						<ColumnDefinition Width="4.8" />
						<ColumnDefinition Width="78.4" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="{StaticResource XyzColWidth}" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />

					</Grid.ColumnDefinitions>

					<DockPanel
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Margin="0.2,0,0,0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							>

						<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.ControlPoint, Mode=OneWay}"
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Style="{StaticResource controlPointLbl}"
								/>

						<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Index, Mode=OneWay}"
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Style="{StaticResource controlPointLbl}"
								/>

					</DockPanel>

					<Grid Name="Xstartpoint"
							Grid.Column="3"
							Margin="0,0,0.4,0"
							Background="#3a3a3a"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0" />
							<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="26" />
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<!--  X  -->
						<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.X, Converter={StaticResource Converter.Xyz}}"
								Grid.Row="0"
								Grid.Column="0"
								Grid.ColumnSpan="7"
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
								ContentStringFormat="F2"
								Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
								Style="{StaticResource controlPointLabel}"
								/>

						<Border
								Grid.Row="1"
								Grid.RowSpan="2"
								Grid.Column="1"
								Background="{StaticResource Normal.Inactive.Background}"
								BorderThickness="0,0,0,0"
								BorderBrush="DimGray"
								/>

						<!--  button  -->
						<Button Content="Undo"
								Grid.Row="1"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
								Click="Lb3BtnUndo_Click"
								Style="{StaticResource undoBtn}"
								/>

						<Button Content="Redo"
								Grid.Row="2"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoX, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.XStartTag}"
								Click="Lb3BtnRedo_Click"
								Style="{StaticResource redoBtn}"
								/>

						<!--  tag  -->
						<Border
								Grid.Row="1"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="tag"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									Text="{Binding Source={x:Static enumTag:TopoPtsTags.XStartTag}, Path=Name}"
									Style="{StaticResource TerminusTxBlkTag}"
									/>
						</Border>

						<!--  is revised  -->
						<Border
								Grid.Row="1"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="IsRevisedX"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedX}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  undo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Undo Value X"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueX, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  has undo  -->
						<Border
								Grid.Row="1"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="HasUndoX"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoX}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  redo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Redo Value X"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueX, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>
					</Grid>

					<Grid Name="Ystartpoint"
							Grid.Column="4"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0" />
							<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="26" />
							<RowDefinition Height="18" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<!--  Y  -->
						<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Y, Converter={StaticResource Converter.Xyz}}"
								Grid.Row="0"
								Grid.Column="0"
								Grid.ColumnSpan="7"
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
								ContentStringFormat="F2"
								Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
								Style="{StaticResource controlPointLabel}"
								/>

						<Border
								Grid.Row="1"
								Grid.RowSpan="2"
								Grid.Column="1"
								Background="{StaticResource Normal.Inactive.Background}"
								BorderThickness="0,0,0,0"
								BorderBrush="DimGray"
								/>

						<!--  buttons  -->
						<Button Content="Undo"
								Grid.Row="1"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
								Click="Lb3BtnUndo_Click"
								Style="{StaticResource undoBtn}"
								/>

						<Button Content="Redo"
								Grid.Row="2"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoY, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.YStartTag}"
								Click="Lb3BtnRedo_Click"
								Style="{StaticResource redoBtn}"
								/>

						<!--  tag  -->
						<Border
								Grid.Row="1"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="tag"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									Text="{Binding Source={x:Static enumTag:TopoPtsTags.YStartTag}, Path=Name}"
									Style="{StaticResource TerminusTxBlkTag}"
									/>
						</Border>

						<!--  is revised  -->
						<Border
								Grid.Row="1"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="IsRevisedY"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedY}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  undo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Undo Value Y"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueY, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  redo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Undo Value Y"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueY, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  has redo  -->
						<Border
								Grid.Row="1"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="HasRedoY"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoY}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

					</Grid>

					<Grid Name="Zstartpoint"
							Grid.Column="5"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0" />
							<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
							<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="26" />
							<RowDefinition Height="18" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<!--  Z  -->
						<Label Content="{Binding Tpts3Mgr.Tpts3.StartPoint.Z, Converter={StaticResource Converter.Xyz}}"
								Grid.Row="0"
								Grid.Column="0"
								Grid.ColumnSpan="7"
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
								ContentStringFormat="F2"
								Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
								Style="{StaticResource controlPointLabel}"
								/>


						<Border
								Grid.Row="1"
								Grid.RowSpan="2"
								Grid.Column="1"
								Background="{StaticResource Normal.Inactive.Background}"
								BorderThickness="0,0,0,0"
								BorderBrush="DimGray"
								/>

						<!--  buttons  -->
						<Button Content="Undo"
								Grid.Row="1"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
								Click="Lb3BtnUndo_Click"
								Style="{StaticResource undoBtn}"
								/>
						<!--  Tag="{Binding TopoMgr.TpConsts.Ztag, ElementName=mainWindow}"  -->
						<Button Content="Redo"
								Grid.Row="2"
								Grid.Column="1"
								local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoZ, ElementName=mainWindow}"
								Tag="{x:Static enumTag:TopoPtsTags.ZStartTag}"
								Click="Lb3BtnRedo_Click"
								Style="{StaticResource redoBtn}"
								/>


						<!--  tag  -->
						<Border
								Grid.Row="1"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="tag"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="2"
								BorderThickness="1,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									Text="{Binding Source={x:Static enumTag:TopoPtsTags.ZStartTag}, Path=Name}"
									Style="{StaticResource TerminusTxBlkTag}"
									/>
						</Border>

						<!--  is revised  -->
						<Border
								Grid.Row="1"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="IsRevisedZ"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="3"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.IsRevisedZ}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  undo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Undo Value Z"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="4"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.UndoValueZ, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  has redo  -->
						<Border
								Grid.Row="1"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="HasRedoZ"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="5"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.HasRedoZ}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>

						<!--  redo value  -->
						<Border
								Grid.Row="1"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<Label Content="Redo Value Z"
									Style="{StaticResource lblSubValueHdr}"
									/>
						</Border>

						<Border
								Grid.Row="2"
								Grid.Column="6"
								BorderThickness="0,0,1,0"
								BorderBrush="DimGray"
								>
							<TextBlock
									d:DataContext="{d:DesignInstance Type=local:MainWindow,
																									 IsDesignTimeCreatable=True}"
									Text="{Binding Tpts3Mgr.Tpts3.StartPoint.XYZ.RedoValueZ, StringFormat=F2}"
									Style="{StaticResource TerminusTxBlk}"
									/>
						</Border>


					</Grid>

				</Grid>


			</Grid>

			<ListBox Name="ListBox3"
					Grid.Row="3"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="0.2,0,3.8,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					HorizontalContentAlignment="Stretch"
					d:DataContext="{d:DesignInstance Type=local:MainWindow,
																					 IsDesignTimeCreatable=True}"
					DataContext="{Binding ElementName=mainWindow}"
					Loaded="ListBox3_Loaded"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					SelectionChanged="ListBox3_SelectionChanged"
					Background="LightGray"
					IsSynchronizedWithCurrentItem="True"
					ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
					ItemTemplate="{DynamicResource topopoints}"
					ItemsSource="{Binding Tpts3Mgr.Tpts3, Mode=TwoWay}"
					>
				<ListBox.Resources>

					<Style x:Key="Lb3ApplyUndoBtn"
							TargetType="Button"
							>
						<Setter Property="Background" Value="White" />
						<Setter Property="Margin" Value="3,2,2,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Template" Value="{StaticResource Button.Normal.ControlTemplate}" />
						<Style.Resources>
							<Thickness x:Key="Normal.Default.BorderThickness.Inner"
									>
								6,0,0,0
							</Thickness>
						</Style.Resources>
					</Style>

					<Style x:Key="Lb3ApplyUndoForRowBtn"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoBtn}"
							>
						<Setter Property="FontSize" Value="10" />
					</Style>

					<Style x:Key="Lb3ApplyUndoForCellBtn"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoBtn}"
							>
						<Setter Property="FontSize" Value="8" />
						<Setter Property="Margin" Value="1,1,1,1" />
					</Style>

					<Style x:Key="Lb3ApplyUndoForCellBtnX"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedX}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="Lb3ApplyRedoForCellBtnX"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.HasRedoX}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoX}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="Lb3ApplyUndoForCellBtnY"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedY}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="Lb3ApplyRedoForCellBtnY"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.HasRedoY}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoY}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="Lb3ApplyUndoForCellBtnZ"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedZ}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.IsRevisedZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="Lb3ApplyRedoForCellBtnZ"
							TargetType="Button"
							BasedOn="{StaticResource Lb3ApplyUndoForCellBtn}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.HasRedoZ}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="True" />
									<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsBeingEdited}" Value="False" />
									<Condition Binding="{Binding XYZ.HasRedoZ}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="False" />
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="IsEnabled" Value="False" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBox"
							TargetType="{x:Type TextBox}"
							>
						<Setter Property="BorderThickness" Value="0,0,0,0" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="Margin" Value="0,0,0,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="VerticalAlignment" Value="Stretch" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="False"
									>
								<Setter Property="Foreground" Value="#555555" />
								<Setter Property="IsEnabled" Value="False" />
								<Setter Property="IsReadOnly" Value="True" />
							</DataTrigger>
							<DataTrigger
									Binding="{Binding IsBeingEdited}"
									Value="True"
									>
								<Setter Property="Background" Value="#cceeff" />
								<Setter Property="IsEnabled" Value="True" />
								<Setter Property="IsReadOnly" Value="False" />
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#FFC1EAFF" />
							</Trigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBoxX"
							TargetType="TextBox"
							BasedOn="{StaticResource CellTxBox}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedX}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>


					<Style x:Key="CellTxBoxY"
							TargetType="TextBox"
							BasedOn="{StaticResource CellTxBox}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedY}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="CellTxBoxZ"
							TargetType="TextBox"
							BasedOn="{StaticResource CellTxBox}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding XYZ.IsRevisedZ}"
									Value="True"
									>
								<Setter Property="FontWeight" Value="Bold" />
								<Setter Property="Foreground" Value="{StaticResource Normal.Modified.Foreground}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>

					<Style x:Key="lblHeaderBdrTop"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>

					<Style x:Key="lblHeaderBdrBottom"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="{DynamicResource GridBorderGrey}" />
						<Setter Property="BorderThickness" Value="0,0,1,0" />
						<Setter Property="Margin" Value="0" />
					</Style>

					<Style x:Key="FocusVisual"
							>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle
											Margin="5"
											SnapsToDevicePixels="true"
											Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
											StrokeDashArray="1 2"
											StrokeThickness="1"
											/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<Style x:Key="PointsTestHeader"
							TargetType="{x:Type Border}"
							>
						<Setter Property="BorderBrush" Value="Black" />
						<Setter Property="BorderThickness" Value="0,0,1,1" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="4,0,0,0" />
					</Style>

					<Style x:Key="PointsTestHeaderLabel"
							TargetType="{x:Type Label}"
							>
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>

					<Style x:Key="ListBoxItemStyle"
							TargetType="{x:Type ListBoxItem}"
							>
						<Style.Triggers>
							<DataTrigger
									Binding="{Binding ControlPoint}"
									Value="True"
									>
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="BorderBrush" Value="Transparent" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
						<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Setter Property="Padding" Value="4,1" />
						<Setter Property="SnapsToDevicePixels" Value="True" />

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate
										TargetType="{x:Type ListBoxItem}"
										>
									<Border x:Name="Bd"
											Margin="0,0,0,-4"
											Padding="{TemplateBinding Padding}"
											SnapsToDevicePixels="true"
											Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											>
										<ContentPresenter
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Border>
									<ControlTemplate.Triggers>

										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="False" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="True" />
												<Condition Property="IsSelected" Value="True" />
											</MultiTrigger.Conditions>
											<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
											<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
										</MultiTrigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					</Style>

					<ControlTemplate x:Key="FieldPoints"
							>
						<Border x:Name="BDx"
								BorderThickness="0,0,0,7"
								BorderBrush="{DynamicResource ShadowDetail}"
								>
							<Grid Name="FieldPointsGrid"
									Margin="2,0,0,0"
									IsHitTestVisible="True"
									>
								<Grid.ColumnDefinitions>
									<!--  0  -->
									<ColumnDefinition Width="{StaticResource Lb3EditCtrlColWidth}" />
									<!--  0  -->
									<ColumnDefinition Width="{StaticResource Lb3IndexColWidth}" />
									<!--  1  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  2  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  3  -->
									<ColumnDefinition Width="{StaticResource XyzColWidth}" />
									<!--  4  -->
									<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
									<!--  5  -->
									<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
									<!--  6  -->
									<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
									<!--  7  -->
									<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
									<!--  8  -->
									<ColumnDefinition Width="1*" />
									<!--  9  -->
									<ColumnDefinition Width="1*" />

								</Grid.ColumnDefinitions>

								<!--
									have two preface rows reserved
									for future use
								-->

								<Grid.RowDefinitions>
									<RowDefinition Height="0" />
									<RowDefinition Height="0" />
									<RowDefinition Height="20" />
									<RowDefinition Height="32" />

								</Grid.RowDefinitions>

								<!--#region > point values-->

								<!--  index  -->
								<Border Name="Index"
										Grid.Row="2"
										Grid.Column="1"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Text="{Binding Index}"
											Foreground="Black"
											IsReadOnly="True"
											Style="{StaticResource CellTxBox}"
											/>
								</Border>

								<!--  x  -->
								<Border Name="Xvalue"
										Grid.Row="2"
										Grid.Column="2"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Text="{Binding X, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxX}"
											/>
								</Border>

								<Border Name="Yvalue"
										Grid.Row="2"
										Grid.Column="3"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Text="{Binding Y, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxY}"
											/>
								</Border>
								<Border Name="Zvalue"
										Grid.Row="2"
										Grid.Column="4"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBox
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Text="{Binding Z, Converter={StaticResource Converter.Xyz}}"
											Style="{StaticResource CellTxBoxZ}"
											/>
								</Border>
								<Border Name="XΔ"
										Grid.Row="2"
										Grid.Column="5"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding XΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border
										Grid.Row="2"
										Grid.Column="6"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding YΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border
										Grid.Row="2"
										Grid.Column="7"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding ZΔ, StringFormat=F2}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border
										Grid.Row="2"
										Grid.Column="8"
										Style="{StaticResource lblHeaderBdrBottom}"
										>
									<TextBlock
											Text="{Binding XYΔ, StringFormat=F4}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border
										Grid.Row="2"
										Grid.Column="9"
										Style="{StaticResource lblHeaderBdrBottom}"
										>
									<TextBlock
											Text="{Binding XYZΔ, StringFormat=F4}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<Border
										Grid.Row="2"
										Grid.Column="10"
										Style="{StaticResource lblHeaderBdrTop}"
										>
									<TextBlock
											Text="{Binding Slope, Converter={StaticResource Converter.Slope}}"
											Style="{StaticResource CellTxBlk}"
											/>
								</Border>
								<!--#endregion-->

								<!--#region > index settings-->
								<Grid Name="IndexSettings"
										Grid.Row="3"
										Grid.Column="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="0" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<Border
											Grid.Row="0"
											Grid.Column="0"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="being edited"
												FontSize="7"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="0"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												FontSize="10"
												Text="{Binding IsBeingEdited}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--#endregion-->

								<!--#region > X settings-->

								<Grid Name="Xsettings"
										Grid.Row="3"
										Grid.Column="2"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="lb3BtnUndoX" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource Lb3ApplyUndoForCellBtnX}"
											/>

									<Button x:Name="lb3BtnRedoX" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.XTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource Lb3ApplyRedoForCellBtnX}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Source={x:Static enumTag:TopoPtsTags.XTag}, Path=Name}"
												Background="{StaticResource Normal.Inactive.Background}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedX"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedX}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value X"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueX, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>


									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoX"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoX}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value X"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueX, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--#endregion-->

								<!--#region > Y settings-->

								<Grid Name="Ysettings"
										Grid.Row="3"
										Grid.Column="3"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="lb3BtnUndoY" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource Lb3ApplyUndoForCellBtnY}"
											/>

									<Button x:Name="lb3BtnRedoY" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.YTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource Lb3ApplyRedoForCellBtnY}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Source={x:Static enumTag:TopoPtsTags.YTag}, Path=Name}"
												Background="{StaticResource Normal.Inactive.Background}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedY"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedY}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value Y"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueY, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoY"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoY}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value Y"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueY, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>


								</Grid>
								<!--#endregion-->

								<!--#region > Z settings-->

								<!--  z  -->
								<Grid Name="Zsettings"
										Grid.Row="3"
										Grid.Column="4"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0" />
										<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
										<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<!--  buttons  -->
									<Button x:Name="lb3BtnUndoZ" Content="Undo"
											Grid.Row="0"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Click="Lb3BtnUndo_Click"
											Style="{StaticResource Lb3ApplyUndoForCellBtnZ}"
											/>

									<Button x:Name="lb3BtnRedoZ" Content="Redo"
											Grid.Row="1"
											Grid.Column="1"
											d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
											Tag="{x:Static enumTag:TopoPtsTags.ZTag}"
											Click="Lb3BtnRedo_Click"
											Style="{StaticResource Lb3ApplyRedoForCellBtnZ}"
											/>

									<!--  tag  -->
									<Border
											Grid.Row="0"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="tag"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="2"
											BorderThickness="1,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding Source={x:Static enumTag:TopoPtsTags.ZTag}, Path=Name}"
												Background="{StaticResource Normal.Inactive.Background}"
												Style="{StaticResource TerminusTxBlkTag}"
												/>
									</Border>

									<!--  is revised  -->
									<Border
											Grid.Row="0"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="IsRevisedZ"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="3"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.IsRevisedZ}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  undo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Undo Value Z"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="4"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.UndoValueZ, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  has redo  -->
									<Border
											Grid.Row="0"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="HasRedoZ"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="5"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.HasRedoZ}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

									<!--  redo value  -->
									<Border
											Grid.Row="0"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<Label Content="Redo Value Z"
												Style="{StaticResource lblSubValueHdr}"
												/>
									</Border>

									<Border
											Grid.Row="1"
											Grid.Column="6"
											BorderThickness="0,0,1,0"
											BorderBrush="DimGray"
											>
										<TextBlock
												Text="{Binding XYZ.RedoValueZ, StringFormat=F2}"
												TextAlignment="Center"
												Background="{StaticResource Normal.Inactive.Background}"
												/>
									</Border>

								</Grid>
								<!--#endregion-->

							</Grid>
						</Border>
					</ControlTemplate>

					<DataTemplate x:Key="topopoints"
							>
						<ContentControl
								Template="{StaticResource FieldPoints}"
								/>
					</DataTemplate>

				</ListBox.Resources>

				<!--  header  -->
				<ListBox.Template>
					<ControlTemplate>
						<Border
								Margin="0,0,0,0"
								BorderThickness="1"
								BorderBrush="Black"
								>
							<ScrollViewer
									VerticalScrollBarVisibility="Auto"
									>
								<DockPanel
										LastChildFill="True"
										Background="LightGray"
										>

									<Grid
											DockPanel.Dock="Top"
											Background="Aqua"
											>
										<Grid.ColumnDefinitions>
											<!--  0  -->
											<ColumnDefinition Width="{StaticResource Lb3EditCtrlColWidth}" />
											<!--  1  -->
											<ColumnDefinition Width="{StaticResource Lb3IndexColWidth}" />
											<!--  2  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  3  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  4  -->
											<ColumnDefinition Width="{StaticResource XyzColWidth}" />
											<!--  5  -->
											<ColumnDefinition Width="{StaticResource XdeltaColWidth}" />
											<!--  6  -->
											<ColumnDefinition Width="{StaticResource YdeltaColWidth}" />
											<!--  7  -->
											<ColumnDefinition Width="{StaticResource ZdeltaColWidth}" />
											<!--  8  -->
											<ColumnDefinition Width="{StaticResource XYdeltaColWidth}" />
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Border
												Grid.Column="0"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Edit Control"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="1"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Index"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="2"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="X"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="3"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Y"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="4"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Z"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="5"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔX"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="6"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔY"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="7"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔZ"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="8"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔXY"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="9"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="ΔXYZ"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
										<Border
												Grid.Column="10"
												Style="{StaticResource PointsTestHeader}"
												>
											<Label Content="Slope"
													Style="{StaticResource PointsTestHeaderLabel}"
													/>
										</Border>
									</Grid>

									<ItemsPresenter
											Margin="-6,-1,-5,0"
											/>
								</DockPanel>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</ListBox.Template>

			</ListBox>

			<Label Content="end point:"
					Grid.Row="4"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="24,52.2,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Right"
					FontSize="16"
					RenderTransformOrigin="0,1"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<Grid Name="EndPointRow"
					Grid.Row="4"
					Grid.Column="1"
					Grid.ColumnSpan="2"
					Margin="0.2,0.2,21.8,0"
					Height="62"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{StaticResource Lb3StartEndEditCtrlColWidth}" />
					<ColumnDefinition Width="{StaticResource Lb3StartEndIndexColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="{StaticResource XyzColWidth}" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />

				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="62.4" />
				</Grid.RowDefinitions>

				<DockPanel
						Grid.Column="1"
						>
					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.ControlPoint}"
							VerticalAlignment="Top"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																							 IsDesignTimeCreatable=True}"
							Style="{StaticResource controlPointLbl}"
							/>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Index}"
							VerticalAlignment="Top"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																							 IsDesignTimeCreatable=True}"
							Style="{StaticResource controlPointLbl}"
							/>
				</DockPanel>

				<!--#region > X endpoint-->
				<Grid Name="Xendpoint"
						Grid.Column="2"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						Background="#3a3a3a"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.X, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignData Source={TemplateBinding}}"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																											 IsDesignTimeCreatable=True}"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoX, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.XEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Source={x:Static enumTag:TopoPtsTags.XEndTag}, Path=Name}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has undo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasUndoX"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoX}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value X"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueX, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>



				</Grid>
				<!--#endregion-->

				<!--#region > Y Endpoint-->
				<Grid Name="Yendpoint"
						Grid.Column="3"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="18" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Y, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																							 IsDesignTimeCreatable=True}"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>

					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoY, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.YEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Source={x:Static enumTag:TopoPtsTags.YEndTag}, Path=Name}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Y"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueY, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoY"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoY}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>


				</Grid>
				<!--#endregion-->

				<!--#region > Z endpoint-->
				<Grid Name="Zendpoint"
						Grid.Column="4"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0" />
						<ColumnDefinition Width="{StaticResource Lb3UndoRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3TagColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3IsRevisedColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3HasRedoColWidth}" />
						<ColumnDefinition Width="{StaticResource Lb3valueColWidth}" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="26" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--  Z value  -->
					<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Z, Converter={StaticResource Converter.Xyz}}"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="7"
							d:DataContext="{d:DesignInstance Type=local:MainWindow,
																							 IsDesignTimeCreatable=True}"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							ContentStringFormat="F2"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Style="{StaticResource controlPointLabel}"
							/>

					<Border
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="1"
							Background="{StaticResource Normal.Inactive.Background}"
							BorderThickness="0,0,0,0"
							BorderBrush="DimGray"
							/>

					<!--  buttons  -->
					<Button Content="Undo"
							Grid.Row="1"
							Grid.Column="1"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Click="Lb3BtnUndo_Click"
							Style="{StaticResource undoBtn}"
							/>
					<Button Content="Redo"
							Grid.Row="2"
							Grid.Column="1"
							local:CustomProperties.GenericBoolean="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoZ, ElementName=mainWindow}"
							Tag="{x:Static enumTag:TopoPtsTags.ZEndTag}"
							Click="Lb3BtnRedo_Click"
							Style="{StaticResource redoBtn}"
							/>

					<!--  tag  -->
					<Border
							Grid.Row="1"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="tag"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="2"
							BorderThickness="1,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								Text="{Binding Source={x:Static enumTag:TopoPtsTags.ZEndTag}, Path=Name}"
								Style="{StaticResource TerminusTxBlkTag}"
								/>
					</Border>

					<!--  is revised  -->
					<Border
							Grid.Row="1"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="IsRevisedZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="3"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.IsRevisedZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  undo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Undo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="4"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.UndoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  has redo  -->
					<Border
							Grid.Row="1"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="HasRedoZ"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="5"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.HasRedoZ}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>

					<!--  redo value  -->
					<Border
							Grid.Row="1"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<Label Content="Redo Value Z"
								Style="{StaticResource lblSubValueHdr}"
								/>
					</Border>

					<Border
							Grid.Row="2"
							Grid.Column="6"
							BorderThickness="0,0,1,0"
							BorderBrush="DimGray"
							>
						<TextBlock
								d:DataContext="{d:DesignInstance Type=local:MainWindow,
																								 IsDesignTimeCreatable=True}"
								Text="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZ.RedoValueZ, StringFormat=F2}"
								Style="{StaticResource TerminusTxBlk}"
								/>
					</Border>
				</Grid>

				<!--#endregion-->

				<Label Name="Label"
						Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XΔ}"
						Grid.Column="5"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.YΔ}"
						Grid.Column="6"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.ZΔ}"
						Grid.Column="7"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="F2"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYΔ}"
						Grid.Column="8"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="F4"
						Style="{StaticResource controlPointLblDelta}"
						/>
				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.XYZΔ}"
						Grid.Column="9"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="F4"
						Style="{StaticResource controlPointLblDelta}"
						/>

				<Label Content="{Binding Tpts3Mgr.Tpts3.EndPoint.Slope}"
						Grid.Column="10"
						d:DataContext="{d:DesignInstance Type=local:MainWindow,
																						 IsDesignTimeCreatable=True}"
						ContentStringFormat="P3"
						Style="{StaticResource controlPointLblDelta}"
						/>

			</Grid>

			<Label Content="messages:"
					Grid.Row="0"
					Grid.RowSpan="2"
					Grid.Column="3"
					Margin="0.2,75,0,0"
					Width="72"
					Height="22"
					Padding="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Left"
					FontSize="16"
					Foreground="White"
					>
				<Label.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform Angle="-90" />
						<TranslateTransform />
					</TransformGroup>
				</Label.RenderTransform>
			</Label>

			<TextBox Name="TopoPoints2Message"
					Grid.Row="0"
					Grid.RowSpan="5"
					Grid.Column="3"
					Margin="30.2,0,8.6,-0.2"
					Padding="0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					FontSize="16"
					DataContext="{Binding ElementName=mainWindow}"
					Text="{Binding Tpts3Mgr.Tpts3.Message}"
					VerticalScrollBarVisibility="Visible"
					Background="#444444"
					Foreground="White"
					/>

		</Grid>

		<!--#endregion-->

	</Grid>
</Window>

