<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib"
		>
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="MasterColorList.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Color x:Key="Blue.Medium">
		#FF26A0DA
	</Color>

	<!--
		button
		-	mouseover = true
		- isdefaulted = true
		-	is pressed = true
		- disabled (enabled is false) = true
		
		- normal
		- unfocused
		- focused
		- defaulted
		
		textbox
		-	mouseover
		-	pressed
		- disabled (enabled is false)
		- normal
		- unfocused
		- focused
		
		
		as in, the value is not valid
		- invalid unfocused
		- invalid focused
		end
	-->

	<!--#region > Values-->

	<!--#region > Normal-->
	<!--  normal / typical colors / thicknesses  -->

	<Thickness x:Key="Normal.BorderThickness">
		2
	</Thickness>
	<Thickness x:Key="Normal.Default.BorderThickness.Inner">
		0, 0, 0, 4
	</Thickness>

	<SolidColorBrush x:Key="Normal.Background.C"
			Color="{StaticResource gray.970}"
			/>
	<SolidColorBrush x:Key="Normal.Foreground.C"
			Color="{StaticResource gray.100}"
			/>
	<SolidColorBrush x:Key="Normal.Border.C"
			Color="{StaticResource true.black}"
			/>

	<SolidColorBrush x:Key="Normal.Inactive.Background.C"
			Color="{StaticResource gray.700}"
			/>
	<SolidColorBrush x:Key="Normal.Inactive.Foreground.C"
			Color="{StaticResource gray.300}"
			/>


	<SolidColorBrush x:Key="Normal.MouseOver.Background.C"
			Color="{StaticResource light.blue.950}"
			/>
	<SolidColorBrush x:Key="Normal.MouseOver.Border.C"
			Color="{StaticResource light.blue.700}"
			/>

	<SolidColorBrush x:Key="Normal.Pressed.Background.C"
			Color="{StaticResource light.blue.900}"
			/>
	<SolidColorBrush x:Key="Normal.Pressed.Border.C"
			Color="{StaticResource light.blue.400}"
			/>
	<SolidColorBrush x:Key="Normal.Pressed.Default.Inner.Border.C"
			Color="{StaticResource light.blue.300}"
			/>

	<SolidColorBrush x:Key="Normal.SelectedActive.Background.C"
			Color="{StaticResource light.blue.900}"
			/>
	<SolidColorBrush x:Key="Normal.SelectedActive.Border.C"
			Color="{StaticResource light.blue.400}"
			/>

	<SolidColorBrush x:Key="Normal.SelectedInActive.Background.C"
			Color="{StaticResource gray.820}"
			/>
	<SolidColorBrush x:Key="Normal.SelectedInActive.Border.C"
			Color="{StaticResource gray.900}"
			/>

	<SolidColorBrush x:Key="Normal.Disabled.Background.C"
			Color="{StaticResource gray.800}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Foreground.C"
			Color="{StaticResource gray.500}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Border.C"
			Color="{StaticResource gray.700}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Border.Inner.C"
			Color="{StaticResource gray.700}"
			/>

	<SolidColorBrush x:Key="Normal.Default.Border.Inner.C"
			Color="{StaticResource blue.300}"
			/>
	<!--#endregion-->

	<!--#region > Control Specific-->

	<!--  listbox  -->

	<!--  selected active  -->
	<SolidColorBrush x:Key="Gray.SelectedActive.Background.C"
			Color="{StaticResource gray.900}"
			/>

	<!--  un-selected active  -->
	<SolidColorBrush x:Key="Gray.UnSelected.Foreground.C"
			Color="{StaticResource gray.200}"
			/>
	<!--#endregion-->

	<!--#endregion-->

	<!--#region > Brushes-->

	<!--#region > Normal-->

	<!--  normal  -->
	<!--  normal = true  -->
	<SolidColorBrush x:Key="Normal.Background"
			Color="{Binding Color, Source={StaticResource Normal.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.BorderBrush"
			Color="{Binding Color, Source={StaticResource Normal.Border.C}}"
			/>

	<SolidColorBrush x:Key="Normal.Inactive.Background"
			Color="{Binding Color, Source={StaticResource Normal.Inactive.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Inactive.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Inactive.Foreground.C}}"
			/>

	<!--  mouseover = true  -->
	<SolidColorBrush x:Key="Normal.MouseOver.Background"
			Color="{Binding Color, Source={StaticResource Normal.MouseOver.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.MouseOver.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.MouseOver.Border"
			Color="{Binding Color, Source={StaticResource Normal.MouseOver.Border.C}}"
			/>

	<!--  mouseover = true  -->
	<SolidColorBrush x:Key="Normal.Pressed.Background"
			Color="{Binding Color, Source={StaticResource Normal.Pressed.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Pressed.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Pressed.Border"
			Color="{Binding Color, Source={StaticResource Normal.Pressed.Border.C}}"
			/>

	<!--  selected active  -->
	<SolidColorBrush x:Key="Normal.SelectedActive.Background"
			Color="{Binding Color, Source={StaticResource Normal.SelectedActive.Background.C}}"
			/>

	<SolidColorBrush x:Key="Normal.SelectedActive.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.SelectedActive.Border"
			Color="{Binding Color, Source={StaticResource Normal.SelectedActive.Border.C}}"
			/>

	<!--  selected inactive  -->
	<SolidColorBrush x:Key="Normal.SelectedInActive.Background"
			Color="{Binding Color, Source={StaticResource Normal.SelectedInActive.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.SelectedInActive.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.SelectedInActive.Border"
			Color="{Binding Color, Source={StaticResource Normal.SelectedInActive.Border.C}}"
			/>

	<!--  disabled = IsEnabled == false  -->
	<SolidColorBrush x:Key="Normal.Disabled.Background"
			Color="{Binding Color, Source={StaticResource Normal.Disabled.Background.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Foreground"
			Color="{Binding Color, Source={StaticResource Normal.Disabled.Foreground.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Border"
			Color="{Binding Color, Source={StaticResource Normal.Disabled.Border.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Disabled.Border.Inner"
			Color="{Binding Color, Source={StaticResource Normal.Disabled.Border.Inner.C}}"
			/>

	<!--  isdefaulted = true  (e.g. button)  -->
	<SolidColorBrush x:Key="Normal.Default.Border"
			Color="{Binding Color, Source={StaticResource Normal.Border.C}}"
			/>
	<SolidColorBrush x:Key="Normal.Default.Border.Inner"
			Color="{Binding Color, Source={StaticResource Normal.Default.Border.Inner.C}}"
			/>

	<!--#endregion-->

	<!--#region > Control Specific Brushes-->

	<!--  listbox  -->

	<!--  selected active  -->
	<SolidColorBrush x:Key="Gray.SelectedActive.Background"
			Color="{Binding Color, Source={StaticResource Gray.SelectedActive.Background.C}}"
			/>

	<!--  un-selected  -->
	<SolidColorBrush x:Key="Gray.UnSelected.Foreground"
			Color="{Binding Color, Source={StaticResource Gray.UnSelected.Foreground.C}}"
			/>

	<!--#endregion-->

	<!--#endregion-->

	<!--#region > Styles-->

	<Style x:Key="Control.Normal.Style"
			TargetType="Control"
			>
		<Setter Property="Background" Value="{StaticResource Normal.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource Normal.BorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource Normal.BorderThickness}" />
		<Setter Property="Foreground" Value="{StaticResource Normal.Foreground}" />
	</Style>

	<Style x:Key="ListBox.Normal.Style"
			BasedOn="{StaticResource Control.Normal.Style}"
			TargetType="ListBox"
			/>

	<Style x:Key="Button.Normal.Style"
			BasedOn="{StaticResource Control.Normal.Style}"
			TargetType="Button"
			>

	</Style>
	<!-- <Setter Property="Background" Value="{StaticResource Normal.Disabled.Background}" /> -->
	<!--  listbox item container style  -->
	<Style x:Key="ListBox.Normal.ItemContainer"
			TargetType="{x:Type ListBoxItem}"
			>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Margin" Value="0,2,0,0" />
		<Setter Property="Padding" Value="4,1" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="true" Background="Transparent"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Normal.MouseOver.Background}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Normal.MouseOver.Border}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Normal.SelectedInActive.Background}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Normal.SelectedInActive.Border}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Gray.SelectedActive.Background}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Normal.SelectedActive.Border}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
	</Style>

	<!--#endregion-->

	<!--#region > Control Templates-->

	<ControlTemplate x:Key="Button.Normal.ControlTemplate"
			TargetType="Button"
			
			>
		<Border x:Name="border"
				SnapsToDevicePixels="True"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				
				>
			<Border x:Name="bdr1"
					Margin="0"
					
					BorderThickness="{StaticResource Normal.Default.BorderThickness.Inner}"
					BorderBrush="Transparent"
					>

				<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						ContentStringFormat="{TemplateBinding ContentStringFormat}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						Focusable="False" RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
			</Border>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsDefault" Value="True">
				<Setter TargetName="bdr1" Property="BorderBrush" Value="{StaticResource Normal.Default.Border.Inner}" />
				<Setter TargetName="bdr1" Property="BorderThickness" Value="{StaticResource Normal.Default.BorderThickness.Inner}" />

			</Trigger>
			<Trigger Property="IsDefault" Value="False">
				<Setter TargetName="bdr1" Property="BorderBrush" Value="Transparent" />
				<Setter TargetName="bdr1" Property="BorderThickness" Value="0" />
			</Trigger>

			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Foreground" Value="{StaticResource Normal.MouseOver.Foreground}" />
				<Setter TargetName="border" Property="Background" Value="{StaticResource Normal.MouseOver.Background}" />
				<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Normal.MouseOver.Border}" />
			</Trigger>

			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{StaticResource Normal.Pressed.Foreground}" />
				<Setter TargetName="bdr1" Property="BorderBrush" Value="{StaticResource Normal.Pressed.Default.Inner.Border.C}" />
				<Setter TargetName="border" Property="Background" Value="{StaticResource Normal.Pressed.Background}" />
				<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Normal.Pressed.Border}" />
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Normal.Disabled.Foreground}" />
				<Setter TargetName="bdr1" Property="BorderBrush" Value="{StaticResource Normal.Disabled.Border.Inner}" />
				<Setter TargetName="border" Property="Background" Value="{StaticResource Normal.Disabled.Background}" />
				<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Normal.Disabled.Border}" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--#endregion-->

</ResourceDictionary>


<!--<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2"
								SnapsToDevicePixels="true"
								Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
								StrokeDashArray="1 2"
								StrokeThickness="1"
								/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->
